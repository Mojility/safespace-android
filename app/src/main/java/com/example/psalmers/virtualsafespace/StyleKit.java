package com.example.psalmers.virtualsafespace;

import android.graphics.Paint;
import android.graphics.RectF;
import android.graphics.Shader;
import android.graphics.LinearGradient;
import android.graphics.RadialGradient;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Path;
import java.util.Arrays;



/**
 * Created by Stacey Vetzal on 2017-03-25.
 * Copyright Â© 2017 Mojility Inc.. All rights reserved.
 *
 * Generated by PaintCode
 * http://www.paintcodeapp.com
 *
 * @author Stacey Vetzal
 */
public class StyleKit {
    // Colors
    static int primaryBlue = Color.argb(255, 6, 30, 68);
    static int brightWhite = Color.argb(255, 255, 255, 254);
    static int lightGray = Color.argb(255, 215, 216, 214);
    static int yellow = Color.argb(255, 221, 176, 67);
    static int teal = Color.argb(255, 0, 121, 150);
    static int green = Color.argb(255, 139, 156, 69);
    static int darkGray = Color.argb(255, 58, 59, 58);
    static int extraLightGray = Color.argb(255, 240, 240, 240);
    
    
    
    
    // Resizing Behavior
    public enum ResizingBehavior {
        AspectFit, //!< The content is proportionally resized to fit into the target rectangle.
        AspectFill, //!< The content is proportionally resized to completely fill the target rectangle.
        Stretch, //!< The content is stretched to match the entire target rectangle.
        Center, //!< The content is centered in the target rectangle, but it is NOT resized.
    }
    
    // Canvas Drawings
    // LogoTab
    
    private static class CacheForLogo {
        private static Paint paint = new Paint();
        private static PaintCodeGradient gradient2 = null;
        private static PaintCodeGradient gradient = null;
        private static RectF originalFrame = new RectF(0f, 0f, 325f, 313f);
        private static RectF resizedFrame = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static PaintCodeLinearGradient bezierPathGradient = new PaintCodeLinearGradient();
        private static RectF group3 = new RectF();
        private static Path clipPath = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezier6Rect = new RectF();
        private static Path bezier6Path = new Path();
        private static RectF bezier7Rect = new RectF();
        private static Path bezier7Path = new Path();
        private static RectF bezier8Rect = new RectF();
        private static Path bezier8Path = new Path();
        private static RectF bezier9Rect = new RectF();
        private static Path bezier9Path = new Path();
        private static RectF bezier10Rect = new RectF();
        private static Path bezier10Path = new Path();
        private static RectF bezier11Rect = new RectF();
        private static Path bezier11Path = new Path();
        private static RectF bezier12Rect = new RectF();
        private static Path bezier12Path = new Path();
        private static RectF bezier13Rect = new RectF();
        private static Path bezier13Path = new Path();
        private static RectF bezier14Rect = new RectF();
        private static Path bezier14Path = new Path();
        private static RectF bezier15Rect = new RectF();
        private static Path bezier15Path = new Path();
        private static RectF bezier16Rect = new RectF();
        private static Path bezier16Path = new Path();
        private static RectF bezier17Rect = new RectF();
        private static Path bezier17Path = new Path();
        private static RectF bezier18Rect = new RectF();
        private static Path bezier18Path = new Path();
        private static RectF bezier19Rect = new RectF();
        private static Path bezier19Path = new Path();
        private static RectF bezier20Rect = new RectF();
        private static Path bezier20Path = new Path();
        private static RectF bezier21Rect = new RectF();
        private static Path bezier21Path = new Path();
        private static RectF bezier22Rect = new RectF();
        private static Path bezier22Path = new Path();
        private static RectF bezier23Rect = new RectF();
        private static Path bezier23Path = new Path();
        private static RectF bezier24Rect = new RectF();
        private static Path bezier24Path = new Path();
        private static RectF bezier25Rect = new RectF();
        private static Path bezier25Path = new Path();
        private static RectF bezier26Rect = new RectF();
        private static Path bezier26Path = new Path();
        private static RectF bezier27Rect = new RectF();
        private static Path bezier27Path = new Path();
        private static RectF ovalRect = new RectF();
        private static Path ovalPath = new Path();
        private static PaintCodeLinearGradient ovalPathGradient = new PaintCodeLinearGradient();
        private static RectF bezier28Rect = new RectF();
        private static Path bezier28Path = new Path();
        private static RectF bezier29Rect = new RectF();
        private static Path bezier29Path = new Path();
        private static RectF bezier30Rect = new RectF();
        private static Path bezier30Path = new Path();
        private static RectF bezier31Rect = new RectF();
        private static Path bezier31Path = new Path();
        private static RectF bezier32Rect = new RectF();
        private static Path bezier32Path = new Path();
        private static RectF bezier33Rect = new RectF();
        private static Path bezier33Path = new Path();
        private static RectF bezier34Rect = new RectF();
        private static Path bezier34Path = new Path();
        private static RectF bezier35Rect = new RectF();
        private static Path bezier35Path = new Path();
        private static RectF bezier36Rect = new RectF();
        private static Path bezier36Path = new Path();
        private static RectF bezier37Rect = new RectF();
        private static Path bezier37Path = new Path();
        private static RectF bezier38Rect = new RectF();
        private static Path bezier38Path = new Path();
        private static RectF bezier39Rect = new RectF();
        private static Path bezier39Path = new Path();
        private static RectF bezier40Rect = new RectF();
        private static Path bezier40Path = new Path();
        private static RectF bezier41Rect = new RectF();
        private static Path bezier41Path = new Path();
        private static RectF bezier42Rect = new RectF();
        private static Path bezier42Path = new Path();
        private static RectF bezier43Rect = new RectF();
        private static Path bezier43Path = new Path();
        private static RectF bezier44Rect = new RectF();
        private static Path bezier44Path = new Path();
        private static RectF bezier45Rect = new RectF();
        private static Path bezier45Path = new Path();
        private static RectF bezier46Rect = new RectF();
        private static Path bezier46Path = new Path();
        private static RectF bezier47Rect = new RectF();
        private static Path bezier47Path = new Path();
        private static RectF bezier48Rect = new RectF();
        private static Path bezier48Path = new Path();
        private static RectF bezier49Rect = new RectF();
        private static Path bezier49Path = new Path();
        private static RectF bezier50Rect = new RectF();
        private static Path bezier50Path = new Path();
        private static RectF bezier51Rect = new RectF();
        private static Path bezier51Path = new Path();
        private static RectF bezier52Rect = new RectF();
        private static Path bezier52Path = new Path();
        private static RectF bezier53Rect = new RectF();
        private static Path bezier53Path = new Path();
        private static RectF bezier54Rect = new RectF();
        private static Path bezier54Path = new Path();
        private static RectF bezier55Rect = new RectF();
        private static Path bezier55Path = new Path();
        private static RectF bezier56Rect = new RectF();
        private static Path bezier56Path = new Path();
        private static RectF bezier57Rect = new RectF();
        private static Path bezier57Path = new Path();
        private static RectF bezier58Rect = new RectF();
        private static Path bezier58Path = new Path();
        private static RectF bezier59Rect = new RectF();
        private static Path bezier59Path = new Path();
        private static RectF bezier60Rect = new RectF();
        private static Path bezier60Path = new Path();
        private static RectF bezier61Rect = new RectF();
        private static Path bezier61Path = new Path();
        private static RectF bezier62Rect = new RectF();
        private static Path bezier62Path = new Path();
        private static RectF bezier63Rect = new RectF();
        private static Path bezier63Path = new Path();
        private static RectF bezier64Rect = new RectF();
        private static Path bezier64Path = new Path();
        private static RectF bezier65Rect = new RectF();
        private static Path bezier65Path = new Path();
        private static RectF bezier66Rect = new RectF();
        private static Path bezier66Path = new Path();
        private static RectF bezier67Rect = new RectF();
        private static Path bezier67Path = new Path();
        private static RectF bezier68Rect = new RectF();
        private static Path bezier68Path = new Path();
        private static RectF bezier69Rect = new RectF();
        private static Path bezier69Path = new Path();
        private static RectF bezier70Rect = new RectF();
        private static Path bezier70Path = new Path();
        private static RectF bezier71Rect = new RectF();
        private static Path bezier71Path = new Path();
        private static RectF bezier72Rect = new RectF();
        private static Path bezier72Path = new Path();
        private static RectF bezier73Rect = new RectF();
        private static Path bezier73Path = new Path();
        private static RectF bezier74Rect = new RectF();
        private static Path bezier74Path = new Path();
        private static RectF bezier75Rect = new RectF();
        private static Path bezier75Path = new Path();
        private static RectF bezier76Rect = new RectF();
        private static Path bezier76Path = new Path();
        private static RectF bezier77Rect = new RectF();
        private static Path bezier77Path = new Path();
        private static RectF bezier78Rect = new RectF();
        private static Path bezier78Path = new Path();
        private static RectF bezier79Rect = new RectF();
        private static Path bezier79Path = new Path();
        private static RectF bezier80Rect = new RectF();
        private static Path bezier80Path = new Path();
        private static RectF bezier81Rect = new RectF();
        private static Path bezier81Path = new Path();
        private static RectF bezier82Rect = new RectF();
        private static Path bezier82Path = new Path();
        private static RectF bezier83Rect = new RectF();
        private static Path bezier83Path = new Path();
        private static RectF bezier84Rect = new RectF();
        private static Path bezier84Path = new Path();
        private static RectF bezier85Rect = new RectF();
        private static Path bezier85Path = new Path();
        private static RectF bezier86Rect = new RectF();
        private static Path bezier86Path = new Path();
        private static RectF bezier87Rect = new RectF();
        private static Path bezier87Path = new Path();
        private static RectF bezier88Rect = new RectF();
        private static Path bezier88Path = new Path();
        private static RectF bezier89Rect = new RectF();
        private static Path bezier89Path = new Path();
        private static RectF bezier90Rect = new RectF();
        private static Path bezier90Path = new Path();
        private static RectF bezier91Rect = new RectF();
        private static Path bezier91Path = new Path();
        private static RectF bezier92Rect = new RectF();
        private static Path bezier92Path = new Path();
        private static RectF bezier93Rect = new RectF();
        private static Path bezier93Path = new Path();
        private static RectF bezier94Rect = new RectF();
        private static Path bezier94Path = new Path();
        private static RectF bezier95Rect = new RectF();
        private static Path bezier95Path = new Path();
        private static RectF bezier96Rect = new RectF();
        private static Path bezier96Path = new Path();
        private static RectF bezier97Rect = new RectF();
        private static Path bezier97Path = new Path();
        private static RectF bezier98Rect = new RectF();
        private static Path bezier98Path = new Path();
        private static RectF bezier99Rect = new RectF();
        private static Path bezier99Path = new Path();
        private static RectF bezier100Rect = new RectF();
        private static Path bezier100Path = new Path();
        private static RectF bezier101Rect = new RectF();
        private static Path bezier101Path = new Path();
        private static RectF bezier102Rect = new RectF();
        private static Path bezier102Path = new Path();
        private static RectF bezier103Rect = new RectF();
        private static Path bezier103Path = new Path();
        private static RectF bezier104Rect = new RectF();
        private static Path bezier104Path = new Path();
        private static RectF bezier105Rect = new RectF();
        private static Path bezier105Path = new Path();
        private static RectF bezier106Rect = new RectF();
        private static Path bezier106Path = new Path();
        private static RectF bezier107Rect = new RectF();
        private static Path bezier107Path = new Path();
        private static RectF bezier108Rect = new RectF();
        private static Path bezier108Path = new Path();
        private static RectF bezier109Rect = new RectF();
        private static Path bezier109Path = new Path();
        private static RectF bezier110Rect = new RectF();
        private static Path bezier110Path = new Path();
        private static RectF bezier111Rect = new RectF();
        private static Path bezier111Path = new Path();
        private static RectF bezier112Rect = new RectF();
        private static Path bezier112Path = new Path();
        private static RectF bezier113Rect = new RectF();
        private static Path bezier113Path = new Path();
        private static RectF bezier114Rect = new RectF();
        private static Path bezier114Path = new Path();
        private static RectF bezier115Rect = new RectF();
        private static Path bezier115Path = new Path();
        private static RectF bezier116Rect = new RectF();
        private static Path bezier116Path = new Path();
        private static RectF bezier117Rect = new RectF();
        private static Path bezier117Path = new Path();
    }
    
    public static void drawLogo(Canvas canvas) {
        StyleKit.drawLogo(canvas, new RectF(0f, 0f, 325f, 313f), ResizingBehavior.AspectFit);
    }
    
    public static void drawLogo(Canvas canvas, RectF targetFrame, ResizingBehavior resizing) {
        // General Declarations
        Paint paint = CacheForLogo.paint;
        
        // Local Colors
        int gradientColor3 = Color.argb(255, 74, 68, 87);
        int gradientColor12 = Color.argb(255, 55, 75, 108);
        int gradientColor2 = Color.argb(255, 69, 63, 85);
        int gradientColor = Color.argb(255, 19, 26, 60);
        int strokeColor = Color.argb(255, 215, 216, 214);
        int gradientColor8 = Color.argb(255, 12, 36, 80);
        int gradientColor4 = Color.argb(255, 103, 99, 101);
        int gradientColor11 = Color.argb(255, 59, 57, 95);
        int gradientColor5 = Color.argb(255, 103, 107, 106);
        int gradientColor14 = Color.argb(255, 84, 126, 178);
        int gradientColor6 = Color.argb(255, 103, 107, 109);
        int gradientColor10 = Color.argb(255, 54, 48, 89);
        int gradientColor7 = Color.argb(255, 101, 107, 124);
        int gradientColor13 = Color.argb(255, 57, 83, 117);
        int gradientColor9 = Color.argb(255, 49, 44, 86);
        
        // Local Gradients
        if (CacheForLogo.gradient2 == null)
            CacheForLogo.gradient2 = new PaintCodeGradient(new int[]{gradientColor8, gradientColor9, gradientColor10, gradientColor11, gradientColor12, gradientColor13, gradientColor14}, new float[]{0f, 0.23f, 0.28f, 0.34f, 0.57f, 0.59f, 1f});
        PaintCodeGradient gradient2 = CacheForLogo.gradient2;
        if (CacheForLogo.gradient == null)
            CacheForLogo.gradient = new PaintCodeGradient(new int[]{gradientColor, gradientColor2, gradientColor3, gradientColor4, gradientColor5, gradientColor6, gradientColor7}, new float[]{0f, 0.44f, 0.48f, 0.74f, 0.81f, 0.85f, 1f});
        PaintCodeGradient gradient = CacheForLogo.gradient;
        
        // Resize to Target Frame
        canvas.save();
        RectF resizedFrame = CacheForLogo.resizedFrame;
        StyleKit.resizingBehaviorApply(resizing, CacheForLogo.originalFrame, targetFrame, resizedFrame);
        canvas.translate(resizedFrame.left, resizedFrame.top);
        canvas.scale(resizedFrame.width() / 325f, resizedFrame.height() / 313f);
        
        // Group 2
        {
            // Bezier
            RectF bezierRect = CacheForLogo.bezierRect;
            bezierRect.set(4.77f, -0.21f, 304.36f, 263.79f);
            Path bezierPath = CacheForLogo.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(295.16f, 30.39f);
            bezierPath.cubicTo(293.82f, 33.19f, 291.02f, 34.59f, 286.76f, 34.59f);
            bezierPath.lineTo(206.76f, 34.59f);
            bezierPath.lineTo(199.96f, 95.79f);
            bezierPath.cubicTo(206.62f, 93.66f, 213.16f, 92.06f, 219.56f, 90.99f);
            bezierPath.cubicTo(225.96f, 89.93f, 232.63f, 89.39f, 239.56f, 89.39f);
            bezierPath.cubicTo(259.29f, 89.39f, 275.02f, 94.93f, 286.76f, 105.99f);
            bezierPath.cubicTo(298.49f, 117.06f, 304.36f, 131.79f, 304.36f, 150.19f);
            bezierPath.cubicTo(304.36f, 174.73f, 293.02f, 196.79f, 270.36f, 216.39f);
            bezierPath.cubicTo(247.69f, 235.99f, 214.22f, 251.79f, 169.96f, 263.79f);
            bezierPath.cubicTo(167.56f, 260.85f, 166.36f, 258.19f, 166.36f, 255.79f);
            bezierPath.cubicTo(166.36f, 253.39f, 167.56f, 251.79f, 169.96f, 250.99f);
            bezierPath.cubicTo(188.89f, 243.25f, 204.42f, 235.19f, 216.56f, 226.79f);
            bezierPath.cubicTo(228.69f, 218.39f, 238.16f, 209.99f, 244.96f, 201.59f);
            bezierPath.cubicTo(251.76f, 193.19f, 256.43f, 184.99f, 258.96f, 176.99f);
            bezierPath.cubicTo(261.49f, 168.99f, 262.76f, 161.53f, 262.76f, 154.59f);
            bezierPath.cubicTo(262.76f, 142.06f, 259.09f, 131.79f, 251.76f, 123.79f);
            bezierPath.cubicTo(244.42f, 115.79f, 232.76f, 111.79f, 216.76f, 111.79f);
            bezierPath.cubicTo(206.36f, 111.79f, 193.96f, 113.79f, 179.56f, 117.79f);
            bezierPath.lineTo(189.16f, 5.39f);
            bezierPath.lineTo(297.96f, 5.39f);
            bezierPath.lineTo(297.56f, 20.19f);
            bezierPath.cubicTo(297.29f, 24.19f, 296.49f, 27.59f, 295.16f, 30.39f);
            bezierPath.close();
            bezierPath.moveTo(139.77f, 165.39f);
            bezierPath.cubicTo(137.77f, 172.86f, 135.97f, 180.06f, 134.37f, 186.99f);
            bezierPath.cubicTo(133.83f, 189.13f, 133.17f, 190.45f, 132.37f, 190.99f);
            bezierPath.cubicTo(131.57f, 191.52f, 130.23f, 191.79f, 128.37f, 191.79f);
            bezierPath.cubicTo(123.57f, 191.79f, 117.57f, 191.52f, 110.37f, 190.99f);
            bezierPath.cubicTo(103.17f, 190.45f, 95.3f, 190.19f, 86.77f, 190.19f);
            bezierPath.lineTo(4.77f, 190.19f);
            bezierPath.lineTo(4.77f, 180.59f);
            bezierPath.cubicTo(21.3f, 166.73f, 35.37f, 154.26f, 46.97f, 143.19f);
            bezierPath.cubicTo(58.57f, 132.13f, 67.97f, 121.86f, 75.16f, 112.39f);
            bezierPath.cubicTo(82.37f, 102.93f, 87.63f, 94.06f, 90.97f, 85.79f);
            bezierPath.cubicTo(94.3f, 77.53f, 95.97f, 69.39f, 95.97f, 61.39f);
            bezierPath.cubicTo(95.97f, 51.79f, 93.63f, 43.46f, 88.97f, 36.39f);
            bezierPath.cubicTo(84.3f, 29.33f, 76.23f, 25.79f, 64.77f, 25.79f);
            bezierPath.cubicTo(57.03f, 25.79f, 49.57f, 27.39f, 42.37f, 30.59f);
            bezierPath.cubicTo(35.17f, 33.79f, 27.17f, 39.13f, 18.37f, 46.59f);
            bezierPath.cubicTo(17.83f, 47.13f, 17.1f, 47.73f, 16.17f, 48.39f);
            bezierPath.cubicTo(15.23f, 49.06f, 14.23f, 49.39f, 13.17f, 49.39f);
            bezierPath.cubicTo(9.97f, 49.39f, 7.17f, 47.66f, 4.77f, 44.19f);
            bezierPath.cubicTo(15.16f, 30.86f, 26.7f, 20.13f, 39.37f, 11.99f);
            bezierPath.cubicTo(52.03f, 3.86f, 65.83f, -0.21f, 80.77f, -0.21f);
            bezierPath.cubicTo(99.16f, -0.21f, 112.97f, 4.52f, 122.17f, 13.99f);
            bezierPath.cubicTo(131.37f, 23.46f, 135.97f, 35.79f, 135.97f, 50.99f);
            bezierPath.cubicTo(135.97f, 58.99f, 134.43f, 66.99f, 131.37f, 74.99f);
            bezierPath.cubicTo(128.3f, 82.99f, 123.17f, 91.39f, 115.97f, 100.19f);
            bezierPath.cubicTo(108.77f, 108.99f, 99.16f, 118.59f, 87.16f, 128.99f);
            bezierPath.cubicTo(75.16f, 139.39f, 60.23f, 151.13f, 42.37f, 164.19f);
            bezierPath.lineTo(109.97f, 164.19f);
            bezierPath.cubicTo(115.3f, 164.19f, 119.77f, 163.06f, 123.37f, 160.79f);
            bezierPath.cubicTo(126.97f, 158.53f, 130.23f, 153.93f, 133.17f, 146.99f);
            bezierPath.cubicTo(134.5f, 144.06f, 136.63f, 142.59f, 139.57f, 142.59f);
            bezierPath.cubicTo(140.37f, 142.59f, 141.83f, 142.86f, 143.97f, 143.39f);
            bezierPath.cubicTo(144.77f, 143.66f, 145.57f, 143.79f, 146.37f, 143.79f);
            bezierPath.cubicTo(143.97f, 150.73f, 141.77f, 157.92f, 139.77f, 165.39f);
            bezierPath.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setShader(CacheForLogo.bezierPathGradient.get(gradient, 154.56f, -0.21f, 154.56f, 263.79f));
            canvas.drawPath(bezierPath, paint);
            
            // Group 3
            {
                RectF group3 = CacheForLogo.group3;
                group3.set(0.08f, -0.2f, 325.33f, 313f);
                canvas.save();
                
                // Clip
                Path clipPath = CacheForLogo.clipPath;
                clipPath.reset();
                clipPath.moveTo(group3.left, group3.top);
                clipPath.lineTo(group3.right, group3.top);
                clipPath.lineTo(group3.right, group3.bottom);
                clipPath.lineTo(group3.left, group3.bottom);
                clipPath.close();
                canvas.clipPath(clipPath);
                
                // Bezier 2
                RectF bezier2Rect = CacheForLogo.bezier2Rect;
                bezier2Rect.set(0f, 256.26f, 30.31f, 285.07f);
                Path bezier2Path = CacheForLogo.bezier2Path;
                bezier2Path.reset();
                bezier2Path.moveTo(9.33f, 273.81f);
                bezier2Path.lineTo(19.49f, 273.81f);
                bezier2Path.lineTo(14.45f, 261.7f);
                bezier2Path.lineTo(9.33f, 273.81f);
                bezier2Path.close();
                bezier2Path.moveTo(0.18f, 285.07f);
                bezier2Path.lineTo(0f, 284.9f);
                bezier2Path.lineTo(0f, 283.86f);
                bezier2Path.lineTo(0.18f, 283.7f);
                bezier2Path.cubicTo(1.16f, 283.69f, 1.79f, 283.64f, 2.07f, 283.55f);
                bezier2Path.cubicTo(2.35f, 283.46f, 2.6f, 283.29f, 2.82f, 283.03f);
                bezier2Path.cubicTo(3.04f, 282.77f, 3.49f, 281.92f, 4.15f, 280.47f);
                bezier2Path.lineTo(6.26f, 275.89f);
                bezier2Path.lineTo(11.72f, 263.53f);
                bezier2Path.cubicTo(12.75f, 261.11f, 13.78f, 258.69f, 14.79f, 256.26f);
                bezier2Path.lineTo(16.1f, 256.26f);
                bezier2Path.lineTo(25.81f, 279.1f);
                bezier2Path.cubicTo(26.15f, 279.87f, 26.53f, 280.7f, 26.96f, 281.59f);
                bezier2Path.cubicTo(27.4f, 282.49f, 27.7f, 283.02f, 27.87f, 283.18f);
                bezier2Path.cubicTo(28.04f, 283.34f, 28.24f, 283.46f, 28.49f, 283.55f);
                bezier2Path.cubicTo(28.74f, 283.64f, 29.29f, 283.69f, 30.15f, 283.7f);
                bezier2Path.lineTo(30.31f, 283.86f);
                bezier2Path.lineTo(30.31f, 284.9f);
                bezier2Path.lineTo(30.15f, 285.07f);
                bezier2Path.cubicTo(28.73f, 284.95f, 27.45f, 284.89f, 26.31f, 284.89f);
                bezier2Path.cubicTo(24.09f, 284.95f, 21.87f, 285.01f, 19.65f, 285.07f);
                bezier2Path.lineTo(19.49f, 284.9f);
                bezier2Path.lineTo(19.49f, 283.86f);
                bezier2Path.lineTo(19.65f, 283.7f);
                bezier2Path.cubicTo(21.15f, 283.68f, 22.08f, 283.61f, 22.46f, 283.51f);
                bezier2Path.cubicTo(22.83f, 283.41f, 23.02f, 283.18f, 23.02f, 282.82f);
                bezier2Path.cubicTo(23.02f, 282.52f, 22.93f, 282.14f, 22.74f, 281.65f);
                bezier2Path.lineTo(20.27f, 275.53f);
                bezier2Path.lineTo(8.65f, 275.53f);
                bezier2Path.lineTo(6.46f, 280.67f);
                bezier2Path.cubicTo(6.07f, 281.59f, 5.88f, 282.27f, 5.88f, 282.7f);
                bezier2Path.cubicTo(5.88f, 283.03f, 6.06f, 283.28f, 6.42f, 283.44f);
                bezier2Path.cubicTo(6.78f, 283.6f, 7.69f, 283.69f, 9.15f, 283.7f);
                bezier2Path.lineTo(9.33f, 283.86f);
                bezier2Path.lineTo(9.33f, 284.9f);
                bezier2Path.lineTo(9.17f, 285.07f);
                bezier2Path.cubicTo(7.45f, 284.96f, 5.93f, 284.9f, 4.64f, 284.9f);
                bezier2Path.cubicTo(3.16f, 284.9f, 1.68f, 284.96f, 0.18f, 285.07f);
                bezier2Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(StyleKit.primaryBlue);
                canvas.drawPath(bezier2Path, paint);
                
                canvas.restore();
            }
            
            // Bezier 3
            RectF bezier3Rect = CacheForLogo.bezier3Rect;
            bezier3Rect.set(32.29f, 256.55f, 44.12f, 285.07f);
            Path bezier3Path = CacheForLogo.bezier3Path;
            bezier3Path.reset();
            bezier3Path.moveTo(32.45f, 256.55f);
            bezier3Path.lineTo(34.96f, 256.63f);
            bezier3Path.cubicTo(36.61f, 256.68f, 37.69f, 256.71f, 38.19f, 256.71f);
            bezier3Path.cubicTo(38.65f, 256.71f, 40.57f, 256.65f, 43.95f, 256.55f);
            bezier3Path.lineTo(44.12f, 256.69f);
            bezier3Path.lineTo(44.12f, 257.69f);
            bezier3Path.lineTo(43.95f, 257.83f);
            bezier3Path.cubicTo(43.03f, 257.86f, 42.32f, 257.9f, 41.82f, 257.95f);
            bezier3Path.cubicTo(41.32f, 258f, 40.95f, 258.1f, 40.72f, 258.25f);
            bezier3Path.cubicTo(40.49f, 258.4f, 40.35f, 258.74f, 40.27f, 259.28f);
            bezier3Path.cubicTo(40.2f, 259.83f, 40.16f, 260.58f, 40.16f, 261.54f);
            bezier3Path.lineTo(40.12f, 266.16f);
            bezier3Path.lineTo(40.12f, 275.45f);
            bezier3Path.lineTo(40.14f, 279.37f);
            bezier3Path.cubicTo(40.15f, 280.88f, 40.19f, 281.85f, 40.26f, 282.3f);
            bezier3Path.cubicTo(40.33f, 282.74f, 40.42f, 283.03f, 40.55f, 283.18f);
            bezier3Path.cubicTo(40.68f, 283.33f, 40.92f, 283.45f, 41.29f, 283.55f);
            bezier3Path.cubicTo(41.65f, 283.65f, 42.54f, 283.73f, 43.95f, 283.78f);
            bezier3Path.lineTo(44.12f, 283.9f);
            bezier3Path.lineTo(44.12f, 284.9f);
            bezier3Path.lineTo(43.95f, 285.07f);
            bezier3Path.cubicTo(43.89f, 285.07f, 42.71f, 285.02f, 40.42f, 284.95f);
            bezier3Path.cubicTo(39.47f, 284.92f, 38.73f, 284.9f, 38.19f, 284.9f);
            bezier3Path.cubicTo(37.78f, 284.9f, 35.87f, 284.96f, 32.45f, 285.07f);
            bezier3Path.lineTo(32.29f, 284.9f);
            bezier3Path.lineTo(32.29f, 283.9f);
            bezier3Path.lineTo(32.45f, 283.78f);
            bezier3Path.cubicTo(33.7f, 283.73f, 34.53f, 283.66f, 34.94f, 283.58f);
            bezier3Path.cubicTo(35.36f, 283.5f, 35.63f, 283.4f, 35.78f, 283.27f);
            bezier3Path.cubicTo(35.92f, 283.14f, 36.03f, 282.87f, 36.12f, 282.46f);
            bezier3Path.cubicTo(36.2f, 282.04f, 36.25f, 281.12f, 36.27f, 279.69f);
            bezier3Path.lineTo(36.29f, 275.45f);
            bezier3Path.lineTo(36.29f, 266.16f);
            bezier3Path.lineTo(36.25f, 262.25f);
            bezier3Path.cubicTo(36.23f, 260.72f, 36.2f, 259.74f, 36.14f, 259.3f);
            bezier3Path.cubicTo(36.08f, 258.85f, 35.98f, 258.56f, 35.85f, 258.41f);
            bezier3Path.cubicTo(35.73f, 258.26f, 35.48f, 258.14f, 35.12f, 258.05f);
            bezier3Path.cubicTo(34.76f, 257.96f, 33.87f, 257.88f, 32.45f, 257.83f);
            bezier3Path.lineTo(32.29f, 257.69f);
            bezier3Path.lineTo(32.29f, 256.69f);
            bezier3Path.lineTo(32.45f, 256.55f);
            bezier3Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier3Path, paint);
            
            // Bezier 4
            RectF bezier4Rect = CacheForLogo.bezier4Rect;
            bezier4Rect.set(45.72f, 256.51f, 75.22f, 285.07f);
            Path bezier4Path = CacheForLogo.bezier4Path;
            bezier4Path.reset();
            bezier4Path.moveTo(53.15f, 282.88f);
            bezier4Path.cubicTo(54.51f, 283.15f, 56.08f, 283.28f, 57.86f, 283.28f);
            bezier4Path.cubicTo(60.98f, 283.28f, 63.47f, 282.76f, 65.34f, 281.71f);
            bezier4Path.cubicTo(67.21f, 280.67f, 68.6f, 279.13f, 69.52f, 277.08f);
            bezier4Path.cubicTo(70.45f, 275.03f, 70.91f, 272.72f, 70.91f, 270.15f);
            bezier4Path.cubicTo(70.91f, 266.37f, 69.9f, 263.43f, 67.88f, 261.34f);
            bezier4Path.cubicTo(65.86f, 259.26f, 62.67f, 258.21f, 58.32f, 258.21f);
            bezier4Path.cubicTo(56.53f, 258.21f, 54.81f, 258.35f, 53.15f, 258.61f);
            bezier4Path.cubicTo(53.04f, 260.81f, 52.99f, 263.28f, 52.99f, 266.04f);
            bezier4Path.lineTo(52.99f, 272.34f);
            bezier4Path.lineTo(53.03f, 278.24f);
            bezier4Path.cubicTo(53.03f, 279.39f, 53.07f, 280.94f, 53.15f, 282.88f);
            bezier4Path.close();
            bezier4Path.moveTo(45.72f, 256.69f);
            bezier4Path.lineTo(45.88f, 256.55f);
            bezier4Path.cubicTo(48.2f, 256.65f, 49.77f, 256.71f, 50.62f, 256.71f);
            bezier4Path.lineTo(60.01f, 256.51f);
            bezier4Path.cubicTo(62.69f, 256.51f, 64.88f, 256.76f, 66.59f, 257.26f);
            bezier4Path.cubicTo(68.31f, 257.76f, 69.83f, 258.63f, 71.16f, 259.87f);
            bezier4Path.cubicTo(72.49f, 261.11f, 73.5f, 262.54f, 74.19f, 264.18f);
            bezier4Path.cubicTo(74.88f, 265.82f, 75.22f, 267.57f, 75.22f, 269.43f);
            bezier4Path.cubicTo(75.22f, 271.24f, 74.91f, 273.02f, 74.28f, 274.79f);
            bezier4Path.cubicTo(73.65f, 276.56f, 72.76f, 278.14f, 71.6f, 279.54f);
            bezier4Path.cubicTo(70.44f, 280.94f, 69.13f, 282.06f, 67.65f, 282.92f);
            bezier4Path.cubicTo(66.17f, 283.77f, 64.69f, 284.35f, 63.2f, 284.64f);
            bezier4Path.cubicTo(61.72f, 284.92f, 60.2f, 285.07f, 58.65f, 285.07f);
            bezier4Path.cubicTo(57.6f, 285.07f, 55.64f, 285.02f, 52.75f, 284.95f);
            bezier4Path.cubicTo(51.8f, 284.92f, 51.17f, 284.9f, 50.86f, 284.9f);
            bezier4Path.cubicTo(49.94f, 284.9f, 48.82f, 284.96f, 47.51f, 285.07f);
            bezier4Path.lineTo(47.35f, 284.9f);
            bezier4Path.lineTo(47.35f, 284.24f);
            bezier4Path.lineTo(47.51f, 284.04f);
            bezier4Path.cubicTo(48.3f, 283.64f, 48.75f, 283.39f, 48.86f, 283.29f);
            bezier4Path.cubicTo(48.98f, 283.19f, 49.07f, 282.02f, 49.14f, 279.78f);
            bezier4Path.cubicTo(49.22f, 277.54f, 49.25f, 275.83f, 49.25f, 274.65f);
            bezier4Path.lineTo(49.25f, 267.28f);
            bezier4Path.lineTo(49.23f, 262.73f);
            bezier4Path.cubicTo(49.23f, 261.74f, 49.22f, 260.93f, 49.19f, 260.31f);
            bezier4Path.cubicTo(49.17f, 259.69f, 49.12f, 259.24f, 49.05f, 258.98f);
            bezier4Path.cubicTo(48.99f, 258.71f, 48.91f, 258.52f, 48.82f, 258.41f);
            bezier4Path.cubicTo(48.73f, 258.31f, 48.59f, 258.21f, 48.4f, 258.14f);
            bezier4Path.cubicTo(48.21f, 258.07f, 47.87f, 258f, 47.41f, 257.95f);
            bezier4Path.lineTo(45.88f, 257.83f);
            bezier4Path.lineTo(45.72f, 257.69f);
            bezier4Path.lineTo(45.72f, 256.69f);
            bezier4Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier4Path, paint);
            
            // Bezier 5
            RectF bezier5Rect = CacheForLogo.bezier5Rect;
            bezier5Rect.set(78.22f, 255.94f, 97.54f, 285.65f);
            Path bezier5Path = CacheForLogo.bezier5Path;
            bezier5Path.reset();
            bezier5Path.moveTo(78.52f, 278f);
            bezier5Path.lineTo(78.68f, 277.84f);
            bezier5Path.lineTo(79.66f, 277.84f);
            bezier5Path.lineTo(79.82f, 278f);
            bezier5Path.cubicTo(79.89f, 279.71f, 79.98f, 280.76f, 80.09f, 281.14f);
            bezier5Path.cubicTo(80.21f, 281.52f, 80.57f, 281.93f, 81.18f, 282.35f);
            bezier5Path.cubicTo(81.78f, 282.77f, 82.59f, 283.11f, 83.6f, 283.38f);
            bezier5Path.cubicTo(84.61f, 283.65f, 85.63f, 283.78f, 86.66f, 283.78f);
            bezier5Path.cubicTo(88.08f, 283.78f, 89.36f, 283.52f, 90.49f, 283f);
            bezier5Path.cubicTo(91.62f, 282.48f, 92.5f, 281.71f, 93.13f, 280.7f);
            bezier5Path.cubicTo(93.76f, 279.69f, 94.07f, 278.56f, 94.07f, 277.3f);
            bezier5Path.cubicTo(94.07f, 276.42f, 93.92f, 275.65f, 93.62f, 274.99f);
            bezier5Path.cubicTo(93.32f, 274.33f, 92.9f, 273.81f, 92.35f, 273.42f);
            bezier5Path.cubicTo(91.81f, 273.02f, 91.19f, 272.73f, 90.5f, 272.53f);
            bezier5Path.cubicTo(89.8f, 272.34f, 88.77f, 272.13f, 87.39f, 271.9f);
            bezier5Path.cubicTo(86.05f, 271.69f, 85f, 271.49f, 84.25f, 271.32f);
            bezier5Path.cubicTo(83.49f, 271.14f, 82.74f, 270.88f, 81.99f, 270.51f);
            bezier5Path.cubicTo(81.24f, 270.15f, 80.61f, 269.7f, 80.11f, 269.14f);
            bezier5Path.cubicTo(79.61f, 268.58f, 79.21f, 267.9f, 78.91f, 267.09f);
            bezier5Path.cubicTo(78.61f, 266.28f, 78.46f, 265.42f, 78.46f, 264.49f);
            bezier5Path.cubicTo(78.46f, 261.99f, 79.33f, 259.94f, 81.07f, 258.34f);
            bezier5Path.cubicTo(82.8f, 256.74f, 85.14f, 255.94f, 88.07f, 255.94f);
            bezier5Path.cubicTo(89.23f, 255.94f, 90.5f, 256.09f, 91.87f, 256.38f);
            bezier5Path.cubicTo(93.24f, 256.66f, 94.49f, 257.09f, 95.62f, 257.65f);
            bezier5Path.lineTo(95.76f, 257.89f);
            bezier5Path.cubicTo(95.46f, 259.12f, 95.28f, 260.87f, 95.21f, 263.15f);
            bezier5Path.lineTo(95.03f, 263.31f);
            bezier5Path.lineTo(93.99f, 263.31f);
            bezier5Path.lineTo(93.83f, 263.17f);
            bezier5Path.cubicTo(93.8f, 261.56f, 93.76f, 260.55f, 93.71f, 260.14f);
            bezier5Path.cubicTo(93.66f, 259.72f, 93.05f, 259.21f, 91.88f, 258.59f);
            bezier5Path.cubicTo(90.72f, 257.98f, 89.45f, 257.67f, 88.09f, 257.67f);
            bezier5Path.cubicTo(86.95f, 257.67f, 85.89f, 257.9f, 84.9f, 258.35f);
            bezier5Path.cubicTo(83.91f, 258.81f, 83.16f, 259.52f, 82.65f, 260.5f);
            bezier5Path.cubicTo(82.14f, 261.48f, 81.89f, 262.47f, 81.89f, 263.49f);
            bezier5Path.cubicTo(81.89f, 264.28f, 82.04f, 264.98f, 82.35f, 265.59f);
            bezier5Path.cubicTo(82.66f, 266.2f, 83.05f, 266.68f, 83.54f, 267.03f);
            bezier5Path.cubicTo(84.03f, 267.39f, 84.6f, 267.65f, 85.25f, 267.83f);
            bezier5Path.cubicTo(85.9f, 268f, 87.09f, 268.21f, 88.81f, 268.47f);
            bezier5Path.cubicTo(91.18f, 268.8f, 92.9f, 269.21f, 93.98f, 269.68f);
            bezier5Path.cubicTo(95.06f, 270.16f, 95.92f, 270.91f, 96.57f, 271.94f);
            bezier5Path.cubicTo(97.22f, 272.97f, 97.54f, 274.21f, 97.54f, 275.67f);
            bezier5Path.cubicTo(97.54f, 278.52f, 96.38f, 280.9f, 94.06f, 282.8f);
            bezier5Path.cubicTo(91.74f, 284.7f, 88.93f, 285.65f, 85.62f, 285.65f);
            bezier5Path.cubicTo(82.85f, 285.65f, 80.42f, 285.15f, 78.33f, 284.16f);
            bezier5Path.lineTo(78.22f, 283.9f);
            bezier5Path.cubicTo(78.35f, 283.06f, 78.45f, 281.09f, 78.52f, 278f);
            bezier5Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier5Path, paint);
            
            // Bezier 6
            RectF bezier6Rect = CacheForLogo.bezier6Rect;
            bezier6Rect.set(110.21f, 255.96f, 136.78f, 285.65f);
            Path bezier6Path = CacheForLogo.bezier6Path;
            bezier6Path.reset();
            bezier6Path.moveTo(136.78f, 281.51f);
            bezier6Path.lineTo(136.02f, 283.38f);
            bezier6Path.cubicTo(133.05f, 284.89f, 129.88f, 285.65f, 126.5f, 285.65f);
            bezier6Path.cubicTo(121.67f, 285.65f, 117.75f, 284.28f, 114.73f, 281.53f);
            bezier6Path.cubicTo(111.72f, 278.79f, 110.21f, 275.2f, 110.21f, 270.77f);
            bezier6Path.cubicTo(110.21f, 267.73f, 110.96f, 265.06f, 112.47f, 262.78f);
            bezier6Path.cubicTo(113.97f, 260.5f, 115.96f, 258.79f, 118.43f, 257.66f);
            bezier6Path.cubicTo(120.9f, 256.53f, 123.67f, 255.96f, 126.75f, 255.96f);
            bezier6Path.cubicTo(128.52f, 255.96f, 130.28f, 256.15f, 132.02f, 256.52f);
            bezier6Path.cubicTo(133.76f, 256.9f, 135.22f, 257.35f, 136.38f, 257.87f);
            bezier6Path.lineTo(136.52f, 258.07f);
            bezier6Path.cubicTo(136.21f, 258.82f, 135.92f, 260.67f, 135.66f, 263.63f);
            bezier6Path.lineTo(135.52f, 263.79f);
            bezier6Path.lineTo(134.57f, 263.79f);
            bezier6Path.lineTo(134.41f, 263.63f);
            bezier6Path.lineTo(134.21f, 260.22f);
            bezier6Path.cubicTo(133.23f, 259.44f, 132.05f, 258.84f, 130.67f, 258.4f);
            bezier6Path.cubicTo(129.28f, 257.97f, 127.84f, 257.75f, 126.34f, 257.75f);
            bezier6Path.cubicTo(124.08f, 257.75f, 122.05f, 258.24f, 120.26f, 259.2f);
            bezier6Path.cubicTo(118.47f, 260.18f, 117.08f, 261.58f, 116.09f, 263.42f);
            bezier6Path.cubicTo(115.1f, 265.26f, 114.6f, 267.51f, 114.6f, 270.17f);
            bezier6Path.cubicTo(114.6f, 272.85f, 115.18f, 275.2f, 116.35f, 277.22f);
            bezier6Path.cubicTo(117.51f, 279.24f, 119.1f, 280.79f, 121.12f, 281.88f);
            bezier6Path.cubicTo(123.13f, 282.96f, 125.48f, 283.5f, 128.17f, 283.5f);
            bezier6Path.cubicTo(129.36f, 283.5f, 130.51f, 283.39f, 131.6f, 283.16f);
            bezier6Path.cubicTo(132.7f, 282.93f, 133.61f, 282.65f, 134.34f, 282.32f);
            bezier6Path.cubicTo(135.07f, 281.98f, 135.77f, 281.57f, 136.44f, 281.09f);
            bezier6Path.lineTo(136.78f, 281.51f);
            bezier6Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier6Path, paint);
            
            // Bezier 7
            RectF bezier7Rect = CacheForLogo.bezier7Rect;
            bezier7Rect.set(139.29f, 265.66f, 159f, 285.69f);
            Path bezier7Path = CacheForLogo.bezier7Path;
            bezier7Path.reset();
            bezier7Path.moveTo(143.08f, 274.33f);
            bezier7Path.cubicTo(143.08f, 276.2f, 143.32f, 277.88f, 143.81f, 279.36f);
            bezier7Path.cubicTo(144.29f, 280.83f, 145.05f, 282.02f, 146.09f, 282.92f);
            bezier7Path.cubicTo(147.14f, 283.81f, 148.33f, 284.26f, 149.67f, 284.26f);
            bezier7Path.cubicTo(151.24f, 284.26f, 152.55f, 283.64f, 153.58f, 282.39f);
            bezier7Path.cubicTo(154.61f, 281.14f, 155.13f, 279.25f, 155.13f, 276.74f);
            bezier7Path.cubicTo(155.13f, 273.89f, 154.57f, 271.55f, 153.45f, 269.73f);
            bezier7Path.cubicTo(152.33f, 267.91f, 150.72f, 267f, 148.62f, 267f);
            bezier7Path.cubicTo(146.88f, 267f, 145.52f, 267.63f, 144.55f, 268.89f);
            bezier7Path.cubicTo(143.57f, 270.15f, 143.08f, 271.96f, 143.08f, 274.33f);
            bezier7Path.close();
            bezier7Path.moveTo(139.29f, 275.71f);
            bezier7Path.cubicTo(139.29f, 274.12f, 139.62f, 272.58f, 140.27f, 271.11f);
            bezier7Path.cubicTo(140.93f, 269.63f, 142.07f, 268.35f, 143.69f, 267.27f);
            bezier7Path.cubicTo(145.32f, 266.2f, 147.25f, 265.66f, 149.48f, 265.66f);
            bezier7Path.cubicTo(152.29f, 265.66f, 154.58f, 266.54f, 156.35f, 268.32f);
            bezier7Path.cubicTo(158.12f, 270.09f, 159f, 272.37f, 159f, 275.15f);
            bezier7Path.cubicTo(159f, 278.21f, 157.98f, 280.74f, 155.96f, 282.72f);
            bezier7Path.cubicTo(153.93f, 284.7f, 151.48f, 285.69f, 148.62f, 285.69f);
            bezier7Path.cubicTo(146.75f, 285.69f, 145.08f, 285.18f, 143.6f, 284.17f);
            bezier7Path.cubicTo(142.13f, 283.16f, 141.04f, 281.93f, 140.34f, 280.47f);
            bezier7Path.cubicTo(139.64f, 279.01f, 139.29f, 277.43f, 139.29f, 275.71f);
            bezier7Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier7Path, paint);
            
            // Bezier 8
            RectF bezier8Rect = CacheForLogo.bezier8Rect;
            bezier8Rect.set(161.13f, 265.74f, 195.73f, 285.07f);
            Path bezier8Path = CacheForLogo.bezier8Path;
            bezier8Path.reset();
            bezier8Path.moveTo(167.75f, 265.78f);
            bezier8Path.lineTo(168.13f, 266.04f);
            bezier8Path.cubicTo(168.05f, 266.92f, 168f, 267.98f, 167.97f, 269.21f);
            bezier8Path.lineTo(169.88f, 267.46f);
            bezier8Path.cubicTo(170.41f, 266.97f, 170.77f, 266.65f, 170.94f, 266.51f);
            bezier8Path.cubicTo(171.11f, 266.37f, 171.52f, 266.21f, 172.17f, 266.02f);
            bezier8Path.cubicTo(172.81f, 265.83f, 173.48f, 265.74f, 174.19f, 265.74f);
            bezier8Path.cubicTo(175.53f, 265.74f, 176.7f, 266.07f, 177.7f, 266.73f);
            bezier8Path.cubicTo(178.71f, 267.39f, 179.45f, 268.31f, 179.93f, 269.47f);
            bezier8Path.cubicTo(181.74f, 267.76f, 182.79f, 266.81f, 183.09f, 266.62f);
            bezier8Path.cubicTo(183.39f, 266.43f, 183.87f, 266.24f, 184.53f, 266.05f);
            bezier8Path.cubicTo(185.18f, 265.86f, 185.84f, 265.76f, 186.5f, 265.76f);
            bezier8Path.cubicTo(187.55f, 265.76f, 188.52f, 265.99f, 189.41f, 266.44f);
            bezier8Path.cubicTo(190.29f, 266.9f, 190.99f, 267.49f, 191.51f, 268.23f);
            bezier8Path.cubicTo(192.04f, 268.96f, 192.34f, 269.76f, 192.43f, 270.62f);
            bezier8Path.cubicTo(192.51f, 271.47f, 192.56f, 272.65f, 192.56f, 274.15f);
            bezier8Path.lineTo(192.56f, 276.26f);
            bezier8Path.cubicTo(192.56f, 276.48f, 192.6f, 278.15f, 192.68f, 281.25f);
            bezier8Path.cubicTo(192.7f, 282.52f, 192.84f, 283.28f, 193.1f, 283.52f);
            bezier8Path.cubicTo(193.35f, 283.76f, 194.17f, 283.88f, 195.57f, 283.88f);
            bezier8Path.lineTo(195.73f, 284.04f);
            bezier8Path.lineTo(195.73f, 284.9f);
            bezier8Path.lineTo(195.57f, 285.07f);
            bezier8Path.cubicTo(193.87f, 284.96f, 192.72f, 284.9f, 192.12f, 284.9f);
            bezier8Path.cubicTo(191.78f, 284.9f, 190.81f, 284.96f, 189.2f, 285.07f);
            bezier8Path.lineTo(188.94f, 284.84f);
            bezier8Path.cubicTo(189.12f, 283.11f, 189.2f, 280.84f, 189.2f, 278.04f);
            bezier8Path.lineTo(189.2f, 275.63f);
            bezier8Path.cubicTo(189.2f, 273.51f, 189.11f, 272.02f, 188.9f, 271.17f);
            bezier8Path.cubicTo(188.7f, 270.32f, 188.23f, 269.62f, 187.5f, 269.08f);
            bezier8Path.cubicTo(186.76f, 268.54f, 185.89f, 268.27f, 184.87f, 268.27f);
            bezier8Path.cubicTo(184.15f, 268.27f, 183.47f, 268.41f, 182.84f, 268.7f);
            bezier8Path.cubicTo(182.21f, 268.99f, 181.65f, 269.41f, 181.15f, 269.98f);
            bezier8Path.cubicTo(180.65f, 270.55f, 180.37f, 271.08f, 180.31f, 271.57f);
            bezier8Path.cubicTo(180.26f, 272.06f, 180.23f, 272.96f, 180.23f, 274.27f);
            bezier8Path.lineTo(180.23f, 276.78f);
            bezier8Path.cubicTo(180.23f, 277.37f, 180.26f, 278.47f, 180.31f, 280.09f);
            bezier8Path.cubicTo(180.37f, 281.71f, 180.42f, 282.65f, 180.48f, 282.92f);
            bezier8Path.cubicTo(180.54f, 283.19f, 180.64f, 283.38f, 180.77f, 283.49f);
            bezier8Path.cubicTo(180.89f, 283.6f, 181.04f, 283.68f, 181.21f, 283.71f);
            bezier8Path.cubicTo(181.37f, 283.75f, 182.09f, 283.8f, 183.36f, 283.88f);
            bezier8Path.lineTo(183.55f, 284.04f);
            bezier8Path.lineTo(183.55f, 284.89f);
            bezier8Path.lineTo(183.38f, 285.07f);
            bezier8Path.cubicTo(181.71f, 284.96f, 180.1f, 284.9f, 178.55f, 284.9f);
            bezier8Path.cubicTo(177.12f, 284.9f, 175.51f, 284.96f, 173.73f, 285.07f);
            bezier8Path.lineTo(173.55f, 284.89f);
            bezier8Path.lineTo(173.55f, 284.04f);
            bezier8Path.lineTo(173.73f, 283.88f);
            bezier8Path.cubicTo(175.03f, 283.8f, 175.76f, 283.74f, 175.93f, 283.7f);
            bezier8Path.cubicTo(176.1f, 283.66f, 176.24f, 283.58f, 176.37f, 283.45f);
            bezier8Path.cubicTo(176.5f, 283.32f, 176.58f, 283.13f, 176.63f, 282.87f);
            bezier8Path.cubicTo(176.68f, 282.61f, 176.73f, 281.74f, 176.79f, 280.28f);
            bezier8Path.cubicTo(176.85f, 278.81f, 176.88f, 277.71f, 176.88f, 276.96f);
            bezier8Path.lineTo(176.88f, 274.67f);
            bezier8Path.cubicTo(176.88f, 273.16f, 176.78f, 271.99f, 176.57f, 271.18f);
            bezier8Path.cubicTo(176.36f, 270.36f, 175.92f, 269.67f, 175.23f, 269.11f);
            bezier8Path.cubicTo(174.55f, 268.55f, 173.7f, 268.27f, 172.67f, 268.27f);
            bezier8Path.cubicTo(171.86f, 268.27f, 171.13f, 268.42f, 170.47f, 268.74f);
            bezier8Path.cubicTo(169.81f, 269.05f, 169.27f, 269.44f, 168.84f, 269.9f);
            bezier8Path.cubicTo(168.42f, 270.36f, 168.16f, 270.8f, 168.06f, 271.2f);
            bezier8Path.cubicTo(167.96f, 271.6f, 167.91f, 272.47f, 167.91f, 273.81f);
            bezier8Path.lineTo(167.91f, 276.78f);
            bezier8Path.cubicTo(167.91f, 277.37f, 167.94f, 278.47f, 167.99f, 280.09f);
            bezier8Path.cubicTo(168.04f, 281.71f, 168.1f, 282.65f, 168.16f, 282.92f);
            bezier8Path.cubicTo(168.22f, 283.19f, 168.31f, 283.38f, 168.44f, 283.49f);
            bezier8Path.cubicTo(168.57f, 283.6f, 168.72f, 283.68f, 168.88f, 283.71f);
            bezier8Path.cubicTo(169.05f, 283.75f, 169.77f, 283.8f, 171.04f, 283.88f);
            bezier8Path.lineTo(171.22f, 284.04f);
            bezier8Path.lineTo(171.22f, 284.89f);
            bezier8Path.lineTo(171.06f, 285.07f);
            bezier8Path.cubicTo(169.39f, 284.96f, 167.78f, 284.9f, 166.22f, 284.9f);
            bezier8Path.cubicTo(164.69f, 284.9f, 163.08f, 284.96f, 161.41f, 285.07f);
            bezier8Path.lineTo(161.23f, 284.89f);
            bezier8Path.lineTo(161.23f, 284.04f);
            bezier8Path.lineTo(161.41f, 283.88f);
            bezier8Path.cubicTo(162.7f, 283.8f, 163.44f, 283.74f, 163.6f, 283.7f);
            bezier8Path.cubicTo(163.77f, 283.66f, 163.92f, 283.58f, 164.05f, 283.45f);
            bezier8Path.cubicTo(164.17f, 283.32f, 164.26f, 283.13f, 164.31f, 282.87f);
            bezier8Path.cubicTo(164.35f, 282.61f, 164.41f, 281.74f, 164.47f, 280.28f);
            bezier8Path.cubicTo(164.53f, 278.81f, 164.56f, 277.71f, 164.56f, 276.96f);
            bezier8Path.lineTo(164.56f, 273f);
            bezier8Path.cubicTo(164.56f, 272.47f, 164.53f, 271.74f, 164.48f, 270.82f);
            bezier8Path.cubicTo(164.42f, 269.89f, 164.38f, 269.32f, 164.35f, 269.11f);
            bezier8Path.cubicTo(164.31f, 268.9f, 164.21f, 268.74f, 164.04f, 268.64f);
            bezier8Path.cubicTo(163.86f, 268.54f, 163.51f, 268.49f, 162.99f, 268.49f);
            bezier8Path.lineTo(161.31f, 268.47f);
            bezier8Path.lineTo(161.13f, 268.31f);
            bezier8Path.lineTo(161.13f, 267.44f);
            bezier8Path.lineTo(161.29f, 267.28f);
            bezier8Path.cubicTo(163.84f, 266.98f, 166f, 266.47f, 167.75f, 265.78f);
            bezier8Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier8Path, paint);
            
            // Bezier 9
            RectF bezier9Rect = CacheForLogo.bezier9Rect;
            bezier9Rect.set(197.41f, 265.74f, 232.01f, 285.07f);
            Path bezier9Path = CacheForLogo.bezier9Path;
            bezier9Path.reset();
            bezier9Path.moveTo(204.04f, 265.78f);
            bezier9Path.lineTo(204.42f, 266.04f);
            bezier9Path.cubicTo(204.34f, 266.92f, 204.28f, 267.98f, 204.26f, 269.21f);
            bezier9Path.lineTo(206.17f, 267.46f);
            bezier9Path.cubicTo(206.7f, 266.97f, 207.05f, 266.65f, 207.23f, 266.51f);
            bezier9Path.cubicTo(207.4f, 266.37f, 207.81f, 266.21f, 208.45f, 266.02f);
            bezier9Path.cubicTo(209.09f, 265.83f, 209.77f, 265.74f, 210.48f, 265.74f);
            bezier9Path.cubicTo(211.82f, 265.74f, 212.99f, 266.07f, 213.99f, 266.73f);
            bezier9Path.cubicTo(215f, 267.39f, 215.74f, 268.31f, 216.22f, 269.47f);
            bezier9Path.cubicTo(218.03f, 267.76f, 219.08f, 266.81f, 219.38f, 266.62f);
            bezier9Path.cubicTo(219.68f, 266.43f, 220.16f, 266.24f, 220.82f, 266.05f);
            bezier9Path.cubicTo(221.47f, 265.86f, 222.13f, 265.76f, 222.78f, 265.76f);
            bezier9Path.cubicTo(223.84f, 265.76f, 224.81f, 265.99f, 225.69f, 266.44f);
            bezier9Path.cubicTo(226.58f, 266.9f, 227.28f, 267.49f, 227.8f, 268.23f);
            bezier9Path.cubicTo(228.32f, 268.96f, 228.63f, 269.76f, 228.71f, 270.62f);
            bezier9Path.cubicTo(228.8f, 271.47f, 228.84f, 272.65f, 228.84f, 274.15f);
            bezier9Path.lineTo(228.84f, 276.26f);
            bezier9Path.cubicTo(228.84f, 276.48f, 228.88f, 278.15f, 228.96f, 281.25f);
            bezier9Path.cubicTo(228.99f, 282.52f, 229.13f, 283.28f, 229.39f, 283.52f);
            bezier9Path.cubicTo(229.64f, 283.76f, 230.46f, 283.88f, 231.86f, 283.88f);
            bezier9Path.lineTo(232.01f, 284.04f);
            bezier9Path.lineTo(232.01f, 284.9f);
            bezier9Path.lineTo(231.86f, 285.07f);
            bezier9Path.cubicTo(230.16f, 284.96f, 229f, 284.9f, 228.4f, 284.9f);
            bezier9Path.cubicTo(228.07f, 284.9f, 227.1f, 284.96f, 225.49f, 285.07f);
            bezier9Path.lineTo(225.23f, 284.84f);
            bezier9Path.cubicTo(225.41f, 283.11f, 225.49f, 280.84f, 225.49f, 278.04f);
            bezier9Path.lineTo(225.49f, 275.63f);
            bezier9Path.cubicTo(225.49f, 273.51f, 225.39f, 272.02f, 225.19f, 271.17f);
            bezier9Path.cubicTo(224.99f, 270.32f, 224.52f, 269.62f, 223.79f, 269.08f);
            bezier9Path.cubicTo(223.05f, 268.54f, 222.17f, 268.27f, 221.16f, 268.27f);
            bezier9Path.cubicTo(220.43f, 268.27f, 219.76f, 268.41f, 219.13f, 268.7f);
            bezier9Path.cubicTo(218.5f, 268.99f, 217.94f, 269.41f, 217.43f, 269.98f);
            bezier9Path.cubicTo(216.93f, 270.55f, 216.66f, 271.08f, 216.6f, 271.57f);
            bezier9Path.cubicTo(216.55f, 272.06f, 216.52f, 272.96f, 216.52f, 274.27f);
            bezier9Path.lineTo(216.52f, 276.78f);
            bezier9Path.cubicTo(216.52f, 277.37f, 216.55f, 278.47f, 216.6f, 280.09f);
            bezier9Path.cubicTo(216.66f, 281.71f, 216.71f, 282.65f, 216.77f, 282.92f);
            bezier9Path.cubicTo(216.83f, 283.19f, 216.92f, 283.38f, 217.05f, 283.49f);
            bezier9Path.cubicTo(217.18f, 283.6f, 217.33f, 283.68f, 217.49f, 283.71f);
            bezier9Path.cubicTo(217.66f, 283.75f, 218.38f, 283.8f, 219.65f, 283.88f);
            bezier9Path.lineTo(219.83f, 284.04f);
            bezier9Path.lineTo(219.83f, 284.89f);
            bezier9Path.lineTo(219.67f, 285.07f);
            bezier9Path.cubicTo(218f, 284.96f, 216.39f, 284.9f, 214.83f, 284.9f);
            bezier9Path.cubicTo(213.4f, 284.9f, 211.8f, 284.96f, 210.02f, 285.07f);
            bezier9Path.lineTo(209.84f, 284.89f);
            bezier9Path.lineTo(209.84f, 284.04f);
            bezier9Path.lineTo(210.02f, 283.88f);
            bezier9Path.cubicTo(211.32f, 283.8f, 212.05f, 283.74f, 212.22f, 283.7f);
            bezier9Path.cubicTo(212.38f, 283.66f, 212.53f, 283.58f, 212.66f, 283.45f);
            bezier9Path.cubicTo(212.78f, 283.32f, 212.87f, 283.13f, 212.92f, 282.87f);
            bezier9Path.cubicTo(212.96f, 282.61f, 213.02f, 281.74f, 213.08f, 280.28f);
            bezier9Path.cubicTo(213.14f, 278.81f, 213.17f, 277.71f, 213.17f, 276.96f);
            bezier9Path.lineTo(213.17f, 274.67f);
            bezier9Path.cubicTo(213.17f, 273.16f, 213.07f, 271.99f, 212.86f, 271.18f);
            bezier9Path.cubicTo(212.65f, 270.36f, 212.21f, 269.67f, 211.52f, 269.11f);
            bezier9Path.cubicTo(210.84f, 268.55f, 209.98f, 268.27f, 208.95f, 268.27f);
            bezier9Path.cubicTo(208.15f, 268.27f, 207.42f, 268.42f, 206.76f, 268.74f);
            bezier9Path.cubicTo(206.09f, 269.05f, 205.55f, 269.44f, 205.13f, 269.9f);
            bezier9Path.cubicTo(204.71f, 270.36f, 204.45f, 270.8f, 204.35f, 271.2f);
            bezier9Path.cubicTo(204.25f, 271.6f, 204.2f, 272.47f, 204.2f, 273.81f);
            bezier9Path.lineTo(204.2f, 276.78f);
            bezier9Path.cubicTo(204.2f, 277.37f, 204.22f, 278.47f, 204.28f, 280.09f);
            bezier9Path.cubicTo(204.33f, 281.71f, 204.39f, 282.65f, 204.45f, 282.92f);
            bezier9Path.cubicTo(204.51f, 283.19f, 204.6f, 283.38f, 204.73f, 283.49f);
            bezier9Path.cubicTo(204.86f, 283.6f, 205f, 283.68f, 205.17f, 283.71f);
            bezier9Path.cubicTo(205.34f, 283.75f, 206.06f, 283.8f, 207.33f, 283.88f);
            bezier9Path.lineTo(207.51f, 284.04f);
            bezier9Path.lineTo(207.51f, 284.89f);
            bezier9Path.lineTo(207.35f, 285.07f);
            bezier9Path.cubicTo(205.67f, 284.96f, 204.06f, 284.9f, 202.51f, 284.9f);
            bezier9Path.cubicTo(200.97f, 284.9f, 199.37f, 284.96f, 197.69f, 285.07f);
            bezier9Path.lineTo(197.51f, 284.89f);
            bezier9Path.lineTo(197.51f, 284.04f);
            bezier9Path.lineTo(197.69f, 283.88f);
            bezier9Path.cubicTo(198.99f, 283.8f, 199.73f, 283.74f, 199.89f, 283.7f);
            bezier9Path.cubicTo(200.06f, 283.66f, 200.21f, 283.58f, 200.33f, 283.45f);
            bezier9Path.cubicTo(200.46f, 283.32f, 200.55f, 283.13f, 200.6f, 282.87f);
            bezier9Path.cubicTo(200.64f, 282.61f, 200.7f, 281.74f, 200.76f, 280.28f);
            bezier9Path.cubicTo(200.82f, 278.81f, 200.85f, 277.71f, 200.85f, 276.96f);
            bezier9Path.lineTo(200.85f, 273f);
            bezier9Path.cubicTo(200.85f, 272.47f, 200.82f, 271.74f, 200.77f, 270.82f);
            bezier9Path.cubicTo(200.71f, 269.89f, 200.67f, 269.32f, 200.64f, 269.11f);
            bezier9Path.cubicTo(200.6f, 268.9f, 200.5f, 268.74f, 200.32f, 268.64f);
            bezier9Path.cubicTo(200.15f, 268.54f, 199.8f, 268.49f, 199.28f, 268.49f);
            bezier9Path.lineTo(197.59f, 268.47f);
            bezier9Path.lineTo(197.41f, 268.31f);
            bezier9Path.lineTo(197.41f, 267.44f);
            bezier9Path.lineTo(197.57f, 267.28f);
            bezier9Path.cubicTo(200.13f, 266.98f, 202.28f, 266.47f, 204.04f, 265.78f);
            bezier9Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier9Path, paint);
            
            // Bezier 10
            RectF bezier10Rect = CacheForLogo.bezier10Rect;
            bezier10Rect.set(233.8f, 256.81f, 243.9f, 285.07f);
            Path bezier10Path = CacheForLogo.bezier10Path;
            bezier10Path.reset();
            bezier10Path.moveTo(238.72f, 256.81f);
            bezier10Path.cubicTo(239.35f, 256.81f, 239.88f, 257.03f, 240.32f, 257.47f);
            bezier10Path.cubicTo(240.76f, 257.91f, 240.99f, 258.45f, 240.99f, 259.07f);
            bezier10Path.cubicTo(240.99f, 259.69f, 240.76f, 260.22f, 240.32f, 260.66f);
            bezier10Path.cubicTo(239.88f, 261.1f, 239.35f, 261.32f, 238.72f, 261.32f);
            bezier10Path.cubicTo(238.1f, 261.32f, 237.57f, 261.11f, 237.12f, 260.67f);
            bezier10Path.cubicTo(236.67f, 260.24f, 236.45f, 259.7f, 236.45f, 259.07f);
            bezier10Path.cubicTo(236.45f, 258.45f, 236.67f, 257.91f, 237.12f, 257.47f);
            bezier10Path.cubicTo(237.57f, 257.03f, 238.1f, 256.81f, 238.72f, 256.81f);
            bezier10Path.close();
            bezier10Path.moveTo(240.42f, 265.78f);
            bezier10Path.lineTo(240.81f, 266.04f);
            bezier10Path.cubicTo(240.66f, 267.79f, 240.58f, 270.02f, 240.58f, 272.72f);
            bezier10Path.lineTo(240.58f, 277.26f);
            bezier10Path.cubicTo(240.58f, 277.55f, 240.61f, 278.5f, 240.67f, 280.1f);
            bezier10Path.cubicTo(240.72f, 281.7f, 240.78f, 282.63f, 240.84f, 282.9f);
            bezier10Path.cubicTo(240.9f, 283.17f, 240.99f, 283.36f, 241.11f, 283.48f);
            bezier10Path.cubicTo(241.23f, 283.6f, 241.38f, 283.68f, 241.55f, 283.71f);
            bezier10Path.cubicTo(241.72f, 283.75f, 242.45f, 283.8f, 243.72f, 283.88f);
            bezier10Path.lineTo(243.9f, 284.04f);
            bezier10Path.lineTo(243.9f, 284.89f);
            bezier10Path.lineTo(243.74f, 285.07f);
            bezier10Path.cubicTo(242.06f, 284.96f, 240.45f, 284.9f, 238.9f, 284.9f);
            bezier10Path.cubicTo(237.36f, 284.9f, 235.75f, 284.96f, 234.08f, 285.07f);
            bezier10Path.lineTo(233.9f, 284.89f);
            bezier10Path.lineTo(233.9f, 284.04f);
            bezier10Path.lineTo(234.08f, 283.88f);
            bezier10Path.cubicTo(235.38f, 283.8f, 236.11f, 283.74f, 236.28f, 283.7f);
            bezier10Path.cubicTo(236.45f, 283.66f, 236.59f, 283.58f, 236.72f, 283.45f);
            bezier10Path.cubicTo(236.85f, 283.32f, 236.94f, 283.13f, 236.98f, 282.87f);
            bezier10Path.cubicTo(237.03f, 282.61f, 237.08f, 281.74f, 237.14f, 280.28f);
            bezier10Path.cubicTo(237.2f, 278.81f, 237.23f, 277.71f, 237.23f, 276.96f);
            bezier10Path.lineTo(237.23f, 273f);
            bezier10Path.cubicTo(237.23f, 272.47f, 237.21f, 271.74f, 237.15f, 270.82f);
            bezier10Path.cubicTo(237.1f, 269.89f, 237.06f, 269.32f, 237.02f, 269.11f);
            bezier10Path.cubicTo(236.99f, 268.9f, 236.89f, 268.74f, 236.71f, 268.64f);
            bezier10Path.cubicTo(236.54f, 268.54f, 236.19f, 268.49f, 235.67f, 268.49f);
            bezier10Path.lineTo(233.98f, 268.47f);
            bezier10Path.lineTo(233.8f, 268.31f);
            bezier10Path.lineTo(233.8f, 267.44f);
            bezier10Path.lineTo(233.96f, 267.28f);
            bezier10Path.cubicTo(236.52f, 266.98f, 238.67f, 266.47f, 240.42f, 265.78f);
            bezier10Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier10Path, paint);
            
            // Bezier 11
            RectF bezier11Rect = CacheForLogo.bezier11Rect;
            bezier11Rect.set(245.82f, 259.48f, 270.13f, 285.37f);
            Path bezier11Path = CacheForLogo.bezier11Path;
            bezier11Path.reset();
            bezier11Path.moveTo(270.13f, 267.26f);
            bezier11Path.lineTo(269.75f, 268.95f);
            bezier11Path.lineTo(269.59f, 269.13f);
            bezier11Path.cubicTo(268.9f, 269.12f, 268.15f, 269.11f, 267.32f, 269.11f);
            bezier11Path.cubicTo(266.57f, 269.11f, 265.61f, 269.12f, 264.43f, 269.13f);
            bezier11Path.lineTo(264.31f, 277.3f);
            bezier11Path.cubicTo(264.31f, 279.29f, 264.37f, 280.58f, 264.48f, 281.15f);
            bezier11Path.cubicTo(264.59f, 281.73f, 264.85f, 282.15f, 265.25f, 282.44f);
            bezier11Path.cubicTo(265.65f, 282.72f, 266.21f, 282.86f, 266.92f, 282.86f);
            bezier11Path.cubicTo(267.81f, 282.86f, 268.64f, 282.62f, 269.41f, 282.15f);
            bezier11Path.lineTo(269.89f, 282.88f);
            bezier11Path.cubicTo(269.57f, 283.11f, 268.8f, 283.77f, 267.58f, 284.89f);
            bezier11Path.cubicTo(266.88f, 285.21f, 266.17f, 285.37f, 265.45f, 285.37f);
            bezier11Path.cubicTo(262.44f, 285.37f, 260.94f, 283.91f, 260.94f, 280.99f);
            bezier11Path.lineTo(261.04f, 277.56f);
            bezier11Path.lineTo(261.04f, 269.13f);
            bezier11Path.lineTo(252.29f, 269.13f);
            bezier11Path.lineTo(252.17f, 277.3f);
            bezier11Path.cubicTo(252.17f, 279.29f, 252.22f, 280.58f, 252.34f, 281.15f);
            bezier11Path.cubicTo(252.45f, 281.73f, 252.71f, 282.15f, 253.11f, 282.44f);
            bezier11Path.cubicTo(253.51f, 282.72f, 254.07f, 282.86f, 254.78f, 282.86f);
            bezier11Path.cubicTo(255.67f, 282.86f, 256.5f, 282.62f, 257.26f, 282.15f);
            bezier11Path.lineTo(257.75f, 282.88f);
            bezier11Path.cubicTo(257.42f, 283.11f, 256.65f, 283.77f, 255.44f, 284.89f);
            bezier11Path.cubicTo(254.74f, 285.21f, 254.03f, 285.37f, 253.31f, 285.37f);
            bezier11Path.cubicTo(250.3f, 285.37f, 248.79f, 283.91f, 248.79f, 280.99f);
            bezier11Path.lineTo(248.89f, 277.56f);
            bezier11Path.lineTo(248.89f, 269.23f);
            bezier11Path.lineTo(248.07f, 269.23f);
            bezier11Path.cubicTo(247.47f, 269.23f, 246.78f, 269.26f, 246f, 269.31f);
            bezier11Path.lineTo(245.82f, 269.15f);
            bezier11Path.lineTo(245.82f, 268.63f);
            bezier11Path.lineTo(245.96f, 268.43f);
            bezier11Path.cubicTo(247.22f, 267.96f, 248.24f, 267.52f, 249.01f, 267.12f);
            bezier11Path.cubicTo(249.01f, 263.63f, 248.97f, 261.6f, 248.89f, 261.02f);
            bezier11Path.cubicTo(250.27f, 260.54f, 251.4f, 260.02f, 252.29f, 259.48f);
            bezier11Path.lineTo(252.77f, 259.88f);
            bezier11Path.cubicTo(252.63f, 260.75f, 252.47f, 263.16f, 252.29f, 267.12f);
            bezier11Path.lineTo(261.1f, 267.12f);
            bezier11Path.cubicTo(261.1f, 263.34f, 261.08f, 261.3f, 261.04f, 261.02f);
            bezier11Path.cubicTo(262.42f, 260.54f, 263.55f, 260.02f, 264.43f, 259.48f);
            bezier11Path.lineTo(264.91f, 259.88f);
            bezier11Path.cubicTo(264.78f, 260.72f, 264.62f, 263.17f, 264.43f, 267.22f);
            bezier11Path.cubicTo(265.1f, 267.24f, 265.82f, 267.24f, 266.6f, 267.24f);
            bezier11Path.cubicTo(268.18f, 267.24f, 269.31f, 267.2f, 269.99f, 267.12f);
            bezier11Path.lineTo(270.13f, 267.26f);
            bezier11Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier11Path, paint);
            
            // Bezier 12
            RectF bezier12Rect = CacheForLogo.bezier12Rect;
            bezier12Rect.set(271.47f, 265.64f, 288.77f, 285.55f);
            Path bezier12Path = CacheForLogo.bezier12Path;
            bezier12Path.reset();
            bezier12Path.moveTo(275.33f, 273.75f);
            bezier12Path.cubicTo(275.57f, 273.79f, 276.49f, 273.83f, 278.11f, 273.89f);
            bezier12Path.cubicTo(279.72f, 273.94f, 280.91f, 273.97f, 281.69f, 273.97f);
            bezier12Path.cubicTo(283.55f, 273.97f, 284.68f, 273.93f, 285.08f, 273.87f);
            bezier12Path.cubicTo(285.09f, 273.55f, 285.1f, 273.3f, 285.1f, 273.12f);
            bezier12Path.cubicTo(285.1f, 271.05f, 284.68f, 269.51f, 283.84f, 268.5f);
            bezier12Path.cubicTo(282.99f, 267.49f, 281.84f, 266.98f, 280.38f, 266.98f);
            bezier12Path.cubicTo(278.79f, 266.98f, 277.55f, 267.55f, 276.66f, 268.69f);
            bezier12Path.cubicTo(275.77f, 269.83f, 275.33f, 271.51f, 275.33f, 273.75f);
            bezier12Path.close();
            bezier12Path.moveTo(288.19f, 281.95f);
            bezier12Path.lineTo(287.55f, 283.4f);
            bezier12Path.cubicTo(286.16f, 284.3f, 284.92f, 284.88f, 283.83f, 285.15f);
            bezier12Path.cubicTo(282.74f, 285.41f, 281.76f, 285.55f, 280.91f, 285.55f);
            bezier12Path.cubicTo(279.3f, 285.55f, 277.78f, 285.23f, 276.34f, 284.6f);
            bezier12Path.cubicTo(274.9f, 283.98f, 273.73f, 282.91f, 272.83f, 281.41f);
            bezier12Path.cubicTo(271.93f, 279.92f, 271.47f, 278.11f, 271.47f, 275.99f);
            bezier12Path.cubicTo(271.47f, 274.59f, 271.65f, 273.32f, 272f, 272.19f);
            bezier12Path.cubicTo(272.34f, 271.06f, 272.71f, 270.22f, 273.09f, 269.67f);
            bezier12Path.cubicTo(273.47f, 269.12f, 274.12f, 268.51f, 275.03f, 267.85f);
            bezier12Path.cubicTo(275.94f, 267.18f, 276.9f, 266.64f, 277.92f, 266.24f);
            bezier12Path.cubicTo(278.93f, 265.84f, 280.03f, 265.64f, 281.21f, 265.64f);
            bezier12Path.cubicTo(282.81f, 265.64f, 284.23f, 266.02f, 285.45f, 266.77f);
            bezier12Path.cubicTo(286.68f, 267.53f, 287.54f, 268.49f, 288.03f, 269.67f);
            bezier12Path.cubicTo(288.53f, 270.85f, 288.77f, 272.1f, 288.77f, 273.43f);
            bezier12Path.cubicTo(288.77f, 273.84f, 288.75f, 274.24f, 288.71f, 274.63f);
            bezier12Path.lineTo(288.49f, 274.85f);
            bezier12Path.cubicTo(287.58f, 275.05f, 286.36f, 275.19f, 284.82f, 275.25f);
            bezier12Path.cubicTo(283.28f, 275.32f, 282.26f, 275.35f, 281.77f, 275.35f);
            bezier12Path.lineTo(275.33f, 275.35f);
            bezier12Path.cubicTo(275.35f, 278.12f, 276.05f, 280.16f, 277.42f, 281.47f);
            bezier12Path.cubicTo(278.78f, 282.78f, 280.45f, 283.44f, 282.43f, 283.44f);
            bezier12Path.cubicTo(283.37f, 283.44f, 284.27f, 283.28f, 285.13f, 282.96f);
            bezier12Path.cubicTo(286f, 282.64f, 286.91f, 282.19f, 287.87f, 281.61f);
            bezier12Path.lineTo(288.19f, 281.95f);
            bezier12Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier12Path, paint);
            
            // Bezier 13
            RectF bezier13Rect = CacheForLogo.bezier13Rect;
            bezier13Rect.set(291.16f, 265.64f, 308.46f, 285.55f);
            Path bezier13Path = CacheForLogo.bezier13Path;
            bezier13Path.reset();
            bezier13Path.moveTo(295.02f, 273.75f);
            bezier13Path.cubicTo(295.26f, 273.79f, 296.18f, 273.83f, 297.8f, 273.89f);
            bezier13Path.cubicTo(299.41f, 273.94f, 300.6f, 273.97f, 301.38f, 273.97f);
            bezier13Path.cubicTo(303.24f, 273.97f, 304.37f, 273.93f, 304.77f, 273.87f);
            bezier13Path.cubicTo(304.78f, 273.55f, 304.79f, 273.3f, 304.79f, 273.12f);
            bezier13Path.cubicTo(304.79f, 271.05f, 304.37f, 269.51f, 303.53f, 268.5f);
            bezier13Path.cubicTo(302.68f, 267.49f, 301.53f, 266.98f, 300.07f, 266.98f);
            bezier13Path.cubicTo(298.48f, 266.98f, 297.24f, 267.55f, 296.35f, 268.69f);
            bezier13Path.cubicTo(295.46f, 269.83f, 295.02f, 271.51f, 295.02f, 273.75f);
            bezier13Path.close();
            bezier13Path.moveTo(307.88f, 281.95f);
            bezier13Path.lineTo(307.24f, 283.4f);
            bezier13Path.cubicTo(305.85f, 284.3f, 304.61f, 284.88f, 303.52f, 285.15f);
            bezier13Path.cubicTo(302.43f, 285.41f, 301.45f, 285.55f, 300.6f, 285.55f);
            bezier13Path.cubicTo(298.99f, 285.55f, 297.47f, 285.23f, 296.03f, 284.6f);
            bezier13Path.cubicTo(294.59f, 283.98f, 293.42f, 282.91f, 292.52f, 281.41f);
            bezier13Path.cubicTo(291.62f, 279.92f, 291.16f, 278.11f, 291.16f, 275.99f);
            bezier13Path.cubicTo(291.16f, 274.59f, 291.34f, 273.32f, 291.69f, 272.19f);
            bezier13Path.cubicTo(292.03f, 271.06f, 292.4f, 270.22f, 292.78f, 269.67f);
            bezier13Path.cubicTo(293.16f, 269.12f, 293.81f, 268.51f, 294.71f, 267.85f);
            bezier13Path.cubicTo(295.63f, 267.18f, 296.59f, 266.64f, 297.61f, 266.24f);
            bezier13Path.cubicTo(298.62f, 265.84f, 299.72f, 265.64f, 300.9f, 265.64f);
            bezier13Path.cubicTo(302.5f, 265.64f, 303.92f, 266.02f, 305.14f, 266.77f);
            bezier13Path.cubicTo(306.37f, 267.53f, 307.23f, 268.49f, 307.72f, 269.67f);
            bezier13Path.cubicTo(308.21f, 270.85f, 308.46f, 272.1f, 308.46f, 273.43f);
            bezier13Path.cubicTo(308.46f, 273.84f, 308.44f, 274.24f, 308.4f, 274.63f);
            bezier13Path.lineTo(308.18f, 274.85f);
            bezier13Path.cubicTo(307.27f, 275.05f, 306.05f, 275.19f, 304.51f, 275.25f);
            bezier13Path.cubicTo(302.97f, 275.32f, 301.95f, 275.35f, 301.46f, 275.35f);
            bezier13Path.lineTo(295.02f, 275.35f);
            bezier13Path.cubicTo(295.04f, 278.12f, 295.74f, 280.16f, 297.1f, 281.47f);
            bezier13Path.cubicTo(298.47f, 282.78f, 300.14f, 283.44f, 302.12f, 283.44f);
            bezier13Path.cubicTo(303.06f, 283.44f, 303.96f, 283.28f, 304.82f, 282.96f);
            bezier13Path.cubicTo(305.68f, 282.64f, 306.6f, 282.19f, 307.56f, 281.61f);
            bezier13Path.lineTo(307.88f, 281.95f);
            bezier13Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier13Path, paint);
            
            // Bezier 14
            RectF bezier14Rect = CacheForLogo.bezier14Rect;
            bezier14Rect.set(73.82f, 299.53f, 82.45f, 308.3f);
            Path bezier14Path = CacheForLogo.bezier14Path;
            bezier14Path.reset();
            bezier14Path.moveTo(75.48f, 303.32f);
            bezier14Path.cubicTo(75.48f, 304.14f, 75.59f, 304.88f, 75.8f, 305.52f);
            bezier14Path.cubicTo(76.01f, 306.17f, 76.34f, 306.69f, 76.8f, 307.08f);
            bezier14Path.cubicTo(77.26f, 307.48f, 77.78f, 307.67f, 78.37f, 307.67f);
            bezier14Path.cubicTo(79.06f, 307.67f, 79.63f, 307.4f, 80.08f, 306.85f);
            bezier14Path.cubicTo(80.53f, 306.31f, 80.76f, 305.48f, 80.76f, 304.38f);
            bezier14Path.cubicTo(80.76f, 303.13f, 80.51f, 302.11f, 80.02f, 301.31f);
            bezier14Path.cubicTo(79.53f, 300.51f, 78.83f, 300.12f, 77.91f, 300.12f);
            bezier14Path.cubicTo(77.15f, 300.12f, 76.55f, 300.39f, 76.12f, 300.94f);
            bezier14Path.cubicTo(75.7f, 301.49f, 75.48f, 302.29f, 75.48f, 303.32f);
            bezier14Path.close();
            bezier14Path.moveTo(73.82f, 303.93f);
            bezier14Path.cubicTo(73.82f, 303.23f, 73.97f, 302.56f, 74.25f, 301.91f);
            bezier14Path.cubicTo(74.54f, 301.27f, 75.04f, 300.71f, 75.75f, 300.23f);
            bezier14Path.cubicTo(76.46f, 299.76f, 77.31f, 299.53f, 78.29f, 299.53f);
            bezier14Path.cubicTo(79.52f, 299.53f, 80.52f, 299.92f, 81.29f, 300.69f);
            bezier14Path.cubicTo(82.07f, 301.47f, 82.45f, 302.46f, 82.45f, 303.68f);
            bezier14Path.cubicTo(82.45f, 305.02f, 82.01f, 306.13f, 81.12f, 307f);
            bezier14Path.cubicTo(80.23f, 307.86f, 79.16f, 308.3f, 77.91f, 308.3f);
            bezier14Path.cubicTo(77.09f, 308.3f, 76.36f, 308.08f, 75.71f, 307.64f);
            bezier14Path.cubicTo(75.07f, 307.19f, 74.59f, 306.65f, 74.28f, 306.01f);
            bezier14Path.cubicTo(73.98f, 305.37f, 73.82f, 304.68f, 73.82f, 303.93f);
            bezier14Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier14Path, paint);
            
            // Bezier 15
            RectF bezier15Rect = CacheForLogo.bezier15Rect;
            bezier15Rect.set(84.38f, 294.93f, 90.02f, 308.02f);
            Path bezier15Path = CacheForLogo.bezier15Path;
            bezier15Path.reset();
            bezier15Path.moveTo(89.01f, 307.51f);
            bezier15Path.lineTo(89.08f, 307.58f);
            bezier15Path.lineTo(89.08f, 307.95f);
            bezier15Path.lineTo(89.01f, 308.02f);
            bezier15Path.cubicTo(88.83f, 308.02f, 88.49f, 308.01f, 87.99f, 307.99f);
            bezier15Path.cubicTo(87.53f, 307.97f, 87.06f, 307.95f, 86.57f, 307.95f);
            bezier15Path.cubicTo(85.94f, 307.95f, 85.23f, 307.98f, 84.45f, 308.02f);
            bezier15Path.lineTo(84.38f, 307.95f);
            bezier15Path.lineTo(84.38f, 307.58f);
            bezier15Path.lineTo(84.45f, 307.51f);
            bezier15Path.cubicTo(85.02f, 307.47f, 85.34f, 307.45f, 85.42f, 307.43f);
            bezier15Path.cubicTo(85.5f, 307.41f, 85.56f, 307.37f, 85.61f, 307.32f);
            bezier15Path.cubicTo(85.66f, 307.26f, 85.7f, 307.18f, 85.72f, 307.06f);
            bezier15Path.cubicTo(85.74f, 306.95f, 85.77f, 306.57f, 85.79f, 305.93f);
            bezier15Path.cubicTo(85.82f, 305.29f, 85.83f, 304.8f, 85.83f, 304.47f);
            bezier15Path.lineTo(85.83f, 301.08f);
            bezier15Path.lineTo(84.7f, 301.14f);
            bezier15Path.lineTo(84.62f, 301.07f);
            bezier15Path.lineTo(84.62f, 300.85f);
            bezier15Path.lineTo(84.68f, 300.77f);
            bezier15Path.lineTo(85.83f, 300.18f);
            bezier15Path.lineTo(85.83f, 299.65f);
            bezier15Path.cubicTo(85.83f, 299.06f, 85.86f, 298.62f, 85.91f, 298.32f);
            bezier15Path.cubicTo(85.96f, 298.02f, 86.06f, 297.74f, 86.21f, 297.48f);
            bezier15Path.cubicTo(86.35f, 297.23f, 86.6f, 296.91f, 86.96f, 296.52f);
            bezier15Path.cubicTo(87.31f, 296.13f, 87.63f, 295.81f, 87.9f, 295.56f);
            bezier15Path.cubicTo(88.17f, 295.31f, 88.4f, 295.14f, 88.6f, 295.06f);
            bezier15Path.cubicTo(88.8f, 294.97f, 89.03f, 294.93f, 89.3f, 294.93f);
            bezier15Path.cubicTo(89.53f, 294.93f, 89.77f, 294.97f, 90.02f, 295.06f);
            bezier15Path.lineTo(90.02f, 296.5f);
            bezier15Path.lineTo(89.81f, 296.58f);
            bezier15Path.cubicTo(89.49f, 296.29f, 89.1f, 296.14f, 88.67f, 296.14f);
            bezier15Path.cubicTo(88.37f, 296.14f, 88.1f, 296.21f, 87.88f, 296.33f);
            bezier15Path.cubicTo(87.66f, 296.46f, 87.5f, 296.66f, 87.42f, 296.95f);
            bezier15Path.cubicTo(87.34f, 297.23f, 87.3f, 297.7f, 87.3f, 298.36f);
            bezier15Path.lineTo(87.3f, 300.18f);
            bezier15Path.lineTo(88.24f, 300.18f);
            bezier15Path.cubicTo(88.73f, 300.18f, 89.19f, 300.16f, 89.62f, 300.12f);
            bezier15Path.lineTo(89.7f, 300.22f);
            bezier15Path.lineTo(89.54f, 300.99f);
            bezier15Path.lineTo(89.46f, 301.08f);
            bezier15Path.cubicTo(89.29f, 301.08f, 89.17f, 301.07f, 89.12f, 301.07f);
            bezier15Path.lineTo(87.98f, 301.06f);
            bezier15Path.lineTo(87.3f, 301.06f);
            bezier15Path.lineTo(87.3f, 304.61f);
            bezier15Path.cubicTo(87.3f, 304.79f, 87.31f, 305.22f, 87.34f, 305.89f);
            bezier15Path.cubicTo(87.37f, 306.57f, 87.39f, 306.96f, 87.41f, 307.08f);
            bezier15Path.cubicTo(87.44f, 307.19f, 87.48f, 307.28f, 87.53f, 307.33f);
            bezier15Path.cubicTo(87.59f, 307.38f, 87.68f, 307.42f, 87.8f, 307.45f);
            bezier15Path.cubicTo(87.93f, 307.47f, 88.33f, 307.49f, 89.01f, 307.51f);
            bezier15Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier15Path, paint);
            
            // Bezier 16
            RectF bezier16Rect = CacheForLogo.bezier16Rect;
            bezier16Rect.set(96.51f, 295.52f, 109.43f, 308.02f);
            Path bezier16Path = CacheForLogo.bezier16Path;
            bezier16Path.reset();
            bezier16Path.moveTo(99.76f, 307.07f);
            bezier16Path.cubicTo(100.36f, 307.19f, 101.05f, 307.24f, 101.83f, 307.24f);
            bezier16Path.cubicTo(103.19f, 307.24f, 104.28f, 307.01f, 105.1f, 306.56f);
            bezier16Path.cubicTo(105.92f, 306.1f, 106.53f, 305.42f, 106.93f, 304.53f);
            bezier16Path.cubicTo(107.34f, 303.63f, 107.54f, 302.62f, 107.54f, 301.5f);
            bezier16Path.cubicTo(107.54f, 299.84f, 107.1f, 298.55f, 106.21f, 297.64f);
            bezier16Path.cubicTo(105.33f, 296.72f, 103.93f, 296.27f, 102.03f, 296.27f);
            bezier16Path.cubicTo(101.24f, 296.27f, 100.49f, 296.32f, 99.76f, 296.44f);
            bezier16Path.cubicTo(99.71f, 297.4f, 99.69f, 298.49f, 99.69f, 299.69f);
            bezier16Path.lineTo(99.69f, 302.45f);
            bezier16Path.lineTo(99.71f, 305.04f);
            bezier16Path.cubicTo(99.71f, 305.54f, 99.73f, 306.22f, 99.76f, 307.07f);
            bezier16Path.close();
            bezier16Path.moveTo(96.51f, 295.6f);
            bezier16Path.lineTo(96.58f, 295.54f);
            bezier16Path.cubicTo(97.59f, 295.58f, 98.28f, 295.61f, 98.65f, 295.61f);
            bezier16Path.lineTo(102.77f, 295.52f);
            bezier16Path.cubicTo(103.94f, 295.52f, 104.9f, 295.63f, 105.65f, 295.85f);
            bezier16Path.cubicTo(106.4f, 296.07f, 107.07f, 296.45f, 107.65f, 296.99f);
            bezier16Path.cubicTo(108.23f, 297.53f, 108.67f, 298.16f, 108.98f, 298.88f);
            bezier16Path.cubicTo(109.28f, 299.6f, 109.43f, 300.36f, 109.43f, 301.18f);
            bezier16Path.cubicTo(109.43f, 301.97f, 109.29f, 302.75f, 109.02f, 303.52f);
            bezier16Path.cubicTo(108.74f, 304.3f, 108.35f, 304.99f, 107.84f, 305.6f);
            bezier16Path.cubicTo(107.33f, 306.22f, 106.76f, 306.71f, 106.11f, 307.08f);
            bezier16Path.cubicTo(105.46f, 307.46f, 104.81f, 307.71f, 104.16f, 307.84f);
            bezier16Path.cubicTo(103.51f, 307.96f, 102.85f, 308.02f, 102.17f, 308.02f);
            bezier16Path.cubicTo(101.71f, 308.02f, 100.85f, 308.01f, 99.59f, 307.97f);
            bezier16Path.cubicTo(99.17f, 307.96f, 98.89f, 307.95f, 98.76f, 307.95f);
            bezier16Path.cubicTo(98.35f, 307.95f, 97.87f, 307.98f, 97.29f, 308.02f);
            bezier16Path.lineTo(97.22f, 307.95f);
            bezier16Path.lineTo(97.22f, 307.67f);
            bezier16Path.lineTo(97.29f, 307.58f);
            bezier16Path.cubicTo(97.64f, 307.4f, 97.83f, 307.29f, 97.88f, 307.25f);
            bezier16Path.cubicTo(97.93f, 307.2f, 97.97f, 306.69f, 98.01f, 305.71f);
            bezier16Path.cubicTo(98.04f, 304.73f, 98.05f, 303.98f, 98.05f, 303.46f);
            bezier16Path.lineTo(98.05f, 300.24f);
            bezier16Path.lineTo(98.05f, 298.24f);
            bezier16Path.cubicTo(98.05f, 297.81f, 98.04f, 297.46f, 98.03f, 297.18f);
            bezier16Path.cubicTo(98.02f, 296.91f, 98f, 296.72f, 97.97f, 296.6f);
            bezier16Path.cubicTo(97.94f, 296.48f, 97.9f, 296.4f, 97.87f, 296.35f);
            bezier16Path.cubicTo(97.83f, 296.31f, 97.77f, 296.27f, 97.68f, 296.23f);
            bezier16Path.cubicTo(97.6f, 296.2f, 97.45f, 296.18f, 97.25f, 296.15f);
            bezier16Path.lineTo(96.58f, 296.1f);
            bezier16Path.lineTo(96.51f, 296.04f);
            bezier16Path.lineTo(96.51f, 295.6f);
            bezier16Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier16Path, paint);
            
            // Bezier 17
            RectF bezier17Rect = CacheForLogo.bezier17Rect;
            bezier17Rect.set(111.22f, 299.58f, 121.43f, 308.22f);
            Path bezier17Path = CacheForLogo.bezier17Path;
            bezier17Path.reset();
            bezier17Path.moveTo(114.12f, 299.58f);
            bezier17Path.lineTo(114.28f, 299.69f);
            bezier17Path.cubicTo(114.22f, 300.46f, 114.19f, 301.44f, 114.19f, 302.62f);
            bezier17Path.lineTo(114.19f, 304.67f);
            bezier17Path.cubicTo(114.19f, 305.42f, 114.24f, 305.94f, 114.36f, 306.23f);
            bezier17Path.cubicTo(114.47f, 306.52f, 114.67f, 306.75f, 114.95f, 306.9f);
            bezier17Path.cubicTo(115.23f, 307.06f, 115.57f, 307.14f, 115.95f, 307.14f);
            bezier17Path.cubicTo(116.38f, 307.14f, 116.77f, 307.06f, 117.12f, 306.89f);
            bezier17Path.cubicTo(117.47f, 306.72f, 117.77f, 306.48f, 118.01f, 306.18f);
            bezier17Path.cubicTo(118.24f, 305.88f, 118.38f, 305.67f, 118.41f, 305.56f);
            bezier17Path.cubicTo(118.45f, 305.46f, 118.47f, 305.16f, 118.48f, 304.68f);
            bezier17Path.lineTo(118.51f, 303.69f);
            bezier17Path.lineTo(118.51f, 302.74f);
            bezier17Path.cubicTo(118.51f, 302.51f, 118.5f, 302.19f, 118.48f, 301.78f);
            bezier17Path.cubicTo(118.45f, 301.38f, 118.43f, 301.13f, 118.42f, 301.04f);
            bezier17Path.cubicTo(118.4f, 300.94f, 118.36f, 300.88f, 118.28f, 300.83f);
            bezier17Path.cubicTo(118.21f, 300.79f, 118.05f, 300.77f, 117.83f, 300.77f);
            bezier17Path.lineTo(117.09f, 300.76f);
            bezier17Path.lineTo(117.01f, 300.69f);
            bezier17Path.lineTo(117.01f, 300.31f);
            bezier17Path.lineTo(117.08f, 300.24f);
            bezier17Path.cubicTo(118.2f, 300.1f, 119.14f, 299.88f, 119.91f, 299.58f);
            bezier17Path.lineTo(120.08f, 299.69f);
            bezier17Path.cubicTo(120.01f, 300.46f, 119.98f, 301.44f, 119.98f, 302.62f);
            bezier17Path.lineTo(119.98f, 304.17f);
            bezier17Path.cubicTo(119.98f, 304.26f, 119.99f, 304.97f, 120.02f, 306.32f);
            bezier17Path.cubicTo(120.03f, 306.82f, 120.06f, 307.12f, 120.12f, 307.23f);
            bezier17Path.cubicTo(120.16f, 307.34f, 120.23f, 307.41f, 120.32f, 307.46f);
            bezier17Path.cubicTo(120.41f, 307.5f, 120.67f, 307.52f, 121.1f, 307.52f);
            bezier17Path.lineTo(121.35f, 307.52f);
            bezier17Path.lineTo(121.43f, 307.59f);
            bezier17Path.lineTo(121.43f, 307.95f);
            bezier17Path.lineTo(121.36f, 308.02f);
            bezier17Path.cubicTo(120.53f, 307.98f, 119.98f, 307.95f, 119.7f, 307.95f);
            bezier17Path.cubicTo(119.34f, 307.95f, 118.93f, 307.98f, 118.46f, 308.02f);
            bezier17Path.lineTo(118.38f, 307.95f);
            bezier17Path.cubicTo(118.41f, 307.35f, 118.44f, 306.84f, 118.46f, 306.43f);
            bezier17Path.cubicTo(118.09f, 306.71f, 117.67f, 307.1f, 117.19f, 307.58f);
            bezier17Path.cubicTo(117.01f, 307.76f, 116.75f, 307.91f, 116.41f, 308.03f);
            bezier17Path.cubicTo(116.07f, 308.16f, 115.68f, 308.22f, 115.25f, 308.22f);
            bezier17Path.cubicTo(114.59f, 308.22f, 114.08f, 308.11f, 113.72f, 307.91f);
            bezier17Path.cubicTo(113.35f, 307.7f, 113.09f, 307.41f, 112.94f, 307.05f);
            bezier17Path.cubicTo(112.79f, 306.68f, 112.71f, 306.05f, 112.71f, 305.15f);
            bezier17Path.lineTo(112.72f, 304.46f);
            bezier17Path.lineTo(112.72f, 302.74f);
            bezier17Path.cubicTo(112.72f, 302.51f, 112.71f, 302.19f, 112.68f, 301.78f);
            bezier17Path.cubicTo(112.66f, 301.38f, 112.64f, 301.13f, 112.63f, 301.04f);
            bezier17Path.cubicTo(112.61f, 300.94f, 112.57f, 300.88f, 112.49f, 300.83f);
            bezier17Path.cubicTo(112.41f, 300.79f, 112.26f, 300.77f, 112.03f, 300.77f);
            bezier17Path.lineTo(111.29f, 300.76f);
            bezier17Path.lineTo(111.22f, 300.69f);
            bezier17Path.lineTo(111.22f, 300.31f);
            bezier17Path.lineTo(111.29f, 300.24f);
            bezier17Path.cubicTo(112.41f, 300.1f, 113.35f, 299.88f, 114.12f, 299.58f);
            bezier17Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier17Path, paint);
            
            // Bezier 18
            RectF bezier18Rect = CacheForLogo.bezier18Rect;
            bezier18Rect.set(123.3f, 299.56f, 129.59f, 308.02f);
            Path bezier18Path = CacheForLogo.bezier18Path;
            bezier18Path.reset();
            bezier18Path.moveTo(126.21f, 299.58f);
            bezier18Path.lineTo(126.37f, 299.69f);
            bezier18Path.cubicTo(126.34f, 300.03f, 126.31f, 300.64f, 126.29f, 301.5f);
            bezier18Path.lineTo(126.95f, 300.67f);
            bezier18Path.cubicTo(127.17f, 300.39f, 127.36f, 300.18f, 127.53f, 300.03f);
            bezier18Path.cubicTo(127.69f, 299.88f, 127.89f, 299.77f, 128.11f, 299.69f);
            bezier18Path.cubicTo(128.33f, 299.6f, 128.56f, 299.56f, 128.8f, 299.56f);
            bezier18Path.cubicTo(129.06f, 299.56f, 129.3f, 299.61f, 129.53f, 299.72f);
            bezier18Path.lineTo(129.59f, 299.84f);
            bezier18Path.cubicTo(129.5f, 300.62f, 129.44f, 301.31f, 129.43f, 301.9f);
            bezier18Path.lineTo(129.04f, 301.9f);
            bezier18Path.cubicTo(128.8f, 301.36f, 128.42f, 301.09f, 127.9f, 301.09f);
            bezier18Path.cubicTo(127.54f, 301.09f, 127.22f, 301.21f, 126.95f, 301.44f);
            bezier18Path.cubicTo(126.68f, 301.67f, 126.5f, 301.96f, 126.41f, 302.31f);
            bezier18Path.cubicTo(126.32f, 302.66f, 126.27f, 303.1f, 126.27f, 303.63f);
            bezier18Path.lineTo(126.27f, 304.61f);
            bezier18Path.cubicTo(126.27f, 304.78f, 126.29f, 305.21f, 126.31f, 305.9f);
            bezier18Path.cubicTo(126.33f, 306.58f, 126.36f, 306.98f, 126.38f, 307.08f);
            bezier18Path.cubicTo(126.41f, 307.19f, 126.45f, 307.27f, 126.51f, 307.32f);
            bezier18Path.cubicTo(126.56f, 307.37f, 126.64f, 307.4f, 126.73f, 307.42f);
            bezier18Path.cubicTo(126.82f, 307.44f, 127.24f, 307.47f, 127.98f, 307.51f);
            bezier18Path.lineTo(128.06f, 307.58f);
            bezier18Path.lineTo(128.06f, 307.95f);
            bezier18Path.lineTo(127.98f, 308.02f);
            bezier18Path.cubicTo(127.2f, 307.98f, 126.39f, 307.95f, 125.54f, 307.95f);
            bezier18Path.cubicTo(124.86f, 307.95f, 124.16f, 307.98f, 123.43f, 308.02f);
            bezier18Path.lineTo(123.35f, 307.95f);
            bezier18Path.lineTo(123.35f, 307.58f);
            bezier18Path.lineTo(123.43f, 307.51f);
            bezier18Path.cubicTo(124f, 307.47f, 124.32f, 307.45f, 124.39f, 307.43f);
            bezier18Path.cubicTo(124.46f, 307.41f, 124.53f, 307.37f, 124.58f, 307.32f);
            bezier18Path.cubicTo(124.64f, 307.26f, 124.68f, 307.18f, 124.7f, 307.06f);
            bezier18Path.cubicTo(124.72f, 306.95f, 124.74f, 306.57f, 124.77f, 305.93f);
            bezier18Path.cubicTo(124.79f, 305.29f, 124.81f, 304.8f, 124.81f, 304.47f);
            bezier18Path.lineTo(124.81f, 302.74f);
            bezier18Path.cubicTo(124.81f, 302.51f, 124.8f, 302.19f, 124.77f, 301.78f);
            bezier18Path.cubicTo(124.75f, 301.38f, 124.73f, 301.13f, 124.71f, 301.04f);
            bezier18Path.cubicTo(124.7f, 300.94f, 124.66f, 300.88f, 124.58f, 300.83f);
            bezier18Path.cubicTo(124.5f, 300.79f, 124.35f, 300.77f, 124.12f, 300.77f);
            bezier18Path.lineTo(123.38f, 300.76f);
            bezier18Path.lineTo(123.3f, 300.69f);
            bezier18Path.lineTo(123.3f, 300.31f);
            bezier18Path.lineTo(123.38f, 300.24f);
            bezier18Path.cubicTo(124.49f, 300.1f, 125.44f, 299.88f, 126.21f, 299.58f);
            bezier18Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier18Path, paint);
            
            // Bezier 19
            RectF bezier19Rect = CacheForLogo.bezier19Rect;
            bezier19Rect.set(130.93f, 294.94f, 141.13f, 308.02f);
            Path bezier19Path = CacheForLogo.bezier19Path;
            bezier19Path.reset();
            bezier19Path.moveTo(133.83f, 294.94f);
            bezier19Path.lineTo(134f, 295.04f);
            bezier19Path.cubicTo(133.93f, 295.72f, 133.9f, 297.07f, 133.9f, 299.1f);
            bezier19Path.lineTo(133.9f, 301.27f);
            bezier19Path.cubicTo(134.39f, 300.86f, 134.85f, 300.46f, 135.27f, 300.06f);
            bezier19Path.cubicTo(135.39f, 299.95f, 135.51f, 299.87f, 135.62f, 299.82f);
            bezier19Path.cubicTo(135.73f, 299.76f, 135.91f, 299.71f, 136.16f, 299.65f);
            bezier19Path.cubicTo(136.41f, 299.59f, 136.67f, 299.56f, 136.93f, 299.56f);
            bezier19Path.cubicTo(137.38f, 299.56f, 137.81f, 299.65f, 138.23f, 299.83f);
            bezier19Path.cubicTo(138.65f, 300.02f, 138.96f, 300.23f, 139.18f, 300.48f);
            bezier19Path.cubicTo(139.39f, 300.73f, 139.54f, 301.02f, 139.62f, 301.36f);
            bezier19Path.cubicTo(139.7f, 301.7f, 139.74f, 302.12f, 139.74f, 302.62f);
            bezier19Path.lineTo(139.74f, 304.17f);
            bezier19Path.cubicTo(139.74f, 304.27f, 139.76f, 305f, 139.79f, 306.36f);
            bezier19Path.cubicTo(139.81f, 306.91f, 139.87f, 307.24f, 139.98f, 307.35f);
            bezier19Path.cubicTo(140.08f, 307.45f, 140.45f, 307.51f, 141.06f, 307.51f);
            bezier19Path.lineTo(141.13f, 307.58f);
            bezier19Path.lineTo(141.13f, 307.95f);
            bezier19Path.lineTo(141.06f, 308.02f);
            bezier19Path.cubicTo(140.32f, 307.98f, 139.81f, 307.95f, 139.55f, 307.95f);
            bezier19Path.cubicTo(139.42f, 307.95f, 138.99f, 307.98f, 138.27f, 308.02f);
            bezier19Path.lineTo(138.16f, 307.93f);
            bezier19Path.cubicTo(138.24f, 307.17f, 138.28f, 306.17f, 138.28f, 304.95f);
            bezier19Path.lineTo(138.28f, 303.8f);
            bezier19Path.cubicTo(138.28f, 303.11f, 138.26f, 302.61f, 138.23f, 302.3f);
            bezier19Path.cubicTo(138.19f, 302f, 138.1f, 301.72f, 137.93f, 301.47f);
            bezier19Path.cubicTo(137.77f, 301.22f, 137.55f, 301.03f, 137.28f, 300.89f);
            bezier19Path.cubicTo(137.01f, 300.76f, 136.68f, 300.69f, 136.29f, 300.69f);
            bezier19Path.cubicTo(135.89f, 300.69f, 135.56f, 300.74f, 135.29f, 300.85f);
            bezier19Path.cubicTo(135.03f, 300.96f, 134.75f, 301.14f, 134.48f, 301.4f);
            bezier19Path.cubicTo(134.2f, 301.66f, 134.04f, 301.87f, 133.98f, 302.05f);
            bezier19Path.cubicTo(133.93f, 302.22f, 133.9f, 302.55f, 133.9f, 303.04f);
            bezier19Path.lineTo(133.9f, 304.61f);
            bezier19Path.cubicTo(133.9f, 304.74f, 133.91f, 305.15f, 133.93f, 305.85f);
            bezier19Path.cubicTo(133.96f, 306.55f, 133.98f, 306.96f, 134.01f, 307.08f);
            bezier19Path.cubicTo(134.04f, 307.19f, 134.07f, 307.28f, 134.13f, 307.33f);
            bezier19Path.cubicTo(134.18f, 307.38f, 134.25f, 307.42f, 134.32f, 307.43f);
            bezier19Path.cubicTo(134.4f, 307.45f, 134.71f, 307.47f, 135.27f, 307.51f);
            bezier19Path.lineTo(135.35f, 307.58f);
            bezier19Path.lineTo(135.35f, 307.95f);
            bezier19Path.lineTo(135.28f, 308.02f);
            bezier19Path.cubicTo(134.55f, 307.98f, 133.84f, 307.95f, 133.16f, 307.95f);
            bezier19Path.cubicTo(132.49f, 307.95f, 131.78f, 307.98f, 131.05f, 308.02f);
            bezier19Path.lineTo(130.97f, 307.95f);
            bezier19Path.lineTo(130.97f, 307.58f);
            bezier19Path.lineTo(131.05f, 307.51f);
            bezier19Path.cubicTo(131.62f, 307.47f, 131.94f, 307.45f, 132.01f, 307.43f);
            bezier19Path.cubicTo(132.09f, 307.41f, 132.15f, 307.37f, 132.21f, 307.32f);
            bezier19Path.cubicTo(132.26f, 307.26f, 132.3f, 307.18f, 132.32f, 307.06f);
            bezier19Path.cubicTo(132.34f, 306.95f, 132.37f, 306.57f, 132.39f, 305.93f);
            bezier19Path.cubicTo(132.42f, 305.29f, 132.43f, 304.8f, 132.43f, 304.47f);
            bezier19Path.lineTo(132.43f, 299.92f);
            bezier19Path.lineTo(132.4f, 298.06f);
            bezier19Path.cubicTo(132.38f, 297.41f, 132.36f, 296.96f, 132.34f, 296.7f);
            bezier19Path.cubicTo(132.32f, 296.45f, 132.29f, 296.3f, 132.26f, 296.26f);
            bezier19Path.cubicTo(132.22f, 296.21f, 132.16f, 296.18f, 132.07f, 296.15f);
            bezier19Path.cubicTo(131.98f, 296.13f, 131.63f, 296.12f, 131.01f, 296.12f);
            bezier19Path.lineTo(130.93f, 296.04f);
            bezier19Path.lineTo(130.93f, 295.67f);
            bezier19Path.lineTo(131f, 295.59f);
            bezier19Path.cubicTo(132.12f, 295.46f, 133.06f, 295.24f, 133.83f, 294.94f);
            bezier19Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier19Path, paint);
            
            // Bezier 20
            RectF bezier20Rect = CacheForLogo.bezier20Rect;
            bezier20Rect.set(142.94f, 299.57f, 150.79f, 308.18f);
            Path bezier20Path = CacheForLogo.bezier20Path;
            bezier20Path.reset();
            bezier20Path.moveTo(148.16f, 303.39f);
            bezier20Path.cubicTo(146.52f, 303.66f, 145.5f, 303.96f, 145.09f, 304.27f);
            bezier20Path.cubicTo(144.69f, 304.59f, 144.48f, 305.08f, 144.48f, 305.74f);
            bezier20Path.cubicTo(144.48f, 306.65f, 144.94f, 307.11f, 145.85f, 307.11f);
            bezier20Path.cubicTo(146.63f, 307.11f, 147.4f, 306.66f, 148.16f, 305.76f);
            bezier20Path.lineTo(148.16f, 303.39f);
            bezier20Path.close();
            bezier20Path.moveTo(144.08f, 302f);
            bezier20Path.lineTo(143.74f, 301.91f);
            bezier20Path.lineTo(143.67f, 301.82f);
            bezier20Path.lineTo(143.67f, 300.73f);
            bezier20Path.cubicTo(144.71f, 299.96f, 145.72f, 299.57f, 146.71f, 299.57f);
            bezier20Path.cubicTo(147.38f, 299.57f, 147.94f, 299.7f, 148.39f, 299.95f);
            bezier20Path.cubicTo(148.83f, 300.2f, 149.15f, 300.52f, 149.35f, 300.89f);
            bezier20Path.cubicTo(149.55f, 301.27f, 149.65f, 301.71f, 149.65f, 302.22f);
            bezier20Path.lineTo(149.61f, 303.98f);
            bezier20Path.lineTo(149.61f, 306.6f);
            bezier20Path.cubicTo(149.61f, 306.96f, 149.63f, 307.18f, 149.68f, 307.25f);
            bezier20Path.cubicTo(149.73f, 307.33f, 149.79f, 307.38f, 149.85f, 307.41f);
            bezier20Path.cubicTo(149.92f, 307.43f, 150.04f, 307.45f, 150.21f, 307.47f);
            bezier20Path.lineTo(150.72f, 307.52f);
            bezier20Path.lineTo(150.79f, 307.59f);
            bezier20Path.lineTo(150.79f, 307.95f);
            bezier20Path.lineTo(150.72f, 308.02f);
            bezier20Path.cubicTo(150.29f, 307.98f, 149.89f, 307.96f, 149.52f, 307.96f);
            bezier20Path.cubicTo(149.17f, 307.96f, 148.75f, 307.98f, 148.25f, 308.02f);
            bezier20Path.lineTo(148.12f, 307.89f);
            bezier20Path.lineTo(148.16f, 306.48f);
            bezier20Path.lineTo(146.24f, 307.97f);
            bezier20Path.cubicTo(145.92f, 308.11f, 145.57f, 308.18f, 145.19f, 308.18f);
            bezier20Path.cubicTo(144.72f, 308.18f, 144.32f, 308.09f, 143.98f, 307.92f);
            bezier20Path.cubicTo(143.64f, 307.75f, 143.38f, 307.51f, 143.2f, 307.21f);
            bezier20Path.cubicTo(143.03f, 306.9f, 142.94f, 306.53f, 142.94f, 306.1f);
            bezier20Path.cubicTo(142.94f, 305.24f, 143.21f, 304.57f, 143.75f, 304.08f);
            bezier20Path.cubicTo(144.29f, 303.6f, 145.76f, 303.19f, 148.16f, 302.85f);
            bezier20Path.cubicTo(148.16f, 301.98f, 147.96f, 301.37f, 147.58f, 301.02f);
            bezier20Path.cubicTo(147.19f, 300.66f, 146.67f, 300.48f, 146.02f, 300.48f);
            bezier20Path.cubicTo(145.68f, 300.48f, 145.37f, 300.53f, 145.1f, 300.63f);
            bezier20Path.cubicTo(144.82f, 300.73f, 144.66f, 300.81f, 144.62f, 300.88f);
            bezier20Path.cubicTo(144.57f, 300.94f, 144.42f, 301.3f, 144.14f, 301.95f);
            bezier20Path.lineTo(144.08f, 302f);
            bezier20Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier20Path, paint);
            
            // Bezier 21
            RectF bezier21Rect = CacheForLogo.bezier21Rect;
            bezier21Rect.set(152.45f, 299.56f, 167.6f, 308.02f);
            Path bezier21Path = CacheForLogo.bezier21Path;
            bezier21Path.reset();
            bezier21Path.moveTo(155.35f, 299.58f);
            bezier21Path.lineTo(155.52f, 299.69f);
            bezier21Path.cubicTo(155.48f, 300.08f, 155.46f, 300.54f, 155.45f, 301.08f);
            bezier21Path.lineTo(156.28f, 300.32f);
            bezier21Path.cubicTo(156.52f, 300.1f, 156.67f, 299.96f, 156.75f, 299.9f);
            bezier21Path.cubicTo(156.82f, 299.84f, 157f, 299.77f, 157.29f, 299.69f);
            bezier21Path.cubicTo(157.57f, 299.6f, 157.86f, 299.56f, 158.17f, 299.56f);
            bezier21Path.cubicTo(158.76f, 299.56f, 159.27f, 299.71f, 159.71f, 300f);
            bezier21Path.cubicTo(160.15f, 300.29f, 160.48f, 300.69f, 160.69f, 301.2f);
            bezier21Path.cubicTo(161.48f, 300.45f, 161.94f, 300.03f, 162.07f, 299.95f);
            bezier21Path.cubicTo(162.2f, 299.87f, 162.41f, 299.78f, 162.7f, 299.7f);
            bezier21Path.cubicTo(162.99f, 299.61f, 163.27f, 299.57f, 163.56f, 299.57f);
            bezier21Path.cubicTo(164.02f, 299.57f, 164.45f, 299.67f, 164.83f, 299.87f);
            bezier21Path.cubicTo(165.22f, 300.07f, 165.53f, 300.33f, 165.76f, 300.65f);
            bezier21Path.cubicTo(165.99f, 300.97f, 166.12f, 301.32f, 166.16f, 301.7f);
            bezier21Path.cubicTo(166.2f, 302.07f, 166.21f, 302.59f, 166.21f, 303.24f);
            bezier21Path.lineTo(166.21f, 304.17f);
            bezier21Path.cubicTo(166.21f, 304.27f, 166.23f, 305f, 166.27f, 306.36f);
            bezier21Path.cubicTo(166.28f, 306.91f, 166.34f, 307.24f, 166.45f, 307.35f);
            bezier21Path.cubicTo(166.56f, 307.45f, 166.92f, 307.51f, 167.53f, 307.51f);
            bezier21Path.lineTo(167.6f, 307.58f);
            bezier21Path.lineTo(167.6f, 307.95f);
            bezier21Path.lineTo(167.53f, 308.02f);
            bezier21Path.cubicTo(166.79f, 307.98f, 166.29f, 307.95f, 166.02f, 307.95f);
            bezier21Path.cubicTo(165.88f, 307.95f, 165.45f, 307.98f, 164.75f, 308.02f);
            bezier21Path.lineTo(164.63f, 307.93f);
            bezier21Path.cubicTo(164.71f, 307.17f, 164.75f, 306.17f, 164.75f, 304.95f);
            bezier21Path.lineTo(164.75f, 303.89f);
            bezier21Path.cubicTo(164.75f, 302.96f, 164.7f, 302.31f, 164.62f, 301.94f);
            bezier21Path.cubicTo(164.53f, 301.57f, 164.32f, 301.26f, 164f, 301.02f);
            bezier21Path.cubicTo(163.68f, 300.79f, 163.29f, 300.67f, 162.85f, 300.67f);
            bezier21Path.cubicTo(162.53f, 300.67f, 162.24f, 300.73f, 161.96f, 300.86f);
            bezier21Path.cubicTo(161.69f, 300.98f, 161.44f, 301.17f, 161.22f, 301.42f);
            bezier21Path.cubicTo(161f, 301.67f, 160.88f, 301.9f, 160.85f, 302.12f);
            bezier21Path.cubicTo(160.83f, 302.33f, 160.82f, 302.72f, 160.82f, 303.3f);
            bezier21Path.lineTo(160.82f, 304.4f);
            bezier21Path.cubicTo(160.82f, 304.65f, 160.83f, 305.14f, 160.85f, 305.85f);
            bezier21Path.cubicTo(160.88f, 306.56f, 160.9f, 306.97f, 160.93f, 307.08f);
            bezier21Path.cubicTo(160.95f, 307.2f, 161f, 307.29f, 161.05f, 307.34f);
            bezier21Path.cubicTo(161.11f, 307.39f, 161.17f, 307.42f, 161.24f, 307.43f);
            bezier21Path.cubicTo(161.32f, 307.45f, 161.63f, 307.47f, 162.19f, 307.51f);
            bezier21Path.lineTo(162.27f, 307.58f);
            bezier21Path.lineTo(162.27f, 307.95f);
            bezier21Path.lineTo(162.2f, 308.02f);
            bezier21Path.cubicTo(161.47f, 307.98f, 160.76f, 307.95f, 160.08f, 307.95f);
            bezier21Path.cubicTo(159.45f, 307.95f, 158.75f, 307.98f, 157.97f, 308.02f);
            bezier21Path.lineTo(157.89f, 307.95f);
            bezier21Path.lineTo(157.89f, 307.58f);
            bezier21Path.lineTo(157.97f, 307.51f);
            bezier21Path.cubicTo(158.54f, 307.47f, 158.86f, 307.45f, 158.93f, 307.43f);
            bezier21Path.cubicTo(159.01f, 307.41f, 159.07f, 307.37f, 159.13f, 307.32f);
            bezier21Path.cubicTo(159.18f, 307.26f, 159.22f, 307.18f, 159.24f, 307.06f);
            bezier21Path.cubicTo(159.26f, 306.95f, 159.29f, 306.57f, 159.31f, 305.93f);
            bezier21Path.cubicTo(159.34f, 305.29f, 159.35f, 304.8f, 159.35f, 304.47f);
            bezier21Path.lineTo(159.35f, 303.47f);
            bezier21Path.cubicTo(159.35f, 302.81f, 159.3f, 302.3f, 159.21f, 301.94f);
            bezier21Path.cubicTo(159.12f, 301.59f, 158.93f, 301.28f, 158.63f, 301.04f);
            bezier21Path.cubicTo(158.33f, 300.79f, 157.96f, 300.67f, 157.5f, 300.67f);
            bezier21Path.cubicTo(157.15f, 300.67f, 156.83f, 300.74f, 156.54f, 300.88f);
            bezier21Path.cubicTo(156.25f, 301.01f, 156.01f, 301.18f, 155.83f, 301.39f);
            bezier21Path.cubicTo(155.65f, 301.59f, 155.53f, 301.78f, 155.49f, 301.95f);
            bezier21Path.cubicTo(155.44f, 302.13f, 155.42f, 302.51f, 155.42f, 303.09f);
            bezier21Path.lineTo(155.42f, 304.4f);
            bezier21Path.cubicTo(155.42f, 304.65f, 155.43f, 305.14f, 155.46f, 305.85f);
            bezier21Path.cubicTo(155.48f, 306.56f, 155.51f, 306.97f, 155.53f, 307.08f);
            bezier21Path.cubicTo(155.56f, 307.2f, 155.6f, 307.29f, 155.65f, 307.34f);
            bezier21Path.cubicTo(155.71f, 307.39f, 155.77f, 307.42f, 155.85f, 307.43f);
            bezier21Path.cubicTo(155.92f, 307.45f, 156.24f, 307.47f, 156.79f, 307.51f);
            bezier21Path.lineTo(156.87f, 307.58f);
            bezier21Path.lineTo(156.87f, 307.95f);
            bezier21Path.lineTo(156.8f, 308.02f);
            bezier21Path.cubicTo(156.07f, 307.98f, 155.36f, 307.95f, 154.68f, 307.95f);
            bezier21Path.cubicTo(154.01f, 307.95f, 153.31f, 307.98f, 152.57f, 308.02f);
            bezier21Path.lineTo(152.5f, 307.95f);
            bezier21Path.lineTo(152.5f, 307.58f);
            bezier21Path.lineTo(152.57f, 307.51f);
            bezier21Path.cubicTo(153.14f, 307.47f, 153.46f, 307.45f, 153.54f, 307.43f);
            bezier21Path.cubicTo(153.61f, 307.41f, 153.67f, 307.37f, 153.73f, 307.32f);
            bezier21Path.cubicTo(153.79f, 307.26f, 153.82f, 307.18f, 153.84f, 307.06f);
            bezier21Path.cubicTo(153.86f, 306.95f, 153.89f, 306.57f, 153.91f, 305.93f);
            bezier21Path.cubicTo(153.94f, 305.29f, 153.95f, 304.8f, 153.95f, 304.47f);
            bezier21Path.lineTo(153.95f, 302.74f);
            bezier21Path.cubicTo(153.95f, 302.51f, 153.94f, 302.19f, 153.92f, 301.78f);
            bezier21Path.cubicTo(153.9f, 301.38f, 153.88f, 301.13f, 153.86f, 301.04f);
            bezier21Path.cubicTo(153.85f, 300.94f, 153.8f, 300.88f, 153.73f, 300.83f);
            bezier21Path.cubicTo(153.65f, 300.79f, 153.5f, 300.77f, 153.27f, 300.77f);
            bezier21Path.lineTo(152.53f, 300.76f);
            bezier21Path.lineTo(152.45f, 300.69f);
            bezier21Path.lineTo(152.45f, 300.31f);
            bezier21Path.lineTo(152.52f, 300.24f);
            bezier21Path.cubicTo(153.64f, 300.1f, 154.58f, 299.88f, 155.35f, 299.58f);
            bezier21Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier21Path, paint);
            
            // Bezier 22
            RectF bezier22Rect = CacheForLogo.bezier22Rect;
            bezier22Rect.set(174.68f, 295.53f, 186.24f, 308.02f);
            Path bezier22Path = CacheForLogo.bezier22Path;
            bezier22Path.reset();
            bezier22Path.moveTo(174.68f, 295.6f);
            bezier22Path.lineTo(174.75f, 295.54f);
            bezier22Path.cubicTo(175.82f, 295.58f, 176.65f, 295.61f, 177.25f, 295.61f);
            bezier22Path.cubicTo(177.91f, 295.61f, 178.81f, 295.59f, 179.93f, 295.55f);
            bezier22Path.cubicTo(180.35f, 295.53f, 180.65f, 295.53f, 180.84f, 295.53f);
            bezier22Path.cubicTo(182.32f, 295.53f, 183.33f, 295.8f, 183.85f, 296.34f);
            bezier22Path.cubicTo(184.38f, 296.88f, 184.64f, 297.51f, 184.64f, 298.25f);
            bezier22Path.cubicTo(184.64f, 298.74f, 184.51f, 299.23f, 184.26f, 299.7f);
            bezier22Path.cubicTo(184f, 300.18f, 183.62f, 300.58f, 183.11f, 300.92f);
            bezier22Path.cubicTo(182.61f, 301.26f, 181.92f, 301.51f, 181.03f, 301.68f);
            bezier22Path.cubicTo(181.2f, 301.91f, 181.49f, 302.3f, 181.92f, 302.87f);
            bezier22Path.lineTo(183.17f, 304.52f);
            bezier22Path.cubicTo(183.57f, 305.06f, 184f, 305.64f, 184.47f, 306.25f);
            bezier22Path.cubicTo(184.93f, 306.85f, 185.23f, 307.2f, 185.36f, 307.27f);
            bezier22Path.cubicTo(185.5f, 307.35f, 185.62f, 307.4f, 185.71f, 307.42f);
            bezier22Path.cubicTo(185.81f, 307.44f, 185.96f, 307.45f, 186.17f, 307.45f);
            bezier22Path.lineTo(186.24f, 307.52f);
            bezier22Path.lineTo(186.24f, 307.93f);
            bezier22Path.lineTo(186.16f, 308.01f);
            bezier22Path.cubicTo(185.88f, 307.97f, 185.55f, 307.95f, 185.16f, 307.95f);
            bezier22Path.cubicTo(184.75f, 307.95f, 184.29f, 307.97f, 183.8f, 308.01f);
            bezier22Path.cubicTo(183.4f, 307.52f, 182.76f, 306.66f, 181.89f, 305.45f);
            bezier22Path.cubicTo(180.88f, 304.04f, 179.85f, 302.74f, 178.8f, 301.54f);
            bezier22Path.lineTo(178.89f, 301.27f);
            bezier22Path.cubicTo(179.19f, 301.28f, 179.43f, 301.29f, 179.6f, 301.29f);
            bezier22Path.cubicTo(180.61f, 301.29f, 181.41f, 301.05f, 181.98f, 300.56f);
            bezier22Path.cubicTo(182.55f, 300.08f, 182.84f, 299.4f, 182.84f, 298.54f);
            bezier22Path.cubicTo(182.84f, 297.77f, 182.58f, 297.18f, 182.07f, 296.79f);
            bezier22Path.cubicTo(181.55f, 296.39f, 180.86f, 296.2f, 179.98f, 296.2f);
            bezier22Path.cubicTo(179.36f, 296.2f, 178.78f, 296.28f, 178.24f, 296.45f);
            bezier22Path.cubicTo(178.15f, 296.58f, 178.1f, 297.68f, 178.1f, 299.75f);
            bezier22Path.lineTo(178.1f, 303.82f);
            bezier22Path.lineTo(178.11f, 305.53f);
            bezier22Path.cubicTo(178.12f, 306.19f, 178.14f, 306.62f, 178.17f, 306.81f);
            bezier22Path.cubicTo(178.2f, 307.01f, 178.24f, 307.14f, 178.29f, 307.2f);
            bezier22Path.cubicTo(178.35f, 307.26f, 178.46f, 307.32f, 178.61f, 307.36f);
            bezier22Path.cubicTo(178.77f, 307.41f, 179.16f, 307.44f, 179.78f, 307.46f);
            bezier22Path.lineTo(179.85f, 307.52f);
            bezier22Path.lineTo(179.85f, 307.95f);
            bezier22Path.lineTo(179.78f, 308.02f);
            bezier22Path.cubicTo(179.75f, 308.02f, 179.24f, 308.01f, 178.24f, 307.97f);
            bezier22Path.cubicTo(177.82f, 307.96f, 177.5f, 307.95f, 177.26f, 307.95f);
            bezier22Path.cubicTo(177.08f, 307.95f, 176.24f, 307.98f, 174.75f, 308.02f);
            bezier22Path.lineTo(174.68f, 307.95f);
            bezier22Path.lineTo(174.68f, 307.52f);
            bezier22Path.lineTo(174.75f, 307.46f);
            bezier22Path.cubicTo(175.29f, 307.44f, 175.66f, 307.41f, 175.84f, 307.38f);
            bezier22Path.cubicTo(176.02f, 307.34f, 176.14f, 307.3f, 176.2f, 307.24f);
            bezier22Path.cubicTo(176.26f, 307.18f, 176.31f, 307.06f, 176.35f, 306.88f);
            bezier22Path.cubicTo(176.39f, 306.7f, 176.41f, 306.3f, 176.42f, 305.67f);
            bezier22Path.lineTo(176.42f, 303.82f);
            bezier22Path.lineTo(176.42f, 299.75f);
            bezier22Path.lineTo(176.41f, 298.03f);
            bezier22Path.cubicTo(176.4f, 297.36f, 176.39f, 296.93f, 176.36f, 296.74f);
            bezier22Path.cubicTo(176.33f, 296.55f, 176.29f, 296.42f, 176.24f, 296.35f);
            bezier22Path.cubicTo(176.18f, 296.29f, 176.07f, 296.24f, 175.92f, 296.2f);
            bezier22Path.cubicTo(175.76f, 296.15f, 175.37f, 296.12f, 174.75f, 296.1f);
            bezier22Path.lineTo(174.68f, 296.04f);
            bezier22Path.lineTo(174.68f, 295.6f);
            bezier22Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier22Path, paint);
            
            // Bezier 23
            RectF bezier23Rect = CacheForLogo.bezier23Rect;
            bezier23Rect.set(187.68f, 299.52f, 195.26f, 308.24f);
            Path bezier23Path = CacheForLogo.bezier23Path;
            bezier23Path.reset();
            bezier23Path.moveTo(189.37f, 303.07f);
            bezier23Path.cubicTo(189.47f, 303.09f, 189.88f, 303.11f, 190.58f, 303.13f);
            bezier23Path.cubicTo(191.29f, 303.15f, 191.81f, 303.17f, 192.15f, 303.17f);
            bezier23Path.cubicTo(192.97f, 303.17f, 193.46f, 303.15f, 193.64f, 303.12f);
            bezier23Path.cubicTo(193.64f, 302.98f, 193.65f, 302.87f, 193.65f, 302.8f);
            bezier23Path.cubicTo(193.65f, 301.89f, 193.46f, 301.21f, 193.09f, 300.77f);
            bezier23Path.cubicTo(192.72f, 300.33f, 192.22f, 300.11f, 191.58f, 300.11f);
            bezier23Path.cubicTo(190.88f, 300.11f, 190.34f, 300.36f, 189.95f, 300.85f);
            bezier23Path.cubicTo(189.56f, 301.35f, 189.37f, 302.09f, 189.37f, 303.07f);
            bezier23Path.close();
            bezier23Path.moveTo(195f, 306.66f);
            bezier23Path.lineTo(194.72f, 307.3f);
            bezier23Path.cubicTo(194.11f, 307.69f, 193.57f, 307.94f, 193.09f, 308.06f);
            bezier23Path.cubicTo(192.61f, 308.18f, 192.19f, 308.24f, 191.81f, 308.24f);
            bezier23Path.cubicTo(191.11f, 308.24f, 190.44f, 308.1f, 189.81f, 307.82f);
            bezier23Path.cubicTo(189.18f, 307.55f, 188.67f, 307.08f, 188.27f, 306.43f);
            bezier23Path.cubicTo(187.88f, 305.77f, 187.68f, 304.98f, 187.68f, 304.05f);
            bezier23Path.cubicTo(187.68f, 303.44f, 187.76f, 302.88f, 187.91f, 302.39f);
            bezier23Path.cubicTo(188.06f, 301.89f, 188.22f, 301.52f, 188.39f, 301.28f);
            bezier23Path.cubicTo(188.55f, 301.04f, 188.84f, 300.78f, 189.23f, 300.48f);
            bezier23Path.cubicTo(189.63f, 300.19f, 190.06f, 299.96f, 190.5f, 299.78f);
            bezier23Path.cubicTo(190.95f, 299.61f, 191.43f, 299.52f, 191.94f, 299.52f);
            bezier23Path.cubicTo(192.65f, 299.52f, 193.27f, 299.68f, 193.8f, 300.01f);
            bezier23Path.cubicTo(194.34f, 300.35f, 194.71f, 300.77f, 194.93f, 301.28f);
            bezier23Path.cubicTo(195.15f, 301.8f, 195.26f, 302.35f, 195.26f, 302.93f);
            bezier23Path.cubicTo(195.26f, 303.11f, 195.25f, 303.28f, 195.23f, 303.45f);
            bezier23Path.lineTo(195.13f, 303.55f);
            bezier23Path.cubicTo(194.73f, 303.64f, 194.2f, 303.7f, 193.52f, 303.73f);
            bezier23Path.cubicTo(192.85f, 303.76f, 192.41f, 303.77f, 192.19f, 303.77f);
            bezier23Path.lineTo(189.37f, 303.77f);
            bezier23Path.cubicTo(189.38f, 304.98f, 189.68f, 305.88f, 190.28f, 306.45f);
            bezier23Path.cubicTo(190.88f, 307.03f, 191.61f, 307.31f, 192.48f, 307.31f);
            bezier23Path.cubicTo(192.89f, 307.31f, 193.28f, 307.24f, 193.66f, 307.1f);
            bezier23Path.cubicTo(194.04f, 306.96f, 194.44f, 306.77f, 194.86f, 306.51f);
            bezier23Path.lineTo(195f, 306.66f);
            bezier23Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier23Path, paint);
            
            // Bezier 24
            RectF bezier24Rect = CacheForLogo.bezier24Rect;
            bezier24Rect.set(197.38f, 299.51f, 206.52f, 313f);
            Path bezier24Path = CacheForLogo.bezier24Path;
            bezier24Path.reset();
            bezier24Path.moveTo(199.3f, 302.22f);
            bezier24Path.cubicTo(199.3f, 302.58f, 199.37f, 302.97f, 199.51f, 303.38f);
            bezier24Path.cubicTo(199.65f, 303.79f, 199.88f, 304.1f, 200.19f, 304.31f);
            bezier24Path.cubicTo(200.51f, 304.52f, 200.86f, 304.62f, 201.25f, 304.62f);
            bezier24Path.cubicTo(201.77f, 304.62f, 202.22f, 304.45f, 202.6f, 304.11f);
            bezier24Path.cubicTo(202.98f, 303.77f, 203.17f, 303.24f, 203.17f, 302.52f);
            bezier24Path.cubicTo(203.17f, 301.91f, 203f, 301.37f, 202.65f, 300.88f);
            bezier24Path.cubicTo(202.3f, 300.39f, 201.82f, 300.15f, 201.18f, 300.15f);
            bezier24Path.cubicTo(200.65f, 300.15f, 200.2f, 300.33f, 199.84f, 300.67f);
            bezier24Path.cubicTo(199.48f, 301.02f, 199.3f, 301.54f, 199.3f, 302.22f);
            bezier24Path.close();
            bezier24Path.moveTo(201.88f, 308.12f);
            bezier24Path.cubicTo(200.93f, 308.12f, 200.39f, 308.13f, 200.25f, 308.16f);
            bezier24Path.cubicTo(200.1f, 308.18f, 199.9f, 308.28f, 199.64f, 308.46f);
            bezier24Path.cubicTo(199.37f, 308.63f, 199.16f, 308.87f, 198.99f, 309.17f);
            bezier24Path.cubicTo(198.82f, 309.47f, 198.74f, 309.81f, 198.74f, 310.19f);
            bezier24Path.cubicTo(198.74f, 310.85f, 198.98f, 311.39f, 199.48f, 311.81f);
            bezier24Path.cubicTo(199.97f, 312.22f, 200.63f, 312.43f, 201.45f, 312.43f);
            bezier24Path.cubicTo(202.06f, 312.43f, 202.63f, 312.3f, 203.15f, 312.04f);
            bezier24Path.cubicTo(203.67f, 311.78f, 204.06f, 311.44f, 204.31f, 311.01f);
            bezier24Path.cubicTo(204.56f, 310.57f, 204.68f, 310.15f, 204.68f, 309.76f);
            bezier24Path.cubicTo(204.68f, 309.36f, 204.58f, 309.02f, 204.37f, 308.73f);
            bezier24Path.cubicTo(204.16f, 308.45f, 203.89f, 308.27f, 203.56f, 308.21f);
            bezier24Path.cubicTo(203.23f, 308.15f, 202.67f, 308.12f, 201.88f, 308.12f);
            bezier24Path.close();
            bezier24Path.moveTo(206.45f, 300.19f);
            bezier24Path.lineTo(206.52f, 300.34f);
            bezier24Path.cubicTo(206.28f, 300.71f, 206.13f, 300.95f, 206.07f, 301.06f);
            bezier24Path.lineTo(204.43f, 301.06f);
            bezier24Path.cubicTo(204.6f, 301.39f, 204.68f, 301.72f, 204.68f, 302.08f);
            bezier24Path.cubicTo(204.68f, 302.49f, 204.58f, 302.9f, 204.39f, 303.29f);
            bezier24Path.cubicTo(204.2f, 303.68f, 203.94f, 304.01f, 203.6f, 304.29f);
            bezier24Path.cubicTo(203.26f, 304.57f, 202.88f, 304.78f, 202.44f, 304.95f);
            bezier24Path.cubicTo(202.01f, 305.11f, 201.52f, 305.2f, 200.97f, 305.2f);
            bezier24Path.lineTo(200.57f, 305.2f);
            bezier24Path.cubicTo(200.22f, 305.47f, 200f, 305.68f, 199.9f, 305.81f);
            bezier24Path.cubicTo(199.8f, 305.95f, 199.75f, 306.08f, 199.75f, 306.22f);
            bezier24Path.cubicTo(199.75f, 306.48f, 199.87f, 306.66f, 200.11f, 306.77f);
            bezier24Path.cubicTo(200.34f, 306.87f, 200.83f, 306.93f, 201.58f, 306.93f);
            bezier24Path.lineTo(203.55f, 306.9f);
            bezier24Path.cubicTo(204.17f, 306.9f, 204.64f, 306.97f, 204.97f, 307.12f);
            bezier24Path.cubicTo(205.31f, 307.27f, 205.57f, 307.53f, 205.78f, 307.91f);
            bezier24Path.cubicTo(205.98f, 308.28f, 206.09f, 308.69f, 206.09f, 309.11f);
            bezier24Path.cubicTo(206.09f, 309.75f, 205.88f, 310.39f, 205.46f, 311.03f);
            bezier24Path.cubicTo(205.04f, 311.68f, 204.43f, 312.17f, 203.64f, 312.5f);
            bezier24Path.cubicTo(202.85f, 312.83f, 202.01f, 313f, 201.11f, 313f);
            bezier24Path.cubicTo(200.6f, 313f, 200.12f, 312.94f, 199.67f, 312.83f);
            bezier24Path.cubicTo(199.23f, 312.72f, 198.83f, 312.55f, 198.5f, 312.33f);
            bezier24Path.cubicTo(198.16f, 312.1f, 197.89f, 311.81f, 197.68f, 311.44f);
            bezier24Path.cubicTo(197.48f, 311.08f, 197.38f, 310.7f, 197.38f, 310.31f);
            bezier24Path.cubicTo(197.38f, 310.09f, 197.41f, 309.87f, 197.47f, 309.63f);
            bezier24Path.cubicTo(197.54f, 309.39f, 197.66f, 309.14f, 197.84f, 308.86f);
            bezier24Path.lineTo(199.43f, 307.97f);
            bezier24Path.cubicTo(198.92f, 307.81f, 198.6f, 307.66f, 198.47f, 307.5f);
            bezier24Path.cubicTo(198.34f, 307.35f, 198.27f, 307.16f, 198.27f, 306.94f);
            bezier24Path.cubicTo(198.27f, 306.72f, 198.35f, 306.46f, 198.49f, 306.15f);
            bezier24Path.lineTo(199.91f, 305.13f);
            bezier24Path.cubicTo(199.08f, 304.92f, 198.52f, 304.59f, 198.22f, 304.16f);
            bezier24Path.cubicTo(197.94f, 303.72f, 197.79f, 303.25f, 197.79f, 302.73f);
            bezier24Path.cubicTo(197.79f, 302.26f, 197.89f, 301.81f, 198.1f, 301.38f);
            bezier24Path.cubicTo(198.3f, 300.95f, 198.61f, 300.6f, 199.03f, 300.34f);
            bezier24Path.cubicTo(199.44f, 300.09f, 199.9f, 299.88f, 200.41f, 299.73f);
            bezier24Path.cubicTo(200.92f, 299.58f, 201.39f, 299.51f, 201.82f, 299.51f);
            bezier24Path.cubicTo(202.55f, 299.51f, 203.25f, 299.75f, 203.91f, 300.22f);
            bezier24Path.cubicTo(204.97f, 300.22f, 205.81f, 300.21f, 206.45f, 300.19f);
            bezier24Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier24Path, paint);
            
            // Bezier 25
            RectF bezier25Rect = CacheForLogo.bezier25Rect;
            bezier25Rect.set(208.04f, 295.65f, 212.46f, 308.02f);
            Path bezier25Path = CacheForLogo.bezier25Path;
            bezier25Path.reset();
            bezier25Path.moveTo(210.2f, 295.65f);
            bezier25Path.cubicTo(210.47f, 295.65f, 210.7f, 295.75f, 210.9f, 295.94f);
            bezier25Path.cubicTo(211.09f, 296.13f, 211.19f, 296.37f, 211.19f, 296.64f);
            bezier25Path.cubicTo(211.19f, 296.91f, 211.09f, 297.14f, 210.9f, 297.34f);
            bezier25Path.cubicTo(210.7f, 297.53f, 210.47f, 297.63f, 210.2f, 297.63f);
            bezier25Path.cubicTo(209.92f, 297.63f, 209.69f, 297.53f, 209.5f, 297.34f);
            bezier25Path.cubicTo(209.3f, 297.15f, 209.2f, 296.92f, 209.2f, 296.64f);
            bezier25Path.cubicTo(209.2f, 296.37f, 209.3f, 296.13f, 209.5f, 295.94f);
            bezier25Path.cubicTo(209.69f, 295.75f, 209.92f, 295.65f, 210.2f, 295.65f);
            bezier25Path.close();
            bezier25Path.moveTo(210.94f, 299.58f);
            bezier25Path.lineTo(211.11f, 299.69f);
            bezier25Path.cubicTo(211.04f, 300.46f, 211.01f, 301.44f, 211.01f, 302.62f);
            bezier25Path.lineTo(211.01f, 304.61f);
            bezier25Path.cubicTo(211.01f, 304.74f, 211.02f, 305.15f, 211.05f, 305.85f);
            bezier25Path.cubicTo(211.07f, 306.55f, 211.1f, 306.96f, 211.12f, 307.08f);
            bezier25Path.cubicTo(211.15f, 307.19f, 211.19f, 307.28f, 211.24f, 307.33f);
            bezier25Path.cubicTo(211.29f, 307.38f, 211.36f, 307.42f, 211.43f, 307.43f);
            bezier25Path.cubicTo(211.51f, 307.45f, 211.83f, 307.47f, 212.38f, 307.51f);
            bezier25Path.lineTo(212.46f, 307.58f);
            bezier25Path.lineTo(212.46f, 307.95f);
            bezier25Path.lineTo(212.39f, 308.02f);
            bezier25Path.cubicTo(211.66f, 307.98f, 210.95f, 307.95f, 210.27f, 307.95f);
            bezier25Path.cubicTo(209.6f, 307.95f, 208.9f, 307.98f, 208.17f, 308.02f);
            bezier25Path.lineTo(208.09f, 307.95f);
            bezier25Path.lineTo(208.09f, 307.58f);
            bezier25Path.lineTo(208.17f, 307.51f);
            bezier25Path.cubicTo(208.73f, 307.47f, 209.05f, 307.45f, 209.13f, 307.43f);
            bezier25Path.cubicTo(209.2f, 307.41f, 209.26f, 307.37f, 209.32f, 307.32f);
            bezier25Path.cubicTo(209.38f, 307.26f, 209.41f, 307.18f, 209.44f, 307.06f);
            bezier25Path.cubicTo(209.45f, 306.95f, 209.48f, 306.57f, 209.51f, 305.93f);
            bezier25Path.cubicTo(209.53f, 305.29f, 209.54f, 304.8f, 209.54f, 304.47f);
            bezier25Path.lineTo(209.54f, 302.74f);
            bezier25Path.cubicTo(209.54f, 302.51f, 209.53f, 302.19f, 209.51f, 301.78f);
            bezier25Path.cubicTo(209.49f, 301.38f, 209.47f, 301.13f, 209.45f, 301.04f);
            bezier25Path.cubicTo(209.44f, 300.94f, 209.39f, 300.88f, 209.32f, 300.83f);
            bezier25Path.cubicTo(209.24f, 300.79f, 209.09f, 300.77f, 208.86f, 300.77f);
            bezier25Path.lineTo(208.12f, 300.76f);
            bezier25Path.lineTo(208.04f, 300.69f);
            bezier25Path.lineTo(208.04f, 300.31f);
            bezier25Path.lineTo(208.11f, 300.24f);
            bezier25Path.cubicTo(209.23f, 300.1f, 210.17f, 299.88f, 210.94f, 299.58f);
            bezier25Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier25Path, paint);
            
            // Bezier 26
            RectF bezier26Rect = CacheForLogo.bezier26Rect;
            bezier26Rect.set(214.4f, 299.53f, 223.03f, 308.3f);
            Path bezier26Path = CacheForLogo.bezier26Path;
            bezier26Path.reset();
            bezier26Path.moveTo(216.06f, 303.32f);
            bezier26Path.cubicTo(216.06f, 304.14f, 216.17f, 304.88f, 216.38f, 305.52f);
            bezier26Path.cubicTo(216.59f, 306.17f, 216.92f, 306.69f, 217.38f, 307.08f);
            bezier26Path.cubicTo(217.84f, 307.48f, 218.36f, 307.67f, 218.94f, 307.67f);
            bezier26Path.cubicTo(219.63f, 307.67f, 220.21f, 307.4f, 220.66f, 306.85f);
            bezier26Path.cubicTo(221.11f, 306.31f, 221.33f, 305.48f, 221.33f, 304.38f);
            bezier26Path.cubicTo(221.33f, 303.13f, 221.09f, 302.11f, 220.6f, 301.31f);
            bezier26Path.cubicTo(220.11f, 300.51f, 219.41f, 300.12f, 218.49f, 300.12f);
            bezier26Path.cubicTo(217.72f, 300.12f, 217.13f, 300.39f, 216.7f, 300.94f);
            bezier26Path.cubicTo(216.27f, 301.49f, 216.06f, 302.29f, 216.06f, 303.32f);
            bezier26Path.close();
            bezier26Path.moveTo(214.4f, 303.93f);
            bezier26Path.cubicTo(214.4f, 303.23f, 214.54f, 302.56f, 214.83f, 301.91f);
            bezier26Path.cubicTo(215.12f, 301.27f, 215.62f, 300.71f, 216.33f, 300.23f);
            bezier26Path.cubicTo(217.04f, 299.76f, 217.89f, 299.53f, 218.86f, 299.53f);
            bezier26Path.cubicTo(220.09f, 299.53f, 221.1f, 299.92f, 221.87f, 300.69f);
            bezier26Path.cubicTo(222.64f, 301.47f, 223.03f, 302.46f, 223.03f, 303.68f);
            bezier26Path.cubicTo(223.03f, 305.02f, 222.59f, 306.13f, 221.7f, 307f);
            bezier26Path.cubicTo(220.81f, 307.86f, 219.74f, 308.3f, 218.49f, 308.3f);
            bezier26Path.cubicTo(217.67f, 308.3f, 216.93f, 308.08f, 216.29f, 307.64f);
            bezier26Path.cubicTo(215.64f, 307.19f, 215.17f, 306.65f, 214.86f, 306.01f);
            bezier26Path.cubicTo(214.55f, 305.37f, 214.4f, 304.68f, 214.4f, 303.93f);
            bezier26Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier26Path, paint);
            
            // Bezier 27
            RectF bezier27Rect = CacheForLogo.bezier27Rect;
            bezier27Rect.set(224.63f, 299.56f, 234.83f, 308.02f);
            Path bezier27Path = CacheForLogo.bezier27Path;
            bezier27Path.reset();
            bezier27Path.moveTo(227.53f, 299.58f);
            bezier27Path.lineTo(227.7f, 299.69f);
            bezier27Path.cubicTo(227.67f, 300.09f, 227.64f, 300.6f, 227.63f, 301.24f);
            bezier27Path.cubicTo(228.1f, 300.85f, 228.54f, 300.46f, 228.97f, 300.06f);
            bezier27Path.cubicTo(229.09f, 299.95f, 229.2f, 299.87f, 229.31f, 299.82f);
            bezier27Path.cubicTo(229.42f, 299.76f, 229.6f, 299.71f, 229.85f, 299.65f);
            bezier27Path.cubicTo(230.11f, 299.59f, 230.36f, 299.56f, 230.63f, 299.56f);
            bezier27Path.cubicTo(231.07f, 299.56f, 231.5f, 299.65f, 231.92f, 299.83f);
            bezier27Path.cubicTo(232.34f, 300.02f, 232.66f, 300.23f, 232.87f, 300.48f);
            bezier27Path.cubicTo(233.09f, 300.73f, 233.23f, 301.02f, 233.32f, 301.36f);
            bezier27Path.cubicTo(233.4f, 301.7f, 233.44f, 302.12f, 233.44f, 302.62f);
            bezier27Path.lineTo(233.44f, 304.17f);
            bezier27Path.cubicTo(233.44f, 304.27f, 233.45f, 305f, 233.48f, 306.36f);
            bezier27Path.cubicTo(233.5f, 306.91f, 233.56f, 307.24f, 233.67f, 307.35f);
            bezier27Path.cubicTo(233.78f, 307.45f, 234.14f, 307.51f, 234.76f, 307.51f);
            bezier27Path.lineTo(234.83f, 307.58f);
            bezier27Path.lineTo(234.83f, 307.95f);
            bezier27Path.lineTo(234.76f, 308.02f);
            bezier27Path.cubicTo(234.01f, 307.98f, 233.51f, 307.95f, 233.25f, 307.95f);
            bezier27Path.cubicTo(233.09f, 307.95f, 232.67f, 307.98f, 231.96f, 308.02f);
            bezier27Path.lineTo(231.86f, 307.93f);
            bezier27Path.cubicTo(231.93f, 307.17f, 231.97f, 306.17f, 231.97f, 304.95f);
            bezier27Path.lineTo(231.97f, 303.8f);
            bezier27Path.cubicTo(231.97f, 303.11f, 231.96f, 302.61f, 231.92f, 302.3f);
            bezier27Path.cubicTo(231.89f, 302f, 231.79f, 301.72f, 231.63f, 301.47f);
            bezier27Path.cubicTo(231.47f, 301.22f, 231.25f, 301.03f, 230.97f, 300.89f);
            bezier27Path.cubicTo(230.7f, 300.76f, 230.37f, 300.69f, 229.99f, 300.69f);
            bezier27Path.cubicTo(229.68f, 300.69f, 229.42f, 300.72f, 229.2f, 300.78f);
            bezier27Path.cubicTo(228.99f, 300.84f, 228.74f, 300.97f, 228.47f, 301.16f);
            bezier27Path.cubicTo(228.2f, 301.35f, 228.01f, 301.52f, 227.88f, 301.69f);
            bezier27Path.cubicTo(227.75f, 301.86f, 227.67f, 302.02f, 227.64f, 302.16f);
            bezier27Path.cubicTo(227.62f, 302.3f, 227.6f, 302.61f, 227.6f, 303.08f);
            bezier27Path.lineTo(227.6f, 304.61f);
            bezier27Path.cubicTo(227.6f, 304.74f, 227.62f, 305.15f, 227.64f, 305.85f);
            bezier27Path.cubicTo(227.66f, 306.55f, 227.69f, 306.96f, 227.71f, 307.08f);
            bezier27Path.cubicTo(227.74f, 307.19f, 227.78f, 307.28f, 227.83f, 307.33f);
            bezier27Path.cubicTo(227.89f, 307.38f, 227.95f, 307.42f, 228.03f, 307.43f);
            bezier27Path.cubicTo(228.1f, 307.45f, 228.42f, 307.47f, 228.98f, 307.51f);
            bezier27Path.lineTo(229.05f, 307.58f);
            bezier27Path.lineTo(229.05f, 307.95f);
            bezier27Path.lineTo(228.98f, 308.02f);
            bezier27Path.cubicTo(228.25f, 307.98f, 227.55f, 307.95f, 226.87f, 307.95f);
            bezier27Path.cubicTo(226.19f, 307.95f, 225.49f, 307.98f, 224.76f, 308.02f);
            bezier27Path.lineTo(224.68f, 307.95f);
            bezier27Path.lineTo(224.68f, 307.58f);
            bezier27Path.lineTo(224.76f, 307.51f);
            bezier27Path.cubicTo(225.33f, 307.47f, 225.64f, 307.45f, 225.72f, 307.43f);
            bezier27Path.cubicTo(225.79f, 307.41f, 225.86f, 307.37f, 225.91f, 307.32f);
            bezier27Path.cubicTo(225.97f, 307.26f, 226.01f, 307.18f, 226.03f, 307.06f);
            bezier27Path.cubicTo(226.05f, 306.95f, 226.07f, 306.57f, 226.1f, 305.93f);
            bezier27Path.cubicTo(226.12f, 305.29f, 226.14f, 304.8f, 226.14f, 304.47f);
            bezier27Path.lineTo(226.14f, 302.74f);
            bezier27Path.cubicTo(226.14f, 302.51f, 226.13f, 302.19f, 226.1f, 301.78f);
            bezier27Path.cubicTo(226.08f, 301.38f, 226.06f, 301.13f, 226.04f, 301.04f);
            bezier27Path.cubicTo(226.03f, 300.94f, 225.98f, 300.88f, 225.91f, 300.83f);
            bezier27Path.cubicTo(225.83f, 300.79f, 225.68f, 300.77f, 225.45f, 300.77f);
            bezier27Path.lineTo(224.71f, 300.76f);
            bezier27Path.lineTo(224.63f, 300.69f);
            bezier27Path.lineTo(224.63f, 300.31f);
            bezier27Path.lineTo(224.7f, 300.24f);
            bezier27Path.cubicTo(225.82f, 300.1f, 226.77f, 299.88f, 227.53f, 299.58f);
            bezier27Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.primaryBlue);
            canvas.drawPath(bezier27Path, paint);
            
            // Oval
            RectF ovalRect = CacheForLogo.ovalRect;
            ovalRect.set(111.55f, 7.2f, 197.55f, 93.2f);
            Path ovalPath = CacheForLogo.ovalPath;
            ovalPath.reset();
            ovalPath.addOval(ovalRect, Path.Direction.CW);
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setShader(CacheForLogo.ovalPathGradient.get(gradient2, 126.35f, 21.98f, 177.41f, 73.04f));
            canvas.drawPath(ovalPath, paint);
            
            // Bezier 28
            RectF bezier28Rect = CacheForLogo.bezier28Rect;
            bezier28Rect.set(132.75f, 16.85f, 132.94f, 16.99f);
            Path bezier28Path = CacheForLogo.bezier28Path;
            bezier28Path.reset();
            bezier28Path.moveTo(132.94f, 16.85f);
            bezier28Path.cubicTo(132.95f, 16.88f, 132.83f, 16.94f, 132.75f, 16.99f);
            bezier28Path.cubicTo(132.86f, 16.96f, 132.94f, 16.91f, 132.94f, 16.85f);
            bezier28Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier28Path, paint);
            
            // Bezier 29
            RectF bezier29Rect = CacheForLogo.bezier29Rect;
            bezier29Rect.set(129.14f, 16.92f, 129.83f, 17f);
            Path bezier29Path = CacheForLogo.bezier29Path;
            bezier29Path.reset();
            bezier29Path.moveTo(129.15f, 16.98f);
            bezier29Path.cubicTo(129.06f, 17.04f, 129.65f, 16.95f, 129.83f, 16.92f);
            bezier29Path.cubicTo(129.49f, 16.91f, 129.23f, 16.92f, 129.15f, 16.98f);
            bezier29Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier29Path, paint);
            
            // Bezier 30
            RectF bezier30Rect = CacheForLogo.bezier30Rect;
            bezier30Rect.set(138.86f, 16.26f, 139.23f, 16.4f);
            Path bezier30Path = CacheForLogo.bezier30Path;
            bezier30Path.reset();
            bezier30Path.moveTo(138.86f, 16.4f);
            bezier30Path.cubicTo(138.97f, 16.31f, 139.09f, 16.27f, 139.23f, 16.27f);
            bezier30Path.cubicTo(139.12f, 16.25f, 138.99f, 16.29f, 138.86f, 16.4f);
            bezier30Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier30Path, paint);
            
            // Bezier 31
            RectF bezier31Rect = CacheForLogo.bezier31Rect;
            bezier31Rect.set(129.83f, 16.91f, 129.88f, 16.92f);
            Path bezier31Path = CacheForLogo.bezier31Path;
            bezier31Path.reset();
            bezier31Path.moveTo(129.83f, 16.92f);
            bezier31Path.cubicTo(129.84f, 16.92f, 129.86f, 16.92f, 129.87f, 16.92f);
            bezier31Path.cubicTo(129.88f, 16.92f, 129.88f, 16.92f, 129.88f, 16.91f);
            bezier31Path.cubicTo(129.89f, 16.91f, 129.86f, 16.92f, 129.83f, 16.92f);
            bezier31Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier31Path, paint);
            
            // Bezier 32
            RectF bezier32Rect = CacheForLogo.bezier32Rect;
            bezier32Rect.set(137.76f, 15.3f, 137.8f, 15.31f);
            Path bezier32Path = CacheForLogo.bezier32Path;
            bezier32Path.reset();
            bezier32Path.moveTo(137.76f, 15.31f);
            bezier32Path.cubicTo(137.77f, 15.31f, 137.78f, 15.31f, 137.79f, 15.31f);
            bezier32Path.cubicTo(137.81f, 15.3f, 137.8f, 15.3f, 137.76f, 15.31f);
            bezier32Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier32Path, paint);
            
            // Bezier 33
            RectF bezier33Rect = CacheForLogo.bezier33Rect;
            bezier33Rect.set(112.28f, 15.21f, 142.88f, 54.39f);
            Path bezier33Path = CacheForLogo.bezier33Path;
            bezier33Path.reset();
            bezier33Path.moveTo(127.4f, 25.58f);
            bezier33Path.cubicTo(127.97f, 24.92f, 128.92f, 25.08f, 129.54f, 24.77f);
            bezier33Path.cubicTo(128.98f, 24.78f, 128.47f, 24.59f, 127.97f, 24.6f);
            bezier33Path.cubicTo(128.11f, 24.5f, 128.23f, 24.46f, 128.37f, 24.29f);
            bezier33Path.cubicTo(127.61f, 24.42f, 127.16f, 24.7f, 126.45f, 24.72f);
            bezier33Path.cubicTo(126.85f, 24.47f, 128.83f, 23.46f, 129f, 23.92f);
            bezier33Path.cubicTo(129.7f, 23.4f, 129.28f, 24.69f, 129.79f, 24.83f);
            bezier33Path.cubicTo(131.27f, 25.24f, 130.28f, 25.63f, 130.19f, 25.4f);
            bezier33Path.cubicTo(129.97f, 25.61f, 129.36f, 26.29f, 129.15f, 26.3f);
            bezier33Path.cubicTo(129.08f, 26.18f, 129.15f, 26.08f, 129.25f, 25.85f);
            bezier33Path.cubicTo(129.07f, 25.9f, 129.06f, 25.95f, 128.88f, 25.95f);
            bezier33Path.cubicTo(130.03f, 24.73f, 128.52f, 25.01f, 127.97f, 25.63f);
            bezier33Path.cubicTo(127.79f, 25.83f, 126.66f, 27.47f, 126.45f, 26.99f);
            bezier33Path.cubicTo(126.28f, 26.6f, 127.61f, 25.56f, 127.88f, 25.39f);
            bezier33Path.cubicTo(127.73f, 25.39f, 127.6f, 25.5f, 127.4f, 25.58f);
            bezier33Path.close();
            bezier33Path.moveTo(132.22f, 25.9f);
            bezier33Path.cubicTo(131.92f, 26.36f, 130.3f, 26.22f, 130.28f, 26.38f);
            bezier33Path.cubicTo(130.22f, 26.03f, 131.96f, 25.9f, 132.22f, 25.9f);
            bezier33Path.close();
            bezier33Path.moveTo(128.43f, 27.17f);
            bezier33Path.cubicTo(128.28f, 27.17f, 128.37f, 26.94f, 128.48f, 26.79f);
            bezier33Path.cubicTo(128.46f, 26.95f, 129.67f, 26.86f, 129.88f, 26.78f);
            bezier33Path.cubicTo(129.41f, 26.95f, 128.74f, 27.18f, 128.43f, 27.17f);
            bezier33Path.close();
            bezier33Path.moveTo(141.36f, 17.03f);
            bezier33Path.cubicTo(141.32f, 17.04f, 141.29f, 17.04f, 141.25f, 17.03f);
            bezier33Path.cubicTo(141.28f, 17.02f, 141.32f, 17.03f, 141.36f, 17.03f);
            bezier33Path.close();
            bezier33Path.moveTo(116.77f, 36.03f);
            bezier33Path.cubicTo(117.4f, 34.92f, 118.19f, 34.41f, 119.28f, 33.83f);
            bezier33Path.cubicTo(120.02f, 33.43f, 120.52f, 34.53f, 121.05f, 34.29f);
            bezier33Path.cubicTo(120.98f, 34.11f, 121.22f, 33.93f, 121.41f, 33.63f);
            bezier33Path.cubicTo(121.29f, 33.68f, 121.32f, 33.68f, 121.21f, 33.61f);
            bezier33Path.cubicTo(121.53f, 33.51f, 121.81f, 33.57f, 122.1f, 33.51f);
            bezier33Path.cubicTo(122f, 33.68f, 123.84f, 33.98f, 123.85f, 34.01f);
            bezier33Path.cubicTo(123.93f, 34.28f, 122.68f, 37.47f, 123.34f, 37.56f);
            bezier33Path.cubicTo(124.08f, 37.66f, 124.67f, 35.44f, 124.72f, 34.95f);
            bezier33Path.cubicTo(124.93f, 32.97f, 126.41f, 32.28f, 128.06f, 31.56f);
            bezier33Path.cubicTo(128.04f, 31.55f, 128.04f, 31.53f, 128.03f, 31.52f);
            bezier33Path.cubicTo(128.44f, 31.25f, 128.94f, 31.18f, 129.33f, 30.88f);
            bezier33Path.cubicTo(129.03f, 30.54f, 129.48f, 30.64f, 129.66f, 30.41f);
            bezier33Path.cubicTo(129.58f, 30.39f, 129.51f, 30.37f, 129.51f, 30.23f);
            bezier33Path.cubicTo(129.74f, 30.18f, 129.89f, 30.04f, 129.97f, 29.84f);
            bezier33Path.cubicTo(129.93f, 29.84f, 129.88f, 29.84f, 129.85f, 29.83f);
            bezier33Path.cubicTo(129.8f, 29.69f, 130.3f, 28.85f, 130.42f, 28.72f);
            bezier33Path.cubicTo(130.4f, 28.79f, 130.2f, 29.61f, 130.17f, 29.61f);
            bezier33Path.cubicTo(130.75f, 29.62f, 130.85f, 28.66f, 131.14f, 28.49f);
            bezier33Path.cubicTo(131.05f, 28.26f, 132.67f, 27.67f, 133.04f, 27.57f);
            bezier33Path.cubicTo(132.95f, 27.46f, 132.58f, 27.55f, 132.45f, 27.55f);
            bezier33Path.cubicTo(133.1f, 27.27f, 133.99f, 27.31f, 134.59f, 27.09f);
            bezier33Path.cubicTo(133.62f, 27.11f, 135.38f, 25.65f, 135.96f, 25.77f);
            bezier33Path.cubicTo(136.52f, 25.89f, 137.67f, 25.1f, 138.37f, 25.08f);
            bezier33Path.cubicTo(138.23f, 25.26f, 138.28f, 25.33f, 138.52f, 25.29f);
            bezier33Path.cubicTo(137.6f, 25.34f, 136.87f, 26.51f, 137.57f, 26.15f);
            bezier33Path.cubicTo(137.99f, 25.93f, 139.86f, 25.63f, 140.04f, 25.28f);
            bezier33Path.cubicTo(140.13f, 25.07f, 137.96f, 25.21f, 138.93f, 24.02f);
            bezier33Path.cubicTo(138.84f, 24.02f, 138.67f, 23.98f, 138.51f, 23.98f);
            bezier33Path.cubicTo(138.79f, 23.8f, 139.3f, 23.88f, 139.49f, 23.55f);
            bezier33Path.cubicTo(139.7f, 23.17f, 136.99f, 23.79f, 136.85f, 23.8f);
            bezier33Path.cubicTo(137.97f, 22.91f, 143.38f, 23.09f, 142.84f, 21.27f);
            bezier33Path.cubicTo(142.68f, 21.32f, 140.92f, 21.78f, 140.88f, 21.57f);
            bezier33Path.cubicTo(141.29f, 21.45f, 142.29f, 21.36f, 142.5f, 21.15f);
            bezier33Path.cubicTo(142.63f, 21f, 141.1f, 21.13f, 141.4f, 20.62f);
            bezier33Path.lineTo(141.42f, 20.59f);
            bezier33Path.cubicTo(141.06f, 20.6f, 140.93f, 20.47f, 140.79f, 20.37f);
            bezier33Path.cubicTo(141.7f, 20.08f, 140.55f, 18.53f, 140.02f, 19.25f);
            bezier33Path.cubicTo(140.09f, 19.34f, 140.17f, 19.4f, 140.26f, 19.45f);
            bezier33Path.cubicTo(140.02f, 19.37f, 139.84f, 19.32f, 140.11f, 18.83f);
            bezier33Path.cubicTo(139.67f, 19.65f, 137.87f, 19.13f, 137.27f, 18.84f);
            bezier33Path.cubicTo(135.17f, 17.84f, 135.81f, 19.23f, 134.24f, 19.58f);
            bezier33Path.cubicTo(134.27f, 20.33f, 135.33f, 20.34f, 133.88f, 20.91f);
            bezier33Path.cubicTo(132.71f, 21.38f, 133.4f, 21.63f, 132.8f, 22.29f);
            bezier33Path.cubicTo(132.28f, 22.3f, 132.08f, 22.25f, 132.03f, 22.17f);
            bezier33Path.cubicTo(132.12f, 22.21f, 132.22f, 22.23f, 132.32f, 22.22f);
            bezier33Path.cubicTo(132.44f, 22.06f, 132.18f, 22.06f, 132.02f, 22.09f);
            bezier33Path.cubicTo(132.07f, 21.87f, 132.67f, 21.5f, 132.26f, 21.2f);
            bezier33Path.cubicTo(131.03f, 21.25f, 131.18f, 20.35f, 129.66f, 20.42f);
            bezier33Path.cubicTo(130.07f, 19.99f, 130.15f, 19.74f, 129.51f, 19.84f);
            bezier33Path.cubicTo(130.33f, 19.28f, 131.91f, 18.8f, 132.57f, 18.2f);
            bezier33Path.cubicTo(132.51f, 18.15f, 132.45f, 18.12f, 132.39f, 18.09f);
            bezier33Path.cubicTo(133.14f, 18.16f, 134.41f, 18.03f, 134.91f, 17.59f);
            bezier33Path.cubicTo(134.55f, 17.56f, 134.11f, 17.61f, 134.15f, 17.42f);
            bezier33Path.cubicTo(134.5f, 17.53f, 134.93f, 17.53f, 135.39f, 17.47f);
            bezier33Path.cubicTo(134.98f, 17.63f, 134.44f, 17.94f, 134.25f, 18.11f);
            bezier33Path.cubicTo(134.35f, 18.1f, 134.61f, 18.07f, 134.78f, 18.08f);
            bezier33Path.cubicTo(134.68f, 18.16f, 134.56f, 18.23f, 134.71f, 18.22f);
            bezier33Path.cubicTo(135.31f, 18.2f, 136.3f, 18.09f, 136.89f, 17.92f);
            bezier33Path.cubicTo(136.86f, 17.84f, 136.59f, 17.89f, 136.48f, 17.82f);
            bezier33Path.cubicTo(136.44f, 17.79f, 136.53f, 17.74f, 136.51f, 17.7f);
            bezier33Path.cubicTo(136.45f, 17.55f, 135.88f, 17.47f, 135.74f, 17.53f);
            bezier33Path.cubicTo(135.75f, 17.48f, 135.74f, 17.45f, 135.74f, 17.41f);
            bezier33Path.cubicTo(135.88f, 17.38f, 136.02f, 17.34f, 136.16f, 17.31f);
            bezier33Path.cubicTo(136.1f, 17.35f, 136.15f, 17.4f, 136.3f, 17.4f);
            bezier33Path.cubicTo(136.27f, 17.34f, 136.35f, 17.27f, 136.18f, 17.3f);
            bezier33Path.cubicTo(137.01f, 17.07f, 137.8f, 16.68f, 138.19f, 16.34f);
            bezier33Path.cubicTo(137.99f, 16.35f, 137.75f, 16.25f, 137.54f, 16.24f);
            bezier33Path.cubicTo(137.83f, 16.23f, 138.09f, 16.22f, 138.24f, 16.22f);
            bezier33Path.cubicTo(138.04f, 16.37f, 139f, 16.12f, 139.26f, 16.26f);
            bezier33Path.cubicTo(139.25f, 16.26f, 139.24f, 16.27f, 139.23f, 16.27f);
            bezier33Path.cubicTo(139.31f, 16.28f, 139.39f, 16.31f, 139.46f, 16.38f);
            bezier33Path.cubicTo(139.36f, 16.41f, 139.25f, 16.44f, 139.15f, 16.47f);
            bezier33Path.cubicTo(139.17f, 16.44f, 139.77f, 16.47f, 139.91f, 16.53f);
            bezier33Path.cubicTo(139.66f, 16.5f, 139.43f, 16.56f, 139.22f, 16.7f);
            bezier33Path.cubicTo(139.2f, 16.71f, 140.03f, 16.95f, 140.04f, 16.61f);
            bezier33Path.cubicTo(140.56f, 16.98f, 139.02f, 17.26f, 139.45f, 17.41f);
            bezier33Path.cubicTo(138.91f, 17.64f, 137.88f, 17.48f, 137.5f, 17.99f);
            bezier33Path.cubicTo(137.44f, 18.08f, 139.19f, 17.89f, 139.36f, 17.97f);
            bezier33Path.cubicTo(139.77f, 18.18f, 140.55f, 18.65f, 141.22f, 18.51f);
            bezier33Path.cubicTo(141.74f, 18.38f, 140.74f, 17.91f, 140.75f, 17.91f);
            bezier33Path.cubicTo(141.65f, 17.77f, 141.62f, 18.21f, 141.86f, 17.44f);
            bezier33Path.cubicTo(141.54f, 17.48f, 141.46f, 17.18f, 141.23f, 17.2f);
            bezier33Path.cubicTo(141.28f, 17.05f, 141.36f, 17.14f, 141.41f, 17.04f);
            bezier33Path.cubicTo(141.82f, 17.1f, 142.67f, 17.34f, 142.75f, 16.81f);
            bezier33Path.cubicTo(142.75f, 16.78f, 141.62f, 16.39f, 141.54f, 16.36f);
            bezier33Path.cubicTo(141.63f, 16.29f, 141.69f, 16.29f, 141.83f, 16.25f);
            bezier33Path.cubicTo(141.73f, 16.2f, 141.62f, 16.19f, 141.51f, 16.21f);
            bezier33Path.cubicTo(141.59f, 16.16f, 141.68f, 16.16f, 141.79f, 16.15f);
            bezier33Path.cubicTo(141.71f, 16.06f, 141.61f, 16.03f, 141.5f, 16.06f);
            bezier33Path.cubicTo(141.51f, 16.03f, 141.52f, 16.01f, 141.53f, 15.98f);
            bezier33Path.cubicTo(140.59f, 15.95f, 139.77f, 15.65f, 138.78f, 15.64f);
            bezier33Path.cubicTo(138.83f, 15.64f, 138.94f, 15.45f, 138.93f, 15.41f);
            bezier33Path.cubicTo(138.79f, 15.02f, 136.46f, 15.81f, 137.01f, 15.57f);
            bezier33Path.cubicTo(136.74f, 15.57f, 137.58f, 15.34f, 137.76f, 15.31f);
            bezier33Path.cubicTo(137.28f, 15.28f, 136.83f, 15.28f, 136.34f, 15.38f);
            bezier33Path.cubicTo(136.51f, 15.32f, 136.68f, 15.29f, 136.84f, 15.21f);
            bezier33Path.cubicTo(135.8f, 15.25f, 135.42f, 15.24f, 134.66f, 15.77f);
            bezier33Path.cubicTo(134.91f, 15.78f, 135.14f, 15.72f, 135.36f, 15.59f);
            bezier33Path.cubicTo(135.31f, 15.59f, 135.27f, 15.6f, 135.22f, 15.6f);
            bezier33Path.cubicTo(135.48f, 15.47f, 135.94f, 15.51f, 136.2f, 15.42f);
            bezier33Path.cubicTo(136.04f, 15.51f, 135.11f, 15.61f, 135.25f, 15.9f);
            bezier33Path.cubicTo(135.25f, 15.9f, 135.9f, 15.91f, 135.98f, 15.95f);
            bezier33Path.cubicTo(135.77f, 16.12f, 135.51f, 16.15f, 135.22f, 16.02f);
            bezier33Path.cubicTo(134.95f, 16.23f, 137.07f, 16.25f, 137.08f, 16.25f);
            bezier33Path.cubicTo(136.82f, 16.32f, 135.78f, 17.26f, 135.43f, 16.92f);
            bezier33Path.cubicTo(135.38f, 16.7f, 135.5f, 16.59f, 135.8f, 16.6f);
            bezier33Path.cubicTo(136.05f, 16.4f, 134.79f, 16.69f, 134.85f, 16.69f);
            bezier33Path.cubicTo(135.16f, 16.44f, 134.59f, 16.55f, 135.06f, 16.41f);
            bezier33Path.cubicTo(134.95f, 16.36f, 134.63f, 16.43f, 134.6f, 16.36f);
            bezier33Path.cubicTo(134.75f, 16.31f, 134.9f, 16.26f, 135.05f, 16.21f);
            bezier33Path.cubicTo(135.4f, 15.96f, 133.96f, 15.98f, 133.56f, 16.28f);
            bezier33Path.cubicTo(133.45f, 16.36f, 134.08f, 16.42f, 133.97f, 16.5f);
            bezier33Path.cubicTo(133.86f, 16.57f, 133.76f, 16.62f, 133.66f, 16.68f);
            bezier33Path.cubicTo(133.77f, 16.65f, 133.85f, 16.64f, 133.97f, 16.61f);
            bezier33Path.cubicTo(133.81f, 16.84f, 133.22f, 16.76f, 132.85f, 17.05f);
            bezier33Path.cubicTo(132.62f, 17.08f, 132.66f, 17.04f, 132.75f, 16.99f);
            bezier33Path.cubicTo(132.23f, 17.13f, 130.77f, 16.96f, 129.87f, 16.92f);
            bezier33Path.cubicTo(129.54f, 17.2f, 128.94f, 17.25f, 128.74f, 17.18f);
            bezier33Path.cubicTo(127.58f, 16.78f, 126.67f, 17.59f, 125.9f, 18.27f);
            bezier33Path.cubicTo(123.58f, 20.35f, 121.49f, 22.68f, 119.67f, 25.2f);
            bezier33Path.cubicTo(115.97f, 30.34f, 113.43f, 36.29f, 112.28f, 42.52f);
            bezier33Path.cubicTo(112.63f, 42.51f, 112.75f, 43.89f, 113.17f, 44f);
            bezier33Path.cubicTo(113.52f, 44.09f, 113.9f, 43.07f, 114.11f, 43.87f);
            bezier33Path.cubicTo(114.39f, 43.93f, 114.26f, 45.32f, 114.37f, 45.6f);
            bezier33Path.cubicTo(114.66f, 46.34f, 115.22f, 46.73f, 115.79f, 46.92f);
            bezier33Path.cubicTo(115.61f, 47.55f, 115.71f, 48.07f, 115.75f, 48.7f);
            bezier33Path.cubicTo(115.8f, 49.4f, 115.23f, 50.1f, 115.39f, 50.76f);
            bezier33Path.cubicTo(115.44f, 50.77f, 115.5f, 50.79f, 115.55f, 50.81f);
            bezier33Path.cubicTo(115.55f, 50.73f, 115.6f, 50.59f, 115.67f, 50.5f);
            bezier33Path.cubicTo(116.32f, 50.72f, 115.9f, 54.03f, 116.76f, 54.38f);
            bezier33Path.cubicTo(117.2f, 54.57f, 117.27f, 52.44f, 118.17f, 52.75f);
            bezier33Path.cubicTo(118.62f, 52.92f, 118.25f, 54.06f, 118.29f, 54.37f);
            bezier33Path.cubicTo(118.3f, 54.39f, 119.02f, 53.72f, 119.08f, 53.62f);
            bezier33Path.cubicTo(118.93f, 53.08f, 118.91f, 51.62f, 117.95f, 52.04f);
            bezier33Path.cubicTo(115.92f, 52.91f, 116.79f, 49.38f, 117.2f, 48.33f);
            bezier33Path.cubicTo(117.67f, 47.12f, 119.41f, 44.89f, 117.06f, 44.75f);
            bezier33Path.cubicTo(115.12f, 44.63f, 117.36f, 42.81f, 117.61f, 42.38f);
            bezier33Path.cubicTo(117.79f, 42.17f, 117.95f, 41.98f, 118.13f, 41.6f);
            bezier33Path.cubicTo(118.4f, 41.03f, 118.89f, 40.61f, 119.16f, 40.05f);
            bezier33Path.cubicTo(116.96f, 39.64f, 116.88f, 42.5f, 114.85f, 42.05f);
            bezier33Path.cubicTo(113.36f, 41.75f, 116.58f, 36.4f, 116.74f, 36.02f);
            bezier33Path.cubicTo(116.75f, 36.02f, 116.76f, 36.02f, 116.77f, 36.03f);
            bezier33Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier33Path, paint);
            
            // Bezier 34
            RectF bezier34Rect = CacheForLogo.bezier34Rect;
            bezier34Rect.set(140.06f, 24.54f, 140.84f, 25.13f);
            Path bezier34Path = CacheForLogo.bezier34Path;
            bezier34Path.reset();
            bezier34Path.moveTo(140.79f, 24.69f);
            bezier34Path.cubicTo(140.82f, 24.63f, 140.74f, 24.6f, 140.73f, 24.54f);
            bezier34Path.cubicTo(140.48f, 24.65f, 140.25f, 24.81f, 140.07f, 25.02f);
            bezier34Path.cubicTo(139.98f, 25.2f, 140.71f, 25.16f, 140.84f, 24.9f);
            bezier34Path.cubicTo(140.42f, 24.9f, 140.72f, 24.84f, 140.79f, 24.69f);
            bezier34Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier34Path, paint);
            
            // Bezier 35
            RectF bezier35Rect = CacheForLogo.bezier35Rect;
            bezier35Rect.set(139.69f, 22.59f, 143.11f, 24.94f);
            Path bezier35Path = CacheForLogo.bezier35Path;
            bezier35Path.reset();
            bezier35Path.moveTo(142.48f, 23.62f);
            bezier35Path.cubicTo(142.4f, 23.64f, 142.31f, 23.65f, 142.23f, 23.67f);
            bezier35Path.cubicTo(142.23f, 23.67f, 142.25f, 23.62f, 142.26f, 23.61f);
            bezier35Path.cubicTo(142.15f, 23.6f, 142.04f, 23.6f, 141.92f, 23.6f);
            bezier35Path.cubicTo(141.94f, 23.5f, 142f, 23.44f, 142.1f, 23.42f);
            bezier35Path.cubicTo(141.9f, 23.32f, 141.7f, 23.34f, 141.51f, 23.46f);
            bezier35Path.cubicTo(141.53f, 23.42f, 142.54f, 22.59f, 142.28f, 22.59f);
            bezier35Path.cubicTo(141.45f, 22.59f, 140.85f, 23.76f, 140.07f, 24f);
            bezier35Path.cubicTo(140.07f, 24.04f, 140.13f, 24.06f, 140.19f, 24.06f);
            bezier35Path.cubicTo(140.09f, 24.27f, 139.79f, 24.21f, 139.69f, 24.4f);
            bezier35Path.cubicTo(139.68f, 24.42f, 141.65f, 24.56f, 141.87f, 24.56f);
            bezier35Path.cubicTo(141.75f, 24.61f, 141.64f, 24.69f, 141.56f, 24.79f);
            bezier35Path.cubicTo(141.52f, 24.88f, 142.4f, 24.41f, 142.39f, 24.42f);
            bezier35Path.cubicTo(142.77f, 24.81f, 142.73f, 25.38f, 143.11f, 24.37f);
            bezier35Path.cubicTo(142.98f, 24.43f, 143.02f, 24.46f, 142.83f, 24.45f);
            bezier35Path.cubicTo(142.94f, 24.17f, 142.9f, 24.31f, 143.06f, 24.03f);
            bezier35Path.cubicTo(142.98f, 24.03f, 142.88f, 24.04f, 142.83f, 24.07f);
            bezier35Path.cubicTo(142.91f, 23.86f, 142.98f, 23.74f, 143.03f, 23.63f);
            bezier35Path.cubicTo(142.92f, 23.66f, 142.67f, 23.66f, 142.48f, 23.62f);
            bezier35Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier35Path, paint);
            
            // Bezier 36
            RectF bezier36Rect = CacheForLogo.bezier36Rect;
            bezier36Rect.set(133.65f, 18.44f, 134.55f, 18.75f);
            Path bezier36Path = CacheForLogo.bezier36Path;
            bezier36Path.reset();
            bezier36Path.moveTo(133.65f, 18.75f);
            bezier36Path.cubicTo(133.87f, 18.72f, 134.34f, 18.56f, 134.55f, 18.47f);
            bezier36Path.cubicTo(134.26f, 18.39f, 134.01f, 18.53f, 133.75f, 18.65f);
            bezier36Path.cubicTo(133.72f, 18.68f, 133.69f, 18.71f, 133.65f, 18.75f);
            bezier36Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier36Path, paint);
            
            // Bezier 37
            RectF bezier37Rect = CacheForLogo.bezier37Rect;
            bezier37Rect.set(130.16f, 14.66f, 130.84f, 14.93f);
            Path bezier37Path = CacheForLogo.bezier37Path;
            bezier37Path.reset();
            bezier37Path.moveTo(130.76f, 14.66f);
            bezier37Path.cubicTo(130.52f, 14.64f, 130.32f, 14.72f, 130.16f, 14.93f);
            bezier37Path.cubicTo(130.35f, 14.95f, 130.5f, 14.9f, 130.59f, 14.76f);
            bezier37Path.cubicTo(130.85f, 14.74f, 130.9f, 14.71f, 130.76f, 14.66f);
            bezier37Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier37Path, paint);
            
            // Bezier 38
            RectF bezier38Rect = CacheForLogo.bezier38Rect;
            bezier38Rect.set(130.85f, 14.78f, 131.21f, 14.84f);
            Path bezier38Path = CacheForLogo.bezier38Path;
            bezier38Path.reset();
            bezier38Path.moveTo(130.91f, 14.84f);
            bezier38Path.cubicTo(131.02f, 14.85f, 131.12f, 14.83f, 131.21f, 14.78f);
            bezier38Path.cubicTo(131.1f, 14.78f, 130.99f, 14.79f, 130.88f, 14.79f);
            bezier38Path.cubicTo(130.82f, 14.83f, 130.86f, 14.84f, 130.91f, 14.84f);
            bezier38Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier38Path, paint);
            
            // Bezier 39
            RectF bezier39Rect = CacheForLogo.bezier39Rect;
            bezier39Rect.set(131.26f, 14.51f, 131.55f, 14.61f);
            Path bezier39Path = CacheForLogo.bezier39Path;
            bezier39Path.reset();
            bezier39Path.moveTo(131.55f, 14.55f);
            bezier39Path.cubicTo(131.46f, 14.49f, 131.36f, 14.5f, 131.26f, 14.56f);
            bezier39Path.cubicTo(131.34f, 14.64f, 131.44f, 14.64f, 131.55f, 14.55f);
            bezier39Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier39Path, paint);
            
            // Bezier 40
            RectF bezier40Rect = CacheForLogo.bezier40Rect;
            bezier40Rect.set(139.55f, 23.08f, 140.63f, 23.49f);
            Path bezier40Path = CacheForLogo.bezier40Path;
            bezier40Path.reset();
            bezier40Path.moveTo(139.55f, 23.1f);
            bezier40Path.cubicTo(139.81f, 23.3f, 140.29f, 23.65f, 140.63f, 23.4f);
            bezier40Path.cubicTo(140.34f, 23.25f, 140.14f, 23.01f, 139.55f, 23.1f);
            bezier40Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier40Path, paint);
            
            // Bezier 41
            RectF bezier41Rect = CacheForLogo.bezier41Rect;
            bezier41Rect.set(131.68f, 14.39f, 132.79f, 14.66f);
            Path bezier41Path = CacheForLogo.bezier41Path;
            bezier41Path.reset();
            bezier41Path.moveTo(132.47f, 14.52f);
            bezier41Path.cubicTo(132.04f, 14.55f, 132.12f, 14.53f, 132.69f, 14.47f);
            bezier41Path.cubicTo(132.69f, 14.44f, 132.67f, 14.42f, 132.64f, 14.41f);
            bezier41Path.cubicTo(132.69f, 14.41f, 132.74f, 14.4f, 132.79f, 14.4f);
            bezier41Path.cubicTo(132.5f, 14.4f, 131.98f, 14.37f, 131.83f, 14.45f);
            bezier41Path.cubicTo(131.96f, 14.41f, 132.1f, 14.4f, 132.23f, 14.43f);
            bezier41Path.cubicTo(131.89f, 14.51f, 131.52f, 14.67f, 131.76f, 14.66f);
            bezier41Path.cubicTo(131.97f, 14.65f, 132.35f, 14.6f, 132.47f, 14.52f);
            bezier41Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier41Path, paint);
            
            // Bezier 42
            RectF bezier42Rect = CacheForLogo.bezier42Rect;
            bezier42Rect.set(127.18f, 16.95f, 127.57f, 17.17f);
            Path bezier42Path = CacheForLogo.bezier42Path;
            bezier42Path.reset();
            bezier42Path.moveTo(127.46f, 16.95f);
            bezier42Path.cubicTo(127.37f, 17.02f, 127.27f, 17.09f, 127.18f, 17.17f);
            bezier42Path.cubicTo(127.29f, 17.15f, 127.48f, 17.14f, 127.56f, 17.11f);
            bezier42Path.cubicTo(127.58f, 16.98f, 127.59f, 16.94f, 127.46f, 16.95f);
            bezier42Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier42Path, paint);
            
            // Bezier 43
            RectF bezier43Rect = CacheForLogo.bezier43Rect;
            bezier43Rect.set(132.79f, 14.37f, 132.98f, 14.4f);
            Path bezier43Path = CacheForLogo.bezier43Path;
            bezier43Path.reset();
            bezier43Path.moveTo(132.98f, 14.37f);
            bezier43Path.cubicTo(132.91f, 14.38f, 132.85f, 14.39f, 132.79f, 14.4f);
            bezier43Path.cubicTo(132.89f, 14.39f, 132.96f, 14.39f, 132.98f, 14.37f);
            bezier43Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier43Path, paint);
            
            // Bezier 44
            RectF bezier44Rect = CacheForLogo.bezier44Rect;
            bezier44Rect.set(127.58f, 15.41f, 132.39f, 16.92f);
            Path bezier44Path = CacheForLogo.bezier44Path;
            bezier44Path.reset();
            bezier44Path.moveTo(127.97f, 16.86f);
            bezier44Path.cubicTo(128.1f, 16.99f, 131.03f, 16.89f, 131.53f, 16.66f);
            bezier44Path.cubicTo(131.53f, 16.66f, 131.46f, 16.53f, 131.43f, 16.55f);
            bezier44Path.cubicTo(131.59f, 16.43f, 131.95f, 16.47f, 132.13f, 16.42f);
            bezier44Path.cubicTo(131.76f, 16.13f, 131.46f, 16.46f, 131.71f, 15.92f);
            bezier44Path.cubicTo(131.77f, 15.81f, 132.35f, 15.44f, 132.39f, 15.46f);
            bezier44Path.cubicTo(131.7f, 15.22f, 131.18f, 16.02f, 130.66f, 16.05f);
            bezier44Path.cubicTo(130.76f, 16.04f, 129.89f, 15.74f, 129.35f, 15.88f);
            bezier44Path.cubicTo(129.38f, 15.73f, 129.34f, 15.69f, 129.25f, 15.69f);
            bezier44Path.cubicTo(129.27f, 15.66f, 129.28f, 15.62f, 129.26f, 15.56f);
            bezier44Path.cubicTo(129.18f, 15.62f, 129.1f, 15.68f, 129.02f, 15.74f);
            bezier44Path.cubicTo(129.04f, 15.74f, 129.06f, 15.74f, 129.08f, 15.74f);
            bezier44Path.cubicTo(128.74f, 15.91f, 128.21f, 16.36f, 128.07f, 16.47f);
            bezier44Path.cubicTo(128.24f, 16.45f, 128.57f, 16.39f, 128.77f, 16.48f);
            bezier44Path.cubicTo(128.24f, 16.53f, 128.01f, 16.51f, 127.58f, 16.85f);
            bezier44Path.cubicTo(127.73f, 16.84f, 127.94f, 16.83f, 127.97f, 16.86f);
            bezier44Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier44Path, paint);
            
            // Bezier 45
            RectF bezier45Rect = CacheForLogo.bezier45Rect;
            bezier45Rect.set(129.65f, 14.73f, 133.04f, 15.3f);
            Path bezier45Path = CacheForLogo.bezier45Path;
            bezier45Path.reset();
            bezier45Path.moveTo(130.24f, 15.25f);
            bezier45Path.cubicTo(130.29f, 15.22f, 130.38f, 15.19f, 130.44f, 15.18f);
            bezier45Path.cubicTo(130.44f, 15.19f, 130.44f, 15.2f, 130.44f, 15.21f);
            bezier45Path.cubicTo(131.2f, 15.04f, 132.34f, 15.38f, 133.04f, 14.96f);
            bezier45Path.cubicTo(133.12f, 14.9f, 132.13f, 14.98f, 132.61f, 14.73f);
            bezier45Path.cubicTo(132.52f, 14.74f, 131.62f, 14.9f, 132.04f, 14.91f);
            bezier45Path.cubicTo(131.98f, 14.96f, 131.91f, 14.99f, 131.82f, 14.99f);
            bezier45Path.cubicTo(131.85f, 14.99f, 131.89f, 15f, 132f, 14.99f);
            bezier45Path.cubicTo(131.47f, 15.2f, 130.96f, 14.85f, 130.47f, 14.91f);
            bezier45Path.cubicTo(130.43f, 14.93f, 130.44f, 14.94f, 130.47f, 14.94f);
            bezier45Path.cubicTo(130.37f, 14.94f, 130.27f, 14.96f, 130.18f, 15f);
            bezier45Path.cubicTo(130.19f, 15.01f, 130.22f, 15.01f, 130.24f, 15.02f);
            bezier45Path.cubicTo(130.11f, 15.01f, 130.03f, 15.02f, 129.93f, 15.09f);
            bezier45Path.cubicTo(129.95f, 15.09f, 129.98f, 15.1f, 130.01f, 15.1f);
            bezier45Path.cubicTo(129.86f, 15.08f, 129.74f, 15.15f, 129.65f, 15.29f);
            bezier45Path.cubicTo(129.85f, 15.31f, 130.05f, 15.29f, 130.24f, 15.25f);
            bezier45Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier45Path, paint);
            
            // Bezier 46
            RectF bezier46Rect = CacheForLogo.bezier46Rect;
            bezier46Rect.set(130.08f, 15.21f, 130.44f, 15.37f);
            Path bezier46Path = CacheForLogo.bezier46Path;
            bezier46Path.reset();
            bezier46Path.moveTo(130.44f, 15.21f);
            bezier46Path.cubicTo(130.31f, 15.24f, 130.19f, 15.28f, 130.08f, 15.34f);
            bezier46Path.cubicTo(130.33f, 15.41f, 130.44f, 15.36f, 130.44f, 15.21f);
            bezier46Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier46Path, paint);
            
            // Bezier 47
            RectF bezier47Rect = CacheForLogo.bezier47Rect;
            bezier47Rect.set(125.55f, 36.8f, 125.59f, 37.01f);
            Path bezier47Path = CacheForLogo.bezier47Path;
            bezier47Path.reset();
            bezier47Path.moveTo(125.59f, 36.8f);
            bezier47Path.cubicTo(125.54f, 36.88f, 125.52f, 37.03f, 125.59f, 37.01f);
            bezier47Path.cubicTo(125.59f, 36.94f, 125.59f, 36.87f, 125.59f, 36.8f);
            bezier47Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier47Path, paint);
            
            // Bezier 48
            RectF bezier48Rect = CacheForLogo.bezier48Rect;
            bezier48Rect.set(119.38f, 52.14f, 145.46f, 90.21f);
            Path bezier48Path = CacheForLogo.bezier48Path;
            bezier48Path.reset();
            bezier48Path.moveTo(144.61f, 61.25f);
            bezier48Path.cubicTo(143.72f, 61.07f, 143.22f, 60.53f, 142.37f, 60.3f);
            bezier48Path.cubicTo(141.53f, 60.06f, 140.61f, 60.33f, 139.88f, 60.4f);
            bezier48Path.cubicTo(139.72f, 59.73f, 139.51f, 59.75f, 138.92f, 59.51f);
            bezier48Path.cubicTo(137.38f, 58.86f, 138.1f, 60.3f, 137.31f, 60.37f);
            bezier48Path.cubicTo(136.51f, 60.46f, 135.62f, 59.43f, 136.24f, 58.6f);
            bezier48Path.cubicTo(136.66f, 58.05f, 135.15f, 55.88f, 134.27f, 55.94f);
            bezier48Path.cubicTo(133.51f, 55.97f, 131.5f, 55.79f, 131.02f, 55.09f);
            bezier48Path.cubicTo(130.43f, 54.2f, 128.28f, 53.97f, 128.09f, 52.98f);
            bezier48Path.cubicTo(128.16f, 53.02f, 128.31f, 52.99f, 128.38f, 52.92f);
            bezier48Path.cubicTo(127.79f, 52.92f, 126.94f, 53.5f, 126.49f, 53.34f);
            bezier48Path.cubicTo(126.18f, 53.22f, 125.25f, 53.35f, 125.03f, 53.09f);
            bezier48Path.cubicTo(124.73f, 52.75f, 124.1f, 52.3f, 123.59f, 52.32f);
            bezier48Path.cubicTo(123.64f, 52.59f, 123.93f, 52.46f, 124.06f, 52.73f);
            bezier48Path.cubicTo(122.62f, 52.82f, 123.67f, 54.27f, 123.4f, 54.29f);
            bezier48Path.cubicTo(122.77f, 54.33f, 122.94f, 52.97f, 122.94f, 52.68f);
            bezier48Path.cubicTo(123.12f, 52.54f, 123.14f, 52.4f, 123.01f, 52.25f);
            bezier48Path.cubicTo(122.75f, 51.89f, 122.54f, 52.51f, 122.34f, 52.6f);
            bezier48Path.cubicTo(121.46f, 52.99f, 120.02f, 53.79f, 120.24f, 54.97f);
            bezier48Path.cubicTo(119.14f, 55.42f, 120.24f, 56.86f, 120.43f, 57.71f);
            bezier48Path.cubicTo(120.32f, 57.9f, 120.39f, 58.04f, 120.64f, 58.12f);
            bezier48Path.cubicTo(120.66f, 59.02f, 119.45f, 59.97f, 119.43f, 60.85f);
            bezier48Path.cubicTo(119.41f, 61.88f, 119.13f, 62.02f, 120.07f, 62.52f);
            bezier48Path.cubicTo(120.08f, 63.15f, 119.41f, 63.44f, 119.58f, 64.14f);
            bezier48Path.cubicTo(119.77f, 64.88f, 120.42f, 64.91f, 120.75f, 65.36f);
            bezier48Path.cubicTo(121.4f, 66.32f, 122.22f, 67.31f, 123.04f, 68.19f);
            bezier48Path.cubicTo(124f, 69.24f, 124.25f, 70.6f, 125.84f, 70.88f);
            bezier48Path.cubicTo(127.08f, 71.05f, 128.46f, 71.82f, 128.96f, 72.98f);
            bezier48Path.cubicTo(129.41f, 74.03f, 129.57f, 75.13f, 129.95f, 76.21f);
            bezier48Path.cubicTo(130.12f, 77.34f, 130.02f, 79.33f, 130.71f, 80.24f);
            bezier48Path.cubicTo(131.36f, 81.81f, 131.46f, 82.8f, 131.47f, 84.4f);
            bezier48Path.cubicTo(131.47f, 85.21f, 131.93f, 85.3f, 132.2f, 85.88f);
            bezier48Path.cubicTo(132.47f, 86.45f, 132.02f, 86.95f, 132.88f, 87.45f);
            bezier48Path.cubicTo(132.9f, 87.26f, 133f, 87.16f, 133.18f, 87.16f);
            bezier48Path.cubicTo(133.93f, 88.73f, 136.9f, 89.57f, 138.5f, 90.21f);
            bezier48Path.cubicTo(138.63f, 89.58f, 136.18f, 89.17f, 137.42f, 88.41f);
            bezier48Path.cubicTo(138.17f, 88.06f, 137.57f, 87.07f, 137.39f, 86.66f);
            bezier48Path.cubicTo(137.53f, 86.63f, 138.18f, 86.85f, 137.99f, 86.42f);
            bezier48Path.cubicTo(138.12f, 86.69f, 136.18f, 85.81f, 136.95f, 85.6f);
            bezier48Path.cubicTo(137.36f, 85.49f, 138.38f, 85.81f, 138.09f, 85.13f);
            bezier48Path.cubicTo(138.11f, 84.78f, 137.44f, 84.07f, 138.07f, 83.91f);
            bezier48Path.cubicTo(138.6f, 83.78f, 139.5f, 83.66f, 139.76f, 83.07f);
            bezier48Path.cubicTo(140.5f, 81.43f, 138.94f, 81.89f, 138.52f, 80.8f);
            bezier48Path.cubicTo(138.61f, 81.03f, 140.81f, 80.69f, 140.95f, 79.98f);
            bezier48Path.cubicTo(141.15f, 78.91f, 141.54f, 77.99f, 141.68f, 76.93f);
            bezier48Path.cubicTo(141.68f, 76.94f, 141.69f, 76.94f, 141.69f, 76.95f);
            bezier48Path.cubicTo(141.68f, 76.54f, 141.95f, 76.63f, 142.19f, 76f);
            bezier48Path.cubicTo(142.44f, 75.37f, 141.77f, 74.95f, 141.63f, 74.48f);
            bezier48Path.cubicTo(141.54f, 73.94f, 142.27f, 73.16f, 142.66f, 72.91f);
            bezier48Path.cubicTo(144.09f, 72.01f, 144.34f, 71.42f, 144.75f, 69.78f);
            bezier48Path.cubicTo(144.89f, 68.83f, 143.91f, 66.65f, 144.25f, 66.01f);
            bezier48Path.cubicTo(144.69f, 65.16f, 146.51f, 61.66f, 144.61f, 61.25f);
            bezier48Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier48Path, paint);
            
            // Bezier 49
            RectF bezier49Rect = CacheForLogo.bezier49Rect;
            bezier49Rect.set(125.54f, 41.15f, 126.1f, 41.53f);
            Path bezier49Path = CacheForLogo.bezier49Path;
            bezier49Path.reset();
            bezier49Path.moveTo(125.61f, 41.53f);
            bezier49Path.cubicTo(125.91f, 41.55f, 126.07f, 41.42f, 126.11f, 41.15f);
            bezier49Path.cubicTo(126.04f, 41.22f, 125.32f, 41.45f, 125.61f, 41.53f);
            bezier49Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier49Path, paint);
            
            // Bezier 50
            RectF bezier50Rect = CacheForLogo.bezier50Rect;
            bezier50Rect.set(144.99f, 15.79f, 145.04f, 15.82f);
            Path bezier50Path = CacheForLogo.bezier50Path;
            bezier50Path.reset();
            bezier50Path.moveTo(144.99f, 15.82f);
            bezier50Path.cubicTo(145.01f, 15.81f, 145.02f, 15.8f, 145.04f, 15.79f);
            bezier50Path.cubicTo(145.02f, 15.79f, 144.99f, 15.8f, 144.99f, 15.82f);
            bezier50Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier50Path, paint);
            
            // Bezier 51
            RectF bezier51Rect = CacheForLogo.bezier51Rect;
            bezier51Rect.set(153.48f, 26.71f, 195.92f, 84.66f);
            Path bezier51Path = CacheForLogo.bezier51Path;
            bezier51Path.reset();
            bezier51Path.moveTo(193.38f, 47.32f);
            bezier51Path.cubicTo(191.92f, 47.58f, 191.37f, 48f, 190.97f, 46.25f);
            bezier51Path.cubicTo(190.69f, 45.02f, 188.59f, 44.18f, 188.31f, 42.88f);
            bezier51Path.cubicTo(188.1f, 41.9f, 187.86f, 41.56f, 187.21f, 40.84f);
            bezier51Path.cubicTo(186.62f, 40.16f, 186.83f, 39f, 186.35f, 38.18f);
            bezier51Path.cubicTo(185.93f, 37.46f, 185.84f, 36.71f, 185.45f, 35.96f);
            bezier51Path.cubicTo(184.88f, 34.86f, 183.7f, 33.38f, 183.63f, 32.14f);
            bezier51Path.cubicTo(184.02f, 32.55f, 184.44f, 33.68f, 184.89f, 33.75f);
            bezier51Path.cubicTo(185.17f, 32.54f, 185.21f, 32.24f, 184.74f, 31.07f);
            bezier51Path.cubicTo(183.95f, 31.29f, 183.26f, 30.79f, 182.5f, 31.07f);
            bezier51Path.cubicTo(181.48f, 31.45f, 180.68f, 31.31f, 179.66f, 30.95f);
            bezier51Path.cubicTo(178.94f, 30.69f, 176.02f, 28.99f, 176.06f, 30.96f);
            bezier51Path.cubicTo(176.11f, 33.26f, 173.38f, 30.28f, 172.67f, 30.05f);
            bezier51Path.cubicTo(171.91f, 29.8f, 170.65f, 30.23f, 170.66f, 28.92f);
            bezier51Path.cubicTo(170.67f, 28.18f, 170.94f, 27.61f, 170.99f, 26.95f);
            bezier51Path.cubicTo(170.77f, 27.16f, 170.57f, 27.14f, 170.39f, 26.9f);
            bezier51Path.cubicTo(170.06f, 26.39f, 169.59f, 27.06f, 169.23f, 27.07f);
            bezier51Path.cubicTo(168.46f, 27.1f, 167.77f, 27.08f, 167.02f, 27.11f);
            bezier51Path.cubicTo(165.88f, 27.15f, 164.68f, 27.75f, 163.71f, 28.3f);
            bezier51Path.cubicTo(162.51f, 29f, 161.45f, 27.98f, 160.76f, 28.9f);
            bezier51Path.cubicTo(160.78f, 28.9f, 160.79f, 28.89f, 160.81f, 28.89f);
            bezier51Path.cubicTo(160.2f, 29.69f, 159.5f, 30.4f, 158.92f, 31.21f);
            bezier51Path.cubicTo(158.51f, 31.78f, 158.66f, 32.5f, 158.45f, 33.14f);
            bezier51Path.cubicTo(158.27f, 33.73f, 157.6f, 34.3f, 157.03f, 34.5f);
            bezier51Path.cubicTo(156.01f, 34.88f, 155.6f, 36.04f, 155.18f, 36.97f);
            bezier51Path.cubicTo(154.84f, 37.72f, 154.56f, 38.43f, 154.15f, 39.14f);
            bezier51Path.cubicTo(153.62f, 40.08f, 154.34f, 41.57f, 154.3f, 42.59f);
            bezier51Path.cubicTo(154.28f, 43.32f, 154.01f, 44.16f, 153.62f, 44.76f);
            bezier51Path.cubicTo(153.24f, 45.36f, 153.73f, 46.08f, 153.72f, 46.86f);
            bezier51Path.cubicTo(153.7f, 46.86f, 153.68f, 46.86f, 153.66f, 46.86f);
            bezier51Path.cubicTo(154.05f, 47.49f, 154.53f, 48.05f, 155.02f, 48.6f);
            bezier51Path.cubicTo(155.9f, 49.57f, 156.09f, 50.88f, 157.03f, 51.83f);
            bezier51Path.cubicTo(157.74f, 52.54f, 158.58f, 53.66f, 159.71f, 53.27f);
            bezier51Path.cubicTo(160.23f, 53.1f, 160.65f, 52.77f, 161.22f, 52.76f);
            bezier51Path.cubicTo(161.69f, 52.75f, 162.06f, 53.16f, 162.53f, 53.16f);
            bezier51Path.cubicTo(163.63f, 53.13f, 164.72f, 51.59f, 166.05f, 51.56f);
            bezier51Path.cubicTo(167.02f, 51.53f, 166.94f, 53.2f, 167.78f, 53.18f);
            bezier51Path.cubicTo(170.5f, 53.12f, 170.18f, 55.07f, 169.48f, 56.96f);
            bezier51Path.cubicTo(169.04f, 58.17f, 170.23f, 59.32f, 170.91f, 60.17f);
            bezier51Path.cubicTo(171.58f, 61.03f, 171.66f, 62.31f, 171.94f, 63.35f);
            bezier51Path.cubicTo(172.2f, 64.32f, 172.67f, 65.85f, 172.43f, 66.85f);
            bezier51Path.cubicTo(172.2f, 67.86f, 171.36f, 68.57f, 171.17f, 69.61f);
            bezier51Path.cubicTo(170.91f, 71.05f, 171.46f, 72.48f, 172.1f, 73.74f);
            bezier51Path.cubicTo(172.71f, 74.96f, 172.75f, 75.47f, 172.89f, 76.8f);
            bezier51Path.cubicTo(173.2f, 79.68f, 175.41f, 81.76f, 175.38f, 84.52f);
            bezier51Path.cubicTo(175.66f, 84.36f, 176.55f, 84.92f, 177.33f, 84.51f);
            bezier51Path.cubicTo(178.15f, 84.07f, 178.85f, 84.28f, 179.7f, 84.19f);
            bezier51Path.cubicTo(179.76f, 83.84f, 181.32f, 83.29f, 181.63f, 82.86f);
            bezier51Path.cubicTo(182.38f, 81.84f, 182.82f, 80.67f, 183.64f, 79.71f);
            bezier51Path.cubicTo(184.52f, 78.66f, 183.52f, 77.9f, 184.56f, 77.02f);
            bezier51Path.cubicTo(185.55f, 76.21f, 185.86f, 76.53f, 185.92f, 74.95f);
            bezier51Path.cubicTo(185.94f, 74.27f, 184.65f, 72.6f, 186.05f, 72.32f);
            bezier51Path.cubicTo(186.21f, 71.33f, 187.2f, 70.9f, 187.96f, 70.43f);
            bezier51Path.cubicTo(190.13f, 69.08f, 188.45f, 67.18f, 189.33f, 65.3f);
            bezier51Path.cubicTo(189.65f, 64.61f, 188.61f, 63.81f, 188.62f, 63.06f);
            bezier51Path.cubicTo(188.63f, 62.34f, 188.46f, 61.64f, 188.47f, 60.92f);
            bezier51Path.cubicTo(188.47f, 60.2f, 189.07f, 59.84f, 189.21f, 59.18f);
            bezier51Path.cubicTo(189.76f, 56.69f, 191.89f, 56f, 193.2f, 54.07f);
            bezier51Path.cubicTo(194.34f, 52.41f, 196.58f, 48.48f, 195.73f, 46.46f);
            bezier51Path.cubicTo(194.97f, 46.71f, 194.2f, 47.14f, 193.38f, 47.32f);
            bezier51Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier51Path, paint);
            
            // Bezier 52
            RectF bezier52Rect = CacheForLogo.bezier52Rect;
            bezier52Rect.set(192.25f, 69.88f, 192.86f, 71.03f);
            Path bezier52Path = CacheForLogo.bezier52Path;
            bezier52Path.reset();
            bezier52Path.moveTo(192.25f, 71.03f);
            bezier52Path.cubicTo(192.46f, 70.65f, 192.66f, 70.27f, 192.86f, 69.88f);
            bezier52Path.cubicTo(192.55f, 70.08f, 192.32f, 70.37f, 192.25f, 71.03f);
            bezier52Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier52Path, paint);
            
            // Bezier 53
            RectF bezier53Rect = CacheForLogo.bezier53Rect;
            bezier53Rect.set(142.66f, 12.78f, 157.73f, 18.6f);
            Path bezier53Path = CacheForLogo.bezier53Path;
            bezier53Path.reset();
            bezier53Path.moveTo(151.17f, 13.17f);
            bezier53Path.cubicTo(151.28f, 13.16f, 151.42f, 13.16f, 151.57f, 13.16f);
            bezier53Path.cubicTo(151.36f, 13.17f, 151.21f, 13.18f, 151.17f, 13.17f);
            bezier53Path.close();
            bezier53Path.moveTo(152.69f, 13.25f);
            bezier53Path.cubicTo(152.66f, 13.25f, 152.76f, 13.22f, 152.88f, 13.18f);
            bezier53Path.cubicTo(153.09f, 13.17f, 153.29f, 13.17f, 153.49f, 13.15f);
            bezier53Path.cubicTo(153.12f, 13.2f, 152.75f, 13.25f, 152.69f, 13.25f);
            bezier53Path.close();
            bezier53Path.moveTo(156.25f, 13.24f);
            bezier53Path.cubicTo(156.15f, 13.27f, 156.13f, 13.27f, 156f, 13.25f);
            bezier53Path.cubicTo(156.04f, 13.25f, 156.14f, 13.24f, 156.25f, 13.24f);
            bezier53Path.close();
            bezier53Path.moveTo(152.44f, 15.46f);
            bezier53Path.cubicTo(152.55f, 15.14f, 153.18f, 15.98f, 153.35f, 15.46f);
            bezier53Path.cubicTo(153.18f, 15.37f, 153.01f, 15.29f, 152.82f, 15.24f);
            bezier53Path.cubicTo(153.15f, 15.23f, 153.68f, 15.48f, 153.98f, 15.15f);
            bezier53Path.cubicTo(153.92f, 15.14f, 153.87f, 15.11f, 153.89f, 15.07f);
            bezier53Path.cubicTo(154.11f, 15.06f, 154.36f, 15.01f, 154.46f, 14.92f);
            bezier53Path.cubicTo(154.31f, 14.95f, 154.16f, 14.92f, 154.03f, 14.84f);
            bezier53Path.cubicTo(154.09f, 14.66f, 154.38f, 14.88f, 154.47f, 14.66f);
            bezier53Path.cubicTo(154.56f, 14.42f, 154f, 14.45f, 154.03f, 14.39f);
            bezier53Path.cubicTo(154.15f, 14.11f, 155.04f, 14.51f, 155.15f, 14.22f);
            bezier53Path.cubicTo(155.01f, 14.15f, 154.86f, 14.1f, 154.7f, 14.08f);
            bezier53Path.cubicTo(154.77f, 14.08f, 154.86f, 14.06f, 154.93f, 14.05f);
            bezier53Path.cubicTo(154.67f, 13.98f, 154.41f, 13.96f, 154.14f, 14f);
            bezier53Path.cubicTo(154.45f, 13.83f, 156.13f, 13.46f, 156.26f, 13.24f);
            bezier53Path.cubicTo(156.72f, 13.22f, 157.61f, 13.16f, 157.73f, 12.96f);
            bezier53Path.cubicTo(157.77f, 12.89f, 153.6f, 13.4f, 153.36f, 13.43f);
            bezier53Path.cubicTo(153.42f, 13.39f, 154.28f, 13.11f, 154.3f, 13.08f);
            bezier53Path.cubicTo(154.31f, 13.06f, 154.13f, 13.07f, 153.89f, 13.1f);
            bezier53Path.cubicTo(154.19f, 13.05f, 154.44f, 12.97f, 154.6f, 12.83f);
            bezier53Path.cubicTo(152.39f, 12.79f, 150.01f, 12.66f, 147.85f, 13.16f);
            bezier53Path.cubicTo(147.88f, 13.18f, 147.94f, 13.17f, 147.98f, 13.19f);
            bezier53Path.cubicTo(147.86f, 13.19f, 147.75f, 13.21f, 147.65f, 13.25f);
            bezier53Path.cubicTo(147.75f, 13.33f, 147.87f, 13.36f, 148f, 13.35f);
            bezier53Path.cubicTo(147.82f, 13.36f, 146.95f, 13.19f, 146.85f, 13.36f);
            bezier53Path.cubicTo(146.84f, 13.38f, 146.86f, 13.4f, 146.87f, 13.42f);
            bezier53Path.cubicTo(146.7f, 13.36f, 146.46f, 13.32f, 146.38f, 13.47f);
            bezier53Path.cubicTo(146.06f, 13.49f, 143.89f, 13.58f, 143.66f, 14.03f);
            bezier53Path.cubicTo(143.79f, 14.08f, 143.92f, 14.1f, 144.06f, 14.07f);
            bezier53Path.cubicTo(143.83f, 14.52f, 142.84f, 14.13f, 142.66f, 14.52f);
            bezier53Path.cubicTo(142.59f, 14.65f, 143.55f, 14.58f, 143.63f, 14.58f);
            bezier53Path.cubicTo(143.44f, 14.8f, 142.91f, 14.56f, 142.75f, 14.8f);
            bezier53Path.cubicTo(142.88f, 14.77f, 143.01f, 14.79f, 143.14f, 14.84f);
            bezier53Path.cubicTo(143.1f, 14.87f, 143.06f, 14.88f, 143f, 14.9f);
            bezier53Path.cubicTo(143.14f, 14.98f, 143.27f, 14.99f, 143.41f, 14.96f);
            bezier53Path.cubicTo(143.39f, 14.96f, 143.38f, 14.94f, 143.36f, 14.93f);
            bezier53Path.cubicTo(143.78f, 14.82f, 145.35f, 14.82f, 145.06f, 15.57f);
            bezier53Path.cubicTo(145.26f, 15.61f, 145.24f, 15.69f, 145.04f, 15.79f);
            bezier53Path.cubicTo(145.22f, 15.77f, 145.69f, 16.04f, 145.75f, 16.06f);
            bezier53Path.cubicTo(145.62f, 16.26f, 145.34f, 16.02f, 145.15f, 16.06f);
            bezier53Path.cubicTo(145.13f, 16.18f, 145.62f, 16.21f, 145.83f, 16.25f);
            bezier53Path.cubicTo(145.61f, 16.51f, 145.04f, 16.58f, 144.93f, 16.93f);
            bezier53Path.cubicTo(144.98f, 16.91f, 145.03f, 16.91f, 145.07f, 16.93f);
            bezier53Path.cubicTo(144.79f, 17.31f, 145.27f, 17.36f, 145.39f, 17.52f);
            bezier53Path.cubicTo(144.79f, 17.83f, 146.43f, 18.58f, 146.66f, 18.6f);
            bezier53Path.cubicTo(147.01f, 18.63f, 147.8f, 17.28f, 148.47f, 17.15f);
            bezier53Path.cubicTo(148.46f, 17.19f, 148.45f, 17.22f, 148.44f, 17.26f);
            bezier53Path.cubicTo(149.16f, 17.28f, 149.53f, 16.87f, 150.16f, 16.69f);
            bezier53Path.cubicTo(151.13f, 16.7f, 152.15f, 16.53f, 153.06f, 16.22f);
            bezier53Path.cubicTo(152.84f, 16.18f, 151.87f, 16.19f, 151.91f, 16.03f);
            bezier53Path.cubicTo(152.22f, 16f, 152.05f, 16f, 152.1f, 15.83f);
            bezier53Path.cubicTo(152.25f, 15.88f, 153.3f, 16.27f, 153.37f, 16.04f);
            bezier53Path.cubicTo(153.47f, 15.7f, 152.6f, 15.55f, 152.44f, 15.46f);
            bezier53Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier53Path, paint);
            
            // Bezier 54
            RectF bezier54Rect = CacheForLogo.bezier54Rect;
            bezier54Rect.set(124.85f, 36.44f, 125.3f, 36.66f);
            Path bezier54Path = CacheForLogo.bezier54Path;
            bezier54Path.reset();
            bezier54Path.moveTo(125.19f, 36.44f);
            bezier54Path.cubicTo(125.1f, 36.44f, 124.93f, 36.52f, 124.85f, 36.61f);
            bezier54Path.cubicTo(124.95f, 36.62f, 125.12f, 36.67f, 125.3f, 36.66f);
            bezier54Path.cubicTo(125.3f, 36.59f, 125.31f, 36.46f, 125.19f, 36.44f);
            bezier54Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier54Path, paint);
            
            // Bezier 55
            RectF bezier55Rect = CacheForLogo.bezier55Rect;
            bezier55Rect.set(153.9f, 16.02f, 157.13f, 17.07f);
            Path bezier55Path = CacheForLogo.bezier55Path;
            bezier55Path.reset();
            bezier55Path.moveTo(154.16f, 16.72f);
            bezier55Path.cubicTo(154.12f, 16.72f, 154.07f, 16.74f, 154.03f, 16.75f);
            bezier55Path.cubicTo(155.21f, 16.86f, 155.86f, 17.36f, 157.12f, 16.82f);
            bezier55Path.cubicTo(157.21f, 16.66f, 156.7f, 16.4f, 157.05f, 16.32f);
            bezier55Path.cubicTo(156.89f, 16.3f, 155.58f, 16.16f, 155.56f, 16.32f);
            bezier55Path.cubicTo(155.38f, 16.21f, 155.16f, 16.36f, 155.04f, 16.18f);
            bezier55Path.cubicTo(154.9f, 16.25f, 154.52f, 16.4f, 154.68f, 16.02f);
            bezier55Path.cubicTo(154.5f, 16f, 154.23f, 16.09f, 154.07f, 16.1f);
            bezier55Path.cubicTo(154.04f, 16.17f, 154.56f, 16.41f, 154.54f, 16.39f);
            bezier55Path.cubicTo(154.39f, 16.41f, 154.07f, 16.43f, 153.9f, 16.41f);
            bezier55Path.cubicTo(153.96f, 16.5f, 154.21f, 16.44f, 154.37f, 16.49f);
            bezier55Path.cubicTo(154.29f, 16.57f, 154.22f, 16.62f, 154.16f, 16.72f);
            bezier55Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier55Path, paint);
            
            // Bezier 56
            RectF bezier56Rect = CacheForLogo.bezier56Rect;
            bezier56Rect.set(121.94f, 44.44f, 122.75f, 45.07f);
            Path bezier56Path = CacheForLogo.bezier56Path;
            bezier56Path.reset();
            bezier56Path.moveTo(122.19f, 44.44f);
            bezier56Path.cubicTo(122.04f, 44.41f, 121.49f, 45.12f, 122.74f, 45.07f);
            bezier56Path.cubicTo(122.77f, 44.94f, 122.77f, 44.84f, 122.68f, 44.75f);
            bezier56Path.cubicTo(122.68f, 44.77f, 122.68f, 44.8f, 122.69f, 44.82f);
            bezier56Path.cubicTo(122.6f, 44.73f, 122.41f, 44.49f, 122.19f, 44.44f);
            bezier56Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier56Path, paint);
            
            // Bezier 57
            RectF bezier57Rect = CacheForLogo.bezier57Rect;
            bezier57Rect.set(123.85f, 42.86f, 127.7f, 45.71f);
            Path bezier57Path = CacheForLogo.bezier57Path;
            bezier57Path.reset();
            bezier57Path.moveTo(125.23f, 44.4f);
            bezier57Path.cubicTo(125.23f, 44.41f, 125.23f, 44.42f, 125.23f, 44.41f);
            bezier57Path.cubicTo(125.24f, 44.41f, 125.23f, 44.41f, 125.23f, 44.4f);
            bezier57Path.close();
            bezier57Path.moveTo(124.14f, 45.1f);
            bezier57Path.cubicTo(124.54f, 44.02f, 125.46f, 45.71f, 125.47f, 45.71f);
            bezier57Path.cubicTo(125.62f, 45.74f, 126.25f, 44.76f, 126.29f, 45.18f);
            bezier57Path.cubicTo(126.29f, 45.19f, 127.65f, 45.19f, 127.7f, 45.2f);
            bezier57Path.cubicTo(127.7f, 45.24f, 127.53f, 44.64f, 127.46f, 44.35f);
            bezier57Path.cubicTo(127.21f, 43.91f, 127.3f, 43.25f, 126.64f, 43.15f);
            bezier57Path.cubicTo(126.32f, 43.1f, 125.98f, 43.38f, 125.76f, 43.03f);
            bezier57Path.cubicTo(125.28f, 42.29f, 125.24f, 44.2f, 125.23f, 44.4f);
            bezier57Path.cubicTo(125.11f, 44.34f, 123.11f, 44.51f, 124.14f, 45.1f);
            bezier57Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier57Path, paint);
            
            // Bezier 58
            RectF bezier58Rect = CacheForLogo.bezier58Rect;
            bezier58Rect.set(138.8f, 24.51f, 139.75f, 24.93f);
            Path bezier58Path = CacheForLogo.bezier58Path;
            bezier58Path.reset();
            bezier58Path.moveTo(138.93f, 24.51f);
            bezier58Path.cubicTo(138.88f, 24.52f, 138.82f, 24.56f, 138.8f, 24.6f);
            bezier58Path.cubicTo(138.73f, 24.73f, 139.53f, 25.19f, 139.75f, 24.74f);
            bezier58Path.cubicTo(139.4f, 24.85f, 139.13f, 24.77f, 138.93f, 24.51f);
            bezier58Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier58Path, paint);
            
            // Bezier 59
            RectF bezier59Rect = CacheForLogo.bezier59Rect;
            bezier59Rect.set(120.02f, 39.29f, 124.67f, 43.18f);
            Path bezier59Path = CacheForLogo.bezier59Path;
            bezier59Path.reset();
            bezier59Path.moveTo(124.67f, 42.82f);
            bezier59Path.cubicTo(124.4f, 42.44f, 124.82f, 42.11f, 124.24f, 41.94f);
            bezier59Path.cubicTo(124.29f, 41.62f, 123.43f, 40.39f, 123.06f, 40.02f);
            bezier59Path.cubicTo(121.89f, 38.88f, 121.09f, 39.1f, 120.02f, 40.45f);
            bezier59Path.cubicTo(121.06f, 40.59f, 121.19f, 39.13f, 121.53f, 40.29f);
            bezier59Path.cubicTo(122.84f, 40.45f, 123.12f, 41.84f, 122.75f, 42.72f);
            bezier59Path.cubicTo(123.41f, 42.82f, 124.05f, 43.64f, 124.67f, 42.82f);
            bezier59Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier59Path, paint);
            
            // Bezier 60
            RectF bezier60Rect = CacheForLogo.bezier60Rect;
            bezier60Rect.set(128.36f, 45.6f, 129.27f, 46.29f);
            Path bezier60Path = CacheForLogo.bezier60Path;
            bezier60Path.reset();
            bezier60Path.moveTo(128.38f, 45.76f);
            bezier60Path.cubicTo(128.23f, 46.23f, 129.04f, 46.46f, 129.27f, 46.14f);
            bezier60Path.cubicTo(129.26f, 45.93f, 128.52f, 45.3f, 128.38f, 45.76f);
            bezier60Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier60Path, paint);
            
            // Bezier 61
            RectF bezier61Rect = CacheForLogo.bezier61Rect;
            bezier61Rect.set(127.42f, 44.21f, 127.47f, 44.38f);
            Path bezier61Path = CacheForLogo.bezier61Path;
            bezier61Path.reset();
            bezier61Path.moveTo(127.46f, 44.35f);
            bezier61Path.cubicTo(127.46f, 44.36f, 127.46f, 44.37f, 127.47f, 44.38f);
            bezier61Path.cubicTo(127.4f, 44.13f, 127.41f, 44.18f, 127.46f, 44.35f);
            bezier61Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier61Path, paint);
            
            // Bezier 62
            RectF bezier62Rect = CacheForLogo.bezier62Rect;
            bezier62Rect.set(124.49f, 37.83f, 124.64f, 38.39f);
            Path bezier62Path = CacheForLogo.bezier62Path;
            bezier62Path.reset();
            bezier62Path.moveTo(124.63f, 38.25f);
            bezier62Path.cubicTo(124.67f, 38.16f, 124.58f, 37.74f, 124.53f, 37.85f);
            bezier62Path.cubicTo(124.5f, 37.92f, 124.41f, 38.69f, 124.63f, 38.25f);
            bezier62Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier62Path, paint);
            
            // Bezier 63
            RectF bezier63Rect = CacheForLogo.bezier63Rect;
            bezier63Rect.set(120.55f, 40.36f, 121.01f, 40.91f);
            Path bezier63Path = CacheForLogo.bezier63Path;
            bezier63Path.reset();
            bezier63Path.moveTo(120.83f, 40.59f);
            bezier63Path.cubicTo(120.69f, 40.62f, 120.59f, 40.72f, 120.55f, 40.87f);
            bezier63Path.cubicTo(120.63f, 40.69f, 120.69f, 41.32f, 121.01f, 40.4f);
            bezier63Path.cubicTo(120.9f, 40.28f, 120.91f, 40.44f, 120.83f, 40.59f);
            bezier63Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier63Path, paint);
            
            // Bezier 64
            RectF bezier64Rect = CacheForLogo.bezier64Rect;
            bezier64Rect.set(135.39f, 14.83f, 136.36f, 15.02f);
            Path bezier64Path = CacheForLogo.bezier64Path;
            bezier64Path.reset();
            bezier64Path.moveTo(135.63f, 14.94f);
            bezier64Path.cubicTo(135.6f, 14.94f, 135.46f, 14.97f, 135.39f, 15.01f);
            bezier64Path.cubicTo(135.41f, 15.01f, 136.63f, 15.05f, 136.31f, 14.87f);
            bezier64Path.cubicTo(136.08f, 14.8f, 135.85f, 14.83f, 135.63f, 14.94f);
            bezier64Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier64Path, paint);
            
            // Bezier 65
            RectF bezier65Rect = CacheForLogo.bezier65Rect;
            bezier65Rect.set(170.96f, 25.4f, 171.7f, 26.33f);
            Path bezier65Path = CacheForLogo.bezier65Path;
            bezier65Path.reset();
            bezier65Path.moveTo(171.18f, 25.78f);
            bezier65Path.cubicTo(171.36f, 27.3f, 172.37f, 25.2f, 170.96f, 25.42f);
            bezier65Path.cubicTo(170.99f, 25.55f, 171.17f, 25.65f, 171.18f, 25.78f);
            bezier65Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier65Path, paint);
            
            // Bezier 66
            RectF bezier66Rect = CacheForLogo.bezier66Rect;
            bezier66Rect.set(161.33f, 17.61f, 163.43f, 19.25f);
            Path bezier66Path = CacheForLogo.bezier66Path;
            bezier66Path.reset();
            bezier66Path.moveTo(161.72f, 19.24f);
            bezier66Path.cubicTo(162.6f, 19.3f, 163.15f, 19.05f, 163.17f, 18.25f);
            bezier66Path.cubicTo(163.17f, 18.13f, 163.9f, 17.68f, 162.92f, 17.62f);
            bezier66Path.cubicTo(162.75f, 17.61f, 161.89f, 17.57f, 162.21f, 17.92f);
            bezier66Path.cubicTo(162.09f, 17.99f, 161.53f, 17.92f, 161.52f, 18.12f);
            bezier66Path.cubicTo(161.63f, 18.2f, 161.73f, 18.29f, 161.83f, 18.38f);
            bezier66Path.cubicTo(161.76f, 18.61f, 160.81f, 19.18f, 161.72f, 19.24f);
            bezier66Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier66Path, paint);
            
            // Bezier 67
            RectF bezier67Rect = CacheForLogo.bezier67Rect;
            bezier67Rect.set(170.98f, 24.33f, 171.47f, 25.13f);
            Path bezier67Path = CacheForLogo.bezier67Path;
            bezier67Path.reset();
            bezier67Path.moveTo(171.38f, 25.13f);
            bezier67Path.cubicTo(171.43f, 25.04f, 171.44f, 24.69f, 171.47f, 24.51f);
            bezier67Path.cubicTo(171.42f, 24.49f, 171.39f, 24.41f, 171.38f, 24.33f);
            bezier67Path.cubicTo(171.26f, 24.42f, 171.12f, 24.47f, 170.98f, 24.48f);
            bezier67Path.cubicTo(171.08f, 24.61f, 171.19f, 25.08f, 171.38f, 25.13f);
            bezier67Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier67Path, paint);
            
            // Bezier 68
            RectF bezier68Rect = CacheForLogo.bezier68Rect;
            bezier68Rect.set(179.76f, 29.38f, 180.97f, 29.67f);
            Path bezier68Path = CacheForLogo.bezier68Path;
            bezier68Path.reset();
            bezier68Path.moveTo(180.97f, 29.62f);
            bezier68Path.cubicTo(180.63f, 29.5f, 180.16f, 29.36f, 179.76f, 29.39f);
            bezier68Path.cubicTo(180.01f, 29.53f, 180.66f, 29.76f, 180.97f, 29.62f);
            bezier68Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier68Path, paint);
            
            // Bezier 69
            RectF bezier69Rect = CacheForLogo.bezier69Rect;
            bezier69Rect.set(167.99f, 25.69f, 168.39f, 25.98f);
            Path bezier69Path = CacheForLogo.bezier69Path;
            bezier69Path.reset();
            bezier69Path.moveTo(167.99f, 25.8f);
            bezier69Path.cubicTo(168f, 25.81f, 168.41f, 26.12f, 168.39f, 25.9f);
            bezier69Path.cubicTo(168.34f, 25.66f, 168.2f, 25.63f, 167.99f, 25.8f);
            bezier69Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier69Path, paint);
            
            // Bezier 70
            RectF bezier70Rect = CacheForLogo.bezier70Rect;
            bezier70Rect.set(163.88f, 18.11f, 164.09f, 18.25f);
            Path bezier70Path = CacheForLogo.bezier70Path;
            bezier70Path.reset();
            bezier70Path.moveTo(164f, 18.11f);
            bezier70Path.cubicTo(163.9f, 18.14f, 163.88f, 18.18f, 163.88f, 18.23f);
            bezier70Path.cubicTo(163.98f, 18.24f, 164.04f, 18.25f, 164.07f, 18.25f);
            bezier70Path.cubicTo(164.07f, 18.19f, 164.09f, 18.15f, 164.09f, 18.11f);
            bezier70Path.cubicTo(164.07f, 18.11f, 164.02f, 18.11f, 164f, 18.11f);
            bezier70Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier70Path, paint);
            
            // Bezier 71
            RectF bezier71Rect = CacheForLogo.bezier71Rect;
            bezier71Rect.set(162.85f, 16.37f, 163.27f, 16.57f);
            Path bezier71Path = CacheForLogo.bezier71Path;
            bezier71Path.reset();
            bezier71Path.moveTo(162.95f, 16.57f);
            bezier71Path.cubicTo(163.13f, 16.58f, 163.26f, 16.48f, 163.27f, 16.37f);
            bezier71Path.cubicTo(163.23f, 16.37f, 162.61f, 16.55f, 162.95f, 16.57f);
            bezier71Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier71Path, paint);
            
            // Bezier 72
            RectF bezier72Rect = CacheForLogo.bezier72Rect;
            bezier72Rect.set(163.09f, 16.23f, 166.92f, 20.07f);
            Path bezier72Path = CacheForLogo.bezier72Path;
            bezier72Path.reset();
            bezier72Path.moveTo(163.09f, 16.68f);
            bezier72Path.cubicTo(163.08f, 16.8f, 163.21f, 16.84f, 163.46f, 16.89f);
            bezier72Path.cubicTo(163.44f, 17.2f, 163.51f, 17.12f, 163.51f, 17.51f);
            bezier72Path.cubicTo(163.55f, 17.52f, 163.6f, 17.52f, 163.64f, 17.52f);
            bezier72Path.cubicTo(163.61f, 17.48f, 163.56f, 17.44f, 163.64f, 17.36f);
            bezier72Path.cubicTo(164.21f, 17.65f, 163.76f, 17.47f, 163.75f, 17.85f);
            bezier72Path.cubicTo(163.75f, 18.02f, 164.46f, 17.94f, 164.56f, 17.95f);
            bezier72Path.cubicTo(164.36f, 18.2f, 164.58f, 18.25f, 164.85f, 18.25f);
            bezier72Path.cubicTo(164.85f, 18.6f, 164.36f, 18.6f, 164.09f, 18.58f);
            bezier72Path.cubicTo(164.09f, 18.99f, 163.74f, 19.04f, 163.74f, 19.26f);
            bezier72Path.cubicTo(163.74f, 19.32f, 164.67f, 19.49f, 164.8f, 19.36f);
            bezier72Path.cubicTo(164.81f, 19.56f, 163.84f, 19.72f, 163.64f, 20.07f);
            bezier72Path.cubicTo(163.98f, 20.09f, 166.92f, 19.82f, 166.92f, 19.69f);
            bezier72Path.cubicTo(166.8f, 19.66f, 166.68f, 19.63f, 166.57f, 19.61f);
            bezier72Path.cubicTo(166.97f, 19.15f, 166.97f, 18.72f, 166.58f, 18.9f);
            bezier72Path.cubicTo(166.52f, 18.92f, 166.5f, 18.95f, 166.38f, 18.97f);
            bezier72Path.cubicTo(166.35f, 18.31f, 165.34f, 17.63f, 164.67f, 17.46f);
            bezier72Path.cubicTo(164.74f, 17.3f, 165.31f, 17.07f, 165.25f, 16.8f);
            bezier72Path.cubicTo(164.74f, 17.03f, 164.4f, 16.98f, 164.23f, 16.66f);
            bezier72Path.cubicTo(164.38f, 16.59f, 164.51f, 16.52f, 164.64f, 16.44f);
            bezier72Path.cubicTo(164.66f, 15.88f, 163.23f, 16.62f, 163.53f, 16.73f);
            bezier72Path.cubicTo(163.53f, 16.79f, 163.13f, 16.68f, 163.09f, 16.68f);
            bezier72Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier72Path, paint);
            
            // Bezier 73
            RectF bezier73Rect = CacheForLogo.bezier73Rect;
            bezier73Rect.set(132.89f, 14.99f, 133.35f, 15.12f);
            Path bezier73Path = CacheForLogo.bezier73Path;
            bezier73Path.reset();
            bezier73Path.moveTo(133.08f, 15.11f);
            bezier73Path.cubicTo(133.22f, 15.14f, 133.31f, 15.1f, 133.35f, 14.99f);
            bezier73Path.cubicTo(133.18f, 15.02f, 133.04f, 15.04f, 132.89f, 15.12f);
            bezier73Path.cubicTo(132.97f, 15.11f, 132.98f, 15.12f, 133.08f, 15.11f);
            bezier73Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier73Path, paint);
            
            // Bezier 74
            RectF bezier74Rect = CacheForLogo.bezier74Rect;
            bezier74Rect.set(173.35f, 27.2f, 174.81f, 28.09f);
            Path bezier74Path = CacheForLogo.bezier74Path;
            bezier74Path.reset();
            bezier74Path.moveTo(173.35f, 27.22f);
            bezier74Path.cubicTo(173.38f, 27.44f, 174.5f, 28.06f, 174.75f, 28.09f);
            bezier74Path.cubicTo(174.77f, 28.09f, 174.78f, 27.46f, 174.81f, 27.3f);
            bezier74Path.cubicTo(174.58f, 27.24f, 173.55f, 27.15f, 173.35f, 27.22f);
            bezier74Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier74Path, paint);
            
            // Bezier 75
            RectF bezier75Rect = CacheForLogo.bezier75Rect;
            bezier75Rect.set(167.84f, 12.94f, 167.86f, 12.95f);
            Path bezier75Path = CacheForLogo.bezier75Path;
            bezier75Path.reset();
            bezier75Path.moveTo(167.86f, 12.95f);
            bezier75Path.cubicTo(167.86f, 12.95f, 167.86f, 12.94f, 167.86f, 12.94f);
            bezier75Path.cubicTo(167.85f, 12.94f, 167.85f, 12.94f, 167.84f, 12.94f);
            bezier75Path.cubicTo(167.85f, 12.94f, 167.85f, 12.95f, 167.86f, 12.95f);
            bezier75Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier75Path, paint);
            
            // Bezier 76
            RectF bezier76Rect = CacheForLogo.bezier76Rect;
            bezier76Rect.set(175.98f, 17.06f, 176.48f, 17.44f);
            Path bezier76Path = CacheForLogo.bezier76Path;
            bezier76Path.reset();
            bezier76Path.moveTo(176.18f, 17.44f);
            bezier76Path.cubicTo(176.38f, 17.46f, 176.48f, 17.28f, 176.48f, 17.13f);
            bezier76Path.cubicTo(176.37f, 17.09f, 175.95f, 16.96f, 176.31f, 17.23f);
            bezier76Path.cubicTo(176.19f, 17.23f, 176.11f, 17.28f, 175.98f, 17.28f);
            bezier76Path.cubicTo(176f, 17.34f, 176.04f, 17.43f, 176.18f, 17.44f);
            bezier76Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier76Path, paint);
            
            // Bezier 77
            RectF bezier77Rect = CacheForLogo.bezier77Rect;
            bezier77Rect.set(167.81f, 12.94f, 168.13f, 13.09f);
            Path bezier77Path = CacheForLogo.bezier77Path;
            bezier77Path.reset();
            bezier77Path.moveTo(167.84f, 12.94f);
            bezier77Path.cubicTo(167.72f, 12.97f, 167.96f, 13.06f, 168.13f, 13.09f);
            bezier77Path.cubicTo(168.07f, 13.02f, 167.95f, 13f, 167.84f, 12.94f);
            bezier77Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier77Path, paint);
            
            // Bezier 78
            RectF bezier78Rect = CacheForLogo.bezier78Rect;
            bezier78Rect.set(167.83f, 12.67f, 172.67f, 13.5f);
            Path bezier78Path = CacheForLogo.bezier78Path;
            bezier78Path.reset();
            bezier78Path.moveTo(168.37f, 13.04f);
            bezier78Path.cubicTo(168.34f, 13.04f, 168.32f, 13.04f, 168.3f, 13.04f);
            bezier78Path.cubicTo(168.42f, 13.14f, 168.94f, 13.09f, 169.22f, 13.08f);
            bezier78Path.cubicTo(168.99f, 13.11f, 168.59f, 13.18f, 168.59f, 13.17f);
            bezier78Path.cubicTo(168.6f, 13.27f, 169.3f, 13.25f, 169.39f, 13.27f);
            bezier78Path.cubicTo(169.16f, 13.28f, 168.95f, 13.26f, 168.72f, 13.26f);
            bezier78Path.cubicTo(168.76f, 13.77f, 170.15f, 13.27f, 170.62f, 13.17f);
            bezier78Path.cubicTo(170.67f, 13.21f, 170.76f, 13.27f, 170.83f, 13.28f);
            bezier78Path.cubicTo(170.82f, 13.34f, 170.69f, 13.31f, 170.68f, 13.39f);
            bezier78Path.cubicTo(170.83f, 13.4f, 171.07f, 13.41f, 171.21f, 13.42f);
            bezier78Path.cubicTo(171.18f, 13.44f, 171.19f, 13.47f, 171.22f, 13.5f);
            bezier78Path.cubicTo(171.5f, 13.48f, 171.62f, 13.42f, 171.94f, 13.4f);
            bezier78Path.cubicTo(171.61f, 13.23f, 171.19f, 13.18f, 170.86f, 13.14f);
            bezier78Path.cubicTo(170.89f, 13.14f, 170.94f, 13.14f, 170.97f, 13.14f);
            bezier78Path.cubicTo(170.89f, 13.1f, 170.8f, 13.07f, 170.7f, 13.04f);
            bezier78Path.cubicTo(171.33f, 13.11f, 172.44f, 12.92f, 172.67f, 12.88f);
            bezier78Path.cubicTo(172.02f, 12.55f, 170.9f, 12.71f, 170.19f, 12.7f);
            bezier78Path.cubicTo(170.21f, 12.71f, 170.23f, 12.72f, 170.24f, 12.73f);
            bezier78Path.cubicTo(170.19f, 12.73f, 170.13f, 12.73f, 170.07f, 12.73f);
            bezier78Path.cubicTo(170.07f, 12.73f, 170.07f, 12.74f, 170.07f, 12.74f);
            bezier78Path.cubicTo(169.95f, 12.73f, 169.84f, 12.72f, 169.72f, 12.72f);
            bezier78Path.cubicTo(169.79f, 12.86f, 170.16f, 12.84f, 170.24f, 12.84f);
            bezier78Path.cubicTo(170.27f, 12.84f, 170.71f, 12.86f, 170.75f, 12.87f);
            bezier78Path.cubicTo(170.59f, 12.88f, 170.43f, 12.88f, 170.27f, 12.87f);
            bezier78Path.cubicTo(170.29f, 12.91f, 170.33f, 12.93f, 170.37f, 12.96f);
            bezier78Path.cubicTo(170.11f, 12.9f, 169.85f, 12.87f, 169.66f, 12.9f);
            bezier78Path.cubicTo(169.66f, 12.88f, 169.69f, 12.86f, 169.68f, 12.84f);
            bezier78Path.cubicTo(169.68f, 12.82f, 168.81f, 12.59f, 169.23f, 12.95f);
            bezier78Path.cubicTo(169.16f, 12.93f, 168.51f, 12.84f, 168.71f, 12.89f);
            bezier78Path.cubicTo(168.64f, 12.86f, 168.55f, 12.86f, 168.46f, 12.83f);
            bezier78Path.cubicTo(168.49f, 12.82f, 168.52f, 12.81f, 168.56f, 12.8f);
            bezier78Path.cubicTo(168.32f, 12.75f, 168.07f, 12.76f, 167.83f, 12.83f);
            bezier78Path.cubicTo(167.92f, 12.88f, 168.01f, 12.91f, 168.11f, 12.92f);
            bezier78Path.cubicTo(168.08f, 12.97f, 168.21f, 13f, 168.37f, 13.04f);
            bezier78Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier78Path, paint);
            
            // Bezier 79
            RectF bezier79Rect = CacheForLogo.bezier79Rect;
            bezier79Rect.set(171.13f, 17.72f, 171.16f, 17.8f);
            Path bezier79Path = CacheForLogo.bezier79Path;
            bezier79Path.reset();
            bezier79Path.moveTo(171.13f, 17.72f);
            bezier79Path.cubicTo(171.14f, 17.75f, 171.16f, 17.77f, 171.16f, 17.8f);
            bezier79Path.cubicTo(171.15f, 17.75f, 171.14f, 17.73f, 171.13f, 17.72f);
            bezier79Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier79Path, paint);
            
            // Bezier 80
            RectF bezier80Rect = CacheForLogo.bezier80Rect;
            bezier80Rect.set(174.41f, 17.37f, 174.75f, 17.72f);
            Path bezier80Path = CacheForLogo.bezier80Path;
            bezier80Path.reset();
            bezier80Path.moveTo(174.47f, 17.72f);
            bezier80Path.cubicTo(174.56f, 17.6f, 174.66f, 17.48f, 174.75f, 17.37f);
            bezier80Path.cubicTo(174.65f, 17.36f, 174.25f, 17.55f, 174.47f, 17.72f);
            bezier80Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier80Path, paint);
            
            // Bezier 81
            RectF bezier81Rect = CacheForLogo.bezier81Rect;
            bezier81Rect.set(161.65f, 13.14f, 197.09f, 45.13f);
            Path bezier81Path = CacheForLogo.bezier81Path;
            bezier81Path.reset();
            bezier81Path.moveTo(181.32f, 23.79f);
            bezier81Path.cubicTo(182.32f, 23.65f, 182.08f, 23.35f, 183.06f, 24.22f);
            bezier81Path.cubicTo(183.45f, 24.58f, 184.3f, 25f, 184.74f, 24.35f);
            bezier81Path.cubicTo(184.51f, 24.32f, 183.96f, 24.25f, 183.88f, 23.97f);
            bezier81Path.cubicTo(183.84f, 23.84f, 184.95f, 23.6f, 185.3f, 23.53f);
            bezier81Path.cubicTo(185.07f, 23.64f, 185.73f, 24.28f, 184.87f, 24.38f);
            bezier81Path.cubicTo(185.63f, 25.42f, 187.44f, 25.33f, 187.89f, 26.65f);
            bezier81Path.cubicTo(187.4f, 26.63f, 187.31f, 27.01f, 186.84f, 26.95f);
            bezier81Path.cubicTo(185.75f, 26.82f, 184.87f, 26.17f, 183.84f, 26.05f);
            bezier81Path.cubicTo(182.99f, 25.96f, 182.37f, 26.4f, 181.53f, 26.26f);
            bezier81Path.cubicTo(181.54f, 26.25f, 181.56f, 26.26f, 181.57f, 26.25f);
            bezier81Path.cubicTo(180.66f, 25.24f, 181.29f, 25.44f, 181.04f, 24.44f);
            bezier81Path.cubicTo(181.14f, 24.14f, 181.44f, 24.03f, 181.32f, 23.79f);
            bezier81Path.close();
            bezier81Path.moveTo(190.68f, 28.44f);
            bezier81Path.cubicTo(190.63f, 28.46f, 190.58f, 28.46f, 190.49f, 28.45f);
            bezier81Path.cubicTo(189.48f, 28.33f, 188.96f, 26.85f, 188.05f, 26.68f);
            bezier81Path.cubicTo(188.99f, 26.47f, 189.78f, 28.2f, 190.68f, 28.44f);
            bezier81Path.close();
            bezier81Path.moveTo(165.47f, 20.38f);
            bezier81Path.cubicTo(165.48f, 20.56f, 165.57f, 20.69f, 165.58f, 20.85f);
            bezier81Path.cubicTo(165.41f, 20.87f, 164.01f, 20.59f, 164.01f, 20.91f);
            bezier81Path.cubicTo(164.01f, 21.36f, 166.41f, 21.62f, 165.88f, 22.49f);
            bezier81Path.cubicTo(165.89f, 22.49f, 165.91f, 22.48f, 165.92f, 22.47f);
            bezier81Path.cubicTo(165.98f, 23.68f, 165.64f, 23.37f, 164.77f, 23.48f);
            bezier81Path.cubicTo(163.98f, 23.42f, 163.22f, 23.21f, 162.45f, 23.15f);
            bezier81Path.cubicTo(161.54f, 23.09f, 161.9f, 23.68f, 161.9f, 24.12f);
            bezier81Path.cubicTo(161.9f, 24.44f, 161.29f, 26.78f, 161.99f, 26.83f);
            bezier81Path.cubicTo(162.68f, 26.88f, 162.94f, 26.63f, 163.37f, 27.29f);
            bezier81Path.cubicTo(163.71f, 27.82f, 164.77f, 27.01f, 165.34f, 27.23f);
            bezier81Path.cubicTo(165.83f, 27.04f, 166.36f, 26.65f, 166.7f, 26.16f);
            bezier81Path.cubicTo(165.57f, 25.67f, 168.17f, 24.56f, 168.2f, 24.46f);
            bezier81Path.cubicTo(167.7f, 23.2f, 169.58f, 24.2f, 170.15f, 23.91f);
            bezier81Path.cubicTo(171.3f, 23.32f, 171.46f, 23.66f, 172.34f, 24.57f);
            bezier81Path.cubicTo(172.17f, 24.22f, 176.15f, 27.32f, 174.91f, 27.2f);
            bezier81Path.cubicTo(174.99f, 27.73f, 175.66f, 26.7f, 175.67f, 26.8f);
            bezier81Path.cubicTo(175.53f, 25.94f, 175.08f, 26.04f, 176.26f, 26.36f);
            bezier81Path.cubicTo(176.24f, 25.63f, 174.99f, 25.79f, 174.87f, 25.14f);
            bezier81Path.cubicTo(174.05f, 25.06f, 172.75f, 23.96f, 172.64f, 23.16f);
            bezier81Path.cubicTo(172.57f, 22.65f, 175.07f, 24.38f, 175.28f, 24.4f);
            bezier81Path.cubicTo(175.38f, 24.97f, 176.59f, 25.1f, 176.75f, 25.97f);
            bezier81Path.cubicTo(176.84f, 26.48f, 177.87f, 27.49f, 178.35f, 27.54f);
            bezier81Path.cubicTo(178.09f, 28.08f, 178.47f, 28.38f, 179.1f, 28.45f);
            bezier81Path.cubicTo(178.99f, 28.4f, 178.84f, 27.7f, 178.82f, 27.59f);
            bezier81Path.cubicTo(179.08f, 27.82f, 179.37f, 28f, 179.69f, 27.84f);
            bezier81Path.cubicTo(179.16f, 27.39f, 178.9f, 26.96f, 178.44f, 26.52f);
            bezier81Path.cubicTo(178.36f, 26.12f, 179.13f, 26.65f, 179.14f, 26.65f);
            bezier81Path.cubicTo(179.14f, 26.52f, 179.12f, 26.42f, 179.06f, 26.28f);
            bezier81Path.cubicTo(179.51f, 26.2f, 179.58f, 26f, 180.05f, 26.34f);
            bezier81Path.cubicTo(180.67f, 26.78f, 180.59f, 26.2f, 181.15f, 26.28f);
            bezier81Path.cubicTo(181.15f, 26.36f, 181.32f, 26.46f, 181.35f, 26.52f);
            bezier81Path.cubicTo(181.1f, 26.61f, 179.68f, 26.37f, 179.8f, 26.91f);
            bezier81Path.cubicTo(179.88f, 27.29f, 180.48f, 27.04f, 179.88f, 27.66f);
            bezier81Path.cubicTo(180.43f, 27.94f, 180.74f, 28.25f, 181.2f, 28.65f);
            bezier81Path.cubicTo(181.19f, 28.69f, 181.12f, 28.73f, 181.07f, 28.74f);
            bezier81Path.cubicTo(182.63f, 28.9f, 183.91f, 29.53f, 185.45f, 29.11f);
            bezier81Path.cubicTo(185.64f, 29.83f, 185.48f, 30.38f, 185.43f, 31.1f);
            bezier81Path.cubicTo(185.42f, 31.31f, 185.49f, 32.02f, 185.31f, 32.16f);
            bezier81Path.cubicTo(185.24f, 32.2f, 185.95f, 33.54f, 185.97f, 33.83f);
            bezier81Path.cubicTo(186.05f, 35.72f, 188.88f, 36.76f, 189.27f, 38.48f);
            bezier81Path.cubicTo(189.51f, 39.53f, 190.36f, 40.16f, 190.96f, 40.98f);
            bezier81Path.cubicTo(191.78f, 42.07f, 192.08f, 42.88f, 192.68f, 44.06f);
            bezier81Path.cubicTo(193.81f, 46.27f, 195.29f, 44.46f, 197.09f, 43.96f);
            bezier81Path.cubicTo(196.78f, 41.86f, 196.32f, 39.82f, 195.72f, 37.84f);
            bezier81Path.cubicTo(195.25f, 37.55f, 195.52f, 37.06f, 195.31f, 36.64f);
            bezier81Path.cubicTo(195.13f, 36.67f, 195.24f, 36.94f, 195.04f, 36.98f);
            bezier81Path.cubicTo(194.74f, 36.15f, 193.72f, 35.72f, 193.31f, 34.88f);
            bezier81Path.cubicTo(192.47f, 33.18f, 194.22f, 34.26f, 194.74f, 34.99f);
            bezier81Path.cubicTo(193.82f, 32.58f, 192.7f, 30.24f, 191.26f, 28.15f);
            bezier81Path.cubicTo(191.3f, 28.13f, 191.35f, 28.13f, 191.4f, 28.13f);
            bezier81Path.cubicTo(189.29f, 24.64f, 186.68f, 21.45f, 183.68f, 18.69f);
            bezier81Path.cubicTo(181.72f, 16.88f, 178.53f, 13.59f, 175.87f, 13.37f);
            bezier81Path.cubicTo(175.98f, 12.97f, 174.63f, 13.21f, 175.03f, 13.28f);
            bezier81Path.cubicTo(174.48f, 13.36f, 173.85f, 13.19f, 173.32f, 13.36f);
            bezier81Path.cubicTo(173.39f, 13.39f, 173.37f, 13.38f, 173.45f, 13.41f);
            bezier81Path.cubicTo(173.26f, 13.39f, 173.07f, 13.4f, 172.88f, 13.47f);
            bezier81Path.cubicTo(173.01f, 13.47f, 173.01f, 13.47f, 173.11f, 13.49f);
            bezier81Path.cubicTo(173.08f, 13.49f, 171.97f, 13.39f, 171.93f, 13.54f);
            bezier81Path.cubicTo(171.93f, 13.54f, 172.08f, 13.56f, 172.15f, 13.57f);
            bezier81Path.cubicTo(172.09f, 13.57f, 171.94f, 13.59f, 171.88f, 13.63f);
            bezier81Path.cubicTo(172.23f, 13.64f, 172.35f, 13.58f, 172.69f, 13.58f);
            bezier81Path.cubicTo(172.61f, 13.84f, 170.11f, 14.85f, 169.8f, 14.87f);
            bezier81Path.cubicTo(169.94f, 14.89f, 170f, 14.91f, 170.17f, 14.95f);
            bezier81Path.cubicTo(169.68f, 14.89f, 167.53f, 15.3f, 168.65f, 16.08f);
            bezier81Path.cubicTo(168.56f, 16.13f, 168.48f, 16.2f, 168.42f, 16.29f);
            bezier81Path.cubicTo(168.61f, 16.27f, 168.61f, 16.27f, 168.83f, 16.28f);
            bezier81Path.cubicTo(168.86f, 16.54f, 168.57f, 16.37f, 168.59f, 16.54f);
            bezier81Path.cubicTo(168.64f, 17.12f, 170.24f, 16.7f, 170.42f, 16.59f);
            bezier81Path.cubicTo(170.98f, 16.25f, 171.12f, 16.61f, 171.45f, 17.09f);
            bezier81Path.cubicTo(171.57f, 17.28f, 172.09f, 18.27f, 172.33f, 18.3f);
            bezier81Path.cubicTo(172.62f, 18.32f, 173.91f, 18.01f, 173.89f, 17.59f);
            bezier81Path.cubicTo(172.82f, 17.4f, 174.51f, 16.7f, 174.49f, 16.61f);
            bezier81Path.cubicTo(174.36f, 16.11f, 173.68f, 16.27f, 173.59f, 15.72f);
            bezier81Path.cubicTo(173.51f, 15.19f, 175.22f, 15.34f, 175.1f, 14.99f);
            bezier81Path.cubicTo(175.25f, 14.79f, 176.47f, 14.14f, 176.77f, 14.88f);
            bezier81Path.cubicTo(176.8f, 14.95f, 175.25f, 15.5f, 175.12f, 15.5f);
            bezier81Path.cubicTo(175.27f, 15.69f, 175.23f, 15.91f, 175.55f, 16f);
            bezier81Path.cubicTo(174.99f, 16.7f, 178.74f, 16.6f, 179.04f, 16.92f);
            bezier81Path.cubicTo(178.25f, 17.22f, 177.39f, 16.64f, 176.65f, 17.02f);
            bezier81Path.cubicTo(176.41f, 17.15f, 177.26f, 17.47f, 177.27f, 17.72f);
            bezier81Path.cubicTo(177.26f, 17.43f, 175.33f, 17.86f, 175.49f, 18.92f);
            bezier81Path.cubicTo(175.29f, 18.92f, 175.09f, 18.91f, 174.9f, 18.9f);
            bezier81Path.cubicTo(174.89f, 18.88f, 174.91f, 18.82f, 174.94f, 18.78f);
            bezier81Path.cubicTo(174.45f, 18.6f, 172.48f, 19.3f, 172.57f, 18.69f);
            bezier81Path.cubicTo(172.04f, 18.6f, 171.42f, 18.64f, 170.9f, 18.6f);
            bezier81Path.cubicTo(170.86f, 18.72f, 170.88f, 18.54f, 170.93f, 18.31f);
            bezier81Path.cubicTo(171.05f, 18.35f, 171.23f, 18.28f, 171.26f, 18.46f);
            bezier81Path.cubicTo(171.3f, 18.21f, 171.18f, 18.14f, 170.98f, 18.1f);
            bezier81Path.cubicTo(171.03f, 17.9f, 171.09f, 17.72f, 171.13f, 17.72f);
            bezier81Path.cubicTo(171.06f, 17.59f, 170.9f, 17.49f, 170.86f, 17.19f);
            bezier81Path.cubicTo(169.84f, 17.59f, 169.83f, 17.59f, 170.39f, 18.55f);
            bezier81Path.cubicTo(170.64f, 18.99f, 169.62f, 18.93f, 169.34f, 18.91f);
            bezier81Path.cubicTo(168.39f, 18.83f, 168.49f, 19.68f, 167.7f, 19.85f);
            bezier81Path.cubicTo(166.74f, 20.06f, 166.58f, 20.47f, 165.47f, 20.38f);
            bezier81Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier81Path, paint);
            
            // Bezier 82
            RectF bezier82Rect = CacheForLogo.bezier82Rect;
            bezier82Rect.set(171.4f, 17.88f, 172.08f, 18.57f);
            Path bezier82Path = CacheForLogo.bezier82Path;
            bezier82Path.reset();
            bezier82Path.moveTo(171.51f, 18.47f);
            bezier82Path.cubicTo(171.48f, 18.4f, 171.44f, 18.4f, 171.4f, 18.47f);
            bezier82Path.cubicTo(171.89f, 18.81f, 171.76f, 18.19f, 172.08f, 18.16f);
            bezier82Path.cubicTo(171.7f, 17.51f, 170.98f, 18.19f, 171.72f, 18.34f);
            bezier82Path.cubicTo(171.73f, 18.4f, 171.62f, 18.47f, 171.51f, 18.47f);
            bezier82Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier82Path, paint);
            
            // Bezier 83
            RectF bezier83Rect = CacheForLogo.bezier83Rect;
            bezier83Rect.set(184.29f, 29.77f, 185.27f, 30.25f);
            Path bezier83Path = CacheForLogo.bezier83Path;
            bezier83Path.reset();
            bezier83Path.moveTo(185.27f, 29.77f);
            bezier83Path.cubicTo(184.97f, 29.79f, 184.54f, 29.92f, 184.29f, 30.02f);
            bezier83Path.cubicTo(184.41f, 30.55f, 185.28f, 30.03f, 185.27f, 29.77f);
            bezier83Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier83Path, paint);
            
            // Bezier 84
            RectF bezier84Rect = CacheForLogo.bezier84Rect;
            bezier84Rect.set(134.25f, 14.09f, 135.78f, 14.43f);
            Path bezier84Path = CacheForLogo.bezier84Path;
            bezier84Path.reset();
            bezier84Path.moveTo(134.94f, 14.4f);
            bezier84Path.cubicTo(134.86f, 14.41f, 134.78f, 14.43f, 134.71f, 14.43f);
            bezier84Path.cubicTo(134.84f, 14.42f, 134.95f, 14.42f, 135.04f, 14.4f);
            bezier84Path.cubicTo(135.4f, 14.39f, 135.74f, 14.34f, 135.64f, 14.25f);
            bezier84Path.cubicTo(135.68f, 14.24f, 135.74f, 14.22f, 135.78f, 14.21f);
            bezier84Path.cubicTo(135.56f, 14.01f, 134.7f, 14.11f, 134.42f, 14.13f);
            bezier84Path.cubicTo(134.34f, 14.17f, 134.35f, 14.18f, 134.49f, 14.18f);
            bezier84Path.cubicTo(134.45f, 14.19f, 134.4f, 14.21f, 134.35f, 14.22f);
            bezier84Path.cubicTo(134.39f, 14.23f, 134.48f, 14.21f, 134.69f, 14.2f);
            bezier84Path.cubicTo(134.56f, 14.29f, 134.41f, 14.32f, 134.25f, 14.3f);
            bezier84Path.cubicTo(134.31f, 14.37f, 134.63f, 14.4f, 134.94f, 14.4f);
            bezier84Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier84Path, paint);
            
            // Bezier 85
            RectF bezier85Rect = CacheForLogo.bezier85Rect;
            bezier85Rect.set(133.65f, 14.47f, 133.99f, 14.61f);
            Path bezier85Path = CacheForLogo.bezier85Path;
            bezier85Path.reset();
            bezier85Path.moveTo(133.77f, 14.61f);
            bezier85Path.cubicTo(133.84f, 14.61f, 133.93f, 14.58f, 133.99f, 14.56f);
            bezier85Path.cubicTo(133.83f, 14.54f, 133.95f, 14.46f, 133.69f, 14.47f);
            bezier85Path.cubicTo(133.6f, 14.52f, 133.66f, 14.62f, 133.77f, 14.61f);
            bezier85Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier85Path, paint);
            
            // Bezier 86
            RectF bezier86Rect = CacheForLogo.bezier86Rect;
            bezier86Rect.set(134.2f, 14.67f, 135.53f, 15.04f);
            Path bezier86Path = CacheForLogo.bezier86Path;
            bezier86Path.reset();
            bezier86Path.moveTo(134.77f, 14.88f);
            bezier86Path.cubicTo(134.64f, 14.92f, 134.35f, 14.95f, 134.21f, 15.04f);
            bezier86Path.cubicTo(134.44f, 14.9f, 135.54f, 15.24f, 135.53f, 14.67f);
            bezier86Path.cubicTo(135.53f, 14.68f, 134.65f, 14.67f, 134.57f, 14.69f);
            bezier86Path.cubicTo(134.52f, 14.74f, 134.66f, 14.73f, 134.83f, 14.73f);
            bezier86Path.cubicTo(134.6f, 14.87f, 134.41f, 14.67f, 134.2f, 14.8f);
            bezier86Path.cubicTo(134.2f, 14.82f, 134.23f, 14.83f, 134.27f, 14.85f);
            bezier86Path.cubicTo(134.46f, 14.84f, 134.65f, 14.83f, 134.77f, 14.88f);
            bezier86Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier86Path, paint);
            
            // Bezier 87
            RectF bezier87Rect = CacheForLogo.bezier87Rect;
            bezier87Rect.set(136f, 14.53f, 140.78f, 14.98f);
            Path bezier87Path = CacheForLogo.bezier87Path;
            bezier87Path.reset();
            bezier87Path.moveTo(136.9f, 14.84f);
            bezier87Path.cubicTo(136.21f, 14.96f, 137.52f, 14.98f, 137.71f, 14.98f);
            bezier87Path.cubicTo(138.41f, 14.57f, 139.91f, 15.3f, 140.72f, 14.8f);
            bezier87Path.cubicTo(140.72f, 14.8f, 140.64f, 14.8f, 140.57f, 14.8f);
            bezier87Path.cubicTo(140.64f, 14.77f, 140.71f, 14.75f, 140.78f, 14.75f);
            bezier87Path.cubicTo(140.75f, 14.54f, 137.55f, 14.82f, 137.78f, 14.76f);
            bezier87Path.cubicTo(137.69f, 14.72f, 137.33f, 14.79f, 137.43f, 14.69f);
            bezier87Path.cubicTo(137.58f, 14.68f, 137.72f, 14.68f, 137.86f, 14.67f);
            bezier87Path.cubicTo(137.8f, 14.51f, 136.16f, 14.49f, 136f, 14.59f);
            bezier87Path.cubicTo(136.16f, 14.66f, 136.34f, 14.7f, 136.52f, 14.7f);
            bezier87Path.cubicTo(136.73f, 14.57f, 136.86f, 14.62f, 136.9f, 14.84f);
            bezier87Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier87Path, paint);
            
            // Bezier 88
            RectF bezier88Rect = CacheForLogo.bezier88Rect;
            bezier88Rect.set(132.31f, 16.44f, 133.39f, 16.69f);
            Path bezier88Path = CacheForLogo.bezier88Path;
            bezier88Path.reset();
            bezier88Path.moveTo(133.37f, 16.66f);
            bezier88Path.cubicTo(133.59f, 16.17f, 132.24f, 16.65f, 132.51f, 16.6f);
            bezier88Path.cubicTo(131.8f, 16.71f, 133.17f, 16.71f, 133.37f, 16.66f);
            bezier88Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier88Path, paint);
            
            // Bezier 89
            RectF bezier89Rect = CacheForLogo.bezier89Rect;
            bezier89Rect.set(132.72f, 15.38f, 134.63f, 15.99f);
            Path bezier89Path = CacheForLogo.bezier89Path;
            bezier89Path.reset();
            bezier89Path.moveTo(132.72f, 15.71f);
            bezier89Path.cubicTo(133.1f, 16.23f, 134.1f, 15.89f, 134.5f, 15.65f);
            bezier89Path.cubicTo(134.44f, 15.64f, 134.32f, 15.64f, 134.28f, 15.63f);
            bezier89Path.cubicTo(134.56f, 15.44f, 134.18f, 15.56f, 134.03f, 15.57f);
            bezier89Path.cubicTo(134.24f, 15.53f, 134.44f, 15.47f, 134.63f, 15.38f);
            bezier89Path.cubicTo(134.56f, 15.43f, 132.77f, 15.51f, 133.57f, 15.53f);
            bezier89Path.cubicTo(133.27f, 15.73f, 133f, 15.53f, 132.72f, 15.71f);
            bezier89Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier89Path, paint);
            
            // Bezier 90
            RectF bezier90Rect = CacheForLogo.bezier90Rect;
            bezier90Rect.set(136.46f, 14.33f, 137.34f, 14.42f);
            Path bezier90Path = CacheForLogo.bezier90Path;
            bezier90Path.reset();
            bezier90Path.moveTo(137.04f, 14.42f);
            bezier90Path.cubicTo(137.16f, 14.42f, 137.25f, 14.4f, 137.34f, 14.33f);
            bezier90Path.cubicTo(137.05f, 14.36f, 136.75f, 14.33f, 136.46f, 14.41f);
            bezier90Path.cubicTo(136.46f, 14.41f, 136.99f, 14.42f, 137.04f, 14.42f);
            bezier90Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier90Path, paint);
            
            // Bezier 91
            RectF bezier91Rect = CacheForLogo.bezier91Rect;
            bezier91Rect.set(134.25f, 14.85f, 134.29f, 14.86f);
            Path bezier91Path = CacheForLogo.bezier91Path;
            bezier91Path.reset();
            bezier91Path.moveTo(134.27f, 14.85f);
            bezier91Path.cubicTo(134.27f, 14.85f, 134.26f, 14.85f, 134.25f, 14.85f);
            bezier91Path.cubicTo(134.27f, 14.86f, 134.28f, 14.86f, 134.29f, 14.86f);
            bezier91Path.cubicTo(134.28f, 14.86f, 134.28f, 14.85f, 134.27f, 14.85f);
            bezier91Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier91Path, paint);
            
            // Bezier 92
            RectF bezier92Rect = CacheForLogo.bezier92Rect;
            bezier92Rect.set(133.53f, 14.72f, 134.25f, 14.91f);
            Path bezier92Path = CacheForLogo.bezier92Path;
            bezier92Path.reset();
            bezier92Path.moveTo(133.71f, 14.87f);
            bezier92Path.cubicTo(133.69f, 14.88f, 133.68f, 14.9f, 133.67f, 14.91f);
            bezier92Path.cubicTo(133.82f, 14.9f, 134.04f, 14.87f, 134.25f, 14.85f);
            bezier92Path.cubicTo(134.13f, 14.82f, 133.65f, 14.64f, 133.65f, 14.77f);
            bezier92Path.cubicTo(133.65f, 14.77f, 133.65f, 14.77f, 133.65f, 14.77f);
            bezier92Path.lineTo(133.53f, 14.84f);
            bezier92Path.cubicTo(133.56f, 14.86f, 133.59f, 14.89f, 133.71f, 14.87f);
            bezier92Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier92Path, paint);
            
            // Bezier 93
            RectF bezier93Rect = CacheForLogo.bezier93Rect;
            bezier93Rect.set(136.43f, 13.89f, 136.8f, 13.96f);
            Path bezier93Path = CacheForLogo.bezier93Path;
            bezier93Path.reset();
            bezier93Path.moveTo(136.68f, 13.96f);
            bezier93Path.cubicTo(136.72f, 13.93f, 136.76f, 13.91f, 136.8f, 13.89f);
            bezier93Path.cubicTo(136.73f, 13.89f, 136.59f, 13.89f, 136.45f, 13.9f);
            bezier93Path.cubicTo(136.31f, 13.98f, 136.85f, 13.95f, 136.68f, 13.96f);
            bezier93Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier93Path, paint);
            
            // Bezier 94
            RectF bezier94Rect = CacheForLogo.bezier94Rect;
            bezier94Rect.set(137.91f, 14.15f, 138.09f, 14.18f);
            Path bezier94Path = CacheForLogo.bezier94Path;
            bezier94Path.reset();
            bezier94Path.moveTo(138.09f, 14.15f);
            bezier94Path.cubicTo(138.04f, 14.16f, 137.99f, 14.16f, 137.95f, 14.16f);
            bezier94Path.cubicTo(137.94f, 14.17f, 137.92f, 14.17f, 137.91f, 14.18f);
            bezier94Path.cubicTo(137.99f, 14.17f, 138.04f, 14.16f, 138.09f, 14.15f);
            bezier94Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier94Path, paint);
            
            // Bezier 95
            RectF bezier95Rect = CacheForLogo.bezier95Rect;
            bezier95Rect.set(137.59f, 13.94f, 137.82f, 13.97f);
            Path bezier95Path = CacheForLogo.bezier95Path;
            bezier95Path.reset();
            bezier95Path.moveTo(137.82f, 13.94f);
            bezier95Path.cubicTo(137.71f, 13.94f, 137.63f, 13.95f, 137.59f, 13.97f);
            bezier95Path.cubicTo(137.68f, 13.96f, 137.75f, 13.95f, 137.82f, 13.94f);
            bezier95Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier95Path, paint);
            
            // Bezier 96
            RectF bezier96Rect = CacheForLogo.bezier96Rect;
            bezier96Rect.set(136.23f, 14.1f, 136.99f, 14.32f);
            Path bezier96Path = CacheForLogo.bezier96Path;
            bezier96Path.reset();
            bezier96Path.moveTo(136.95f, 14.29f);
            bezier96Path.cubicTo(137.2f, 14f, 136.13f, 14.07f, 136.4f, 14.29f);
            bezier96Path.cubicTo(135.88f, 14.35f, 136.71f, 14.3f, 136.95f, 14.29f);
            bezier96Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier96Path, paint);
            
            // Bezier 97
            RectF bezier97Rect = CacheForLogo.bezier97Rect;
            bezier97Rect.set(137.46f, 12.75f, 146.57f, 14.54f);
            Path bezier97Path = CacheForLogo.bezier97Path;
            bezier97Path.reset();
            bezier97Path.moveTo(142.29f, 13.37f);
            bezier97Path.cubicTo(142.42f, 13.36f, 142.51f, 13.35f, 142.53f, 13.34f);
            bezier97Path.cubicTo(142.48f, 13.36f, 142.39f, 13.37f, 142.29f, 13.37f);
            bezier97Path.close();
            bezier97Path.moveTo(140.91f, 13.5f);
            bezier97Path.cubicTo(141.1f, 13.49f, 141.31f, 13.48f, 141.51f, 13.46f);
            bezier97Path.cubicTo(141.48f, 13.47f, 141.46f, 13.48f, 141.44f, 13.49f);
            bezier97Path.cubicTo(141.42f, 13.5f, 141.62f, 13.56f, 141.65f, 13.57f);
            bezier97Path.cubicTo(141.4f, 13.59f, 141.16f, 13.52f, 140.91f, 13.5f);
            bezier97Path.close();
            bezier97Path.moveTo(137.9f, 13.92f);
            bezier97Path.cubicTo(137.87f, 13.93f, 137.85f, 13.93f, 137.82f, 13.94f);
            bezier97Path.cubicTo(138.1f, 13.93f, 138.54f, 13.98f, 138.67f, 13.98f);
            bezier97Path.cubicTo(138.37f, 13.99f, 138.07f, 14.02f, 137.77f, 14.08f);
            bezier97Path.cubicTo(137.82f, 14.14f, 137.88f, 14.16f, 137.95f, 14.16f);
            bezier97Path.cubicTo(138.15f, 14.08f, 138.9f, 14.15f, 139.15f, 14.14f);
            bezier97Path.cubicTo(139.16f, 14.11f, 139.13f, 14.1f, 139.12f, 14.07f);
            bezier97Path.cubicTo(139.4f, 14.01f, 139.88f, 13.97f, 140.15f, 14.18f);
            bezier97Path.cubicTo(139.98f, 14.19f, 138.71f, 14.05f, 139.26f, 14.3f);
            bezier97Path.cubicTo(139.06f, 14.31f, 138.85f, 14.34f, 138.65f, 14.4f);
            bezier97Path.cubicTo(139.66f, 14.3f, 141.26f, 14.88f, 141.95f, 14.22f);
            bezier97Path.cubicTo(141.98f, 14.18f, 141.69f, 14.2f, 141.58f, 14.21f);
            bezier97Path.cubicTo(141.75f, 14.06f, 142.12f, 14.13f, 142.2f, 13.94f);
            bezier97Path.cubicTo(142.61f, 13.91f, 142.83f, 13.81f, 143.24f, 13.72f);
            bezier97Path.cubicTo(143.24f, 13.68f, 143.15f, 13.67f, 143.07f, 13.66f);
            bezier97Path.cubicTo(143.23f, 13.66f, 143.33f, 13.66f, 143.38f, 13.59f);
            bezier97Path.cubicTo(143.3f, 13.59f, 143.22f, 13.6f, 143.14f, 13.6f);
            bezier97Path.cubicTo(144.04f, 13.37f, 145.01f, 13.39f, 145.92f, 13.14f);
            bezier97Path.cubicTo(145.75f, 13.14f, 145.46f, 13.17f, 145.41f, 13.15f);
            bezier97Path.cubicTo(145.5f, 13.13f, 146.51f, 13.13f, 146.57f, 13.02f);
            bezier97Path.cubicTo(146.64f, 12.87f, 144.94f, 13.13f, 145.58f, 12.96f);
            bezier97Path.cubicTo(144.34f, 12.52f, 140.81f, 12.83f, 139.57f, 13.29f);
            bezier97Path.cubicTo(139.8f, 13.29f, 140.02f, 13.26f, 140.25f, 13.26f);
            bezier97Path.cubicTo(140.12f, 13.27f, 140.04f, 13.28f, 139.89f, 13.31f);
            bezier97Path.cubicTo(140.16f, 13.36f, 140.41f, 13.26f, 140.67f, 13.27f);
            bezier97Path.cubicTo(140.39f, 13.3f, 140.17f, 13.3f, 139.92f, 13.38f);
            bezier97Path.cubicTo(140.07f, 13.38f, 140.22f, 13.37f, 140.37f, 13.36f);
            bezier97Path.cubicTo(140.27f, 13.38f, 140.16f, 13.39f, 140.06f, 13.41f);
            bezier97Path.cubicTo(140.1f, 13.48f, 140.32f, 13.5f, 140.59f, 13.51f);
            bezier97Path.cubicTo(140.75f, 13.56f, 140.69f, 13.58f, 140.43f, 13.57f);
            bezier97Path.cubicTo(140.54f, 13.59f, 140.83f, 13.7f, 140.8f, 13.72f);
            bezier97Path.cubicTo(140.23f, 14.1f, 140.15f, 13.66f, 139.81f, 13.86f);
            bezier97Path.cubicTo(139.98f, 13.76f, 140.03f, 13.72f, 139.77f, 13.72f);
            bezier97Path.cubicTo(139.78f, 13.73f, 139.78f, 13.73f, 139.78f, 13.74f);
            bezier97Path.cubicTo(139.55f, 13.87f, 138.85f, 13.57f, 138.51f, 13.57f);
            bezier97Path.cubicTo(138.44f, 13.62f, 138.6f, 13.61f, 138.69f, 13.63f);
            bezier97Path.cubicTo(138.49f, 13.63f, 138.29f, 13.65f, 138.09f, 13.67f);
            bezier97Path.cubicTo(138.1f, 13.7f, 138.13f, 13.71f, 138.16f, 13.72f);
            bezier97Path.cubicTo(138f, 13.72f, 137.84f, 13.7f, 137.72f, 13.77f);
            bezier97Path.cubicTo(137.82f, 13.82f, 137.92f, 13.84f, 138.04f, 13.82f);
            bezier97Path.cubicTo(137.86f, 13.82f, 137.68f, 13.83f, 137.51f, 13.83f);
            bezier97Path.cubicTo(137.36f, 13.93f, 137.56f, 13.93f, 137.9f, 13.92f);
            bezier97Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier97Path, paint);
            
            // Bezier 98
            RectF bezier98Rect = CacheForLogo.bezier98Rect;
            bezier98Rect.set(138.08f, 14.4f, 138.65f, 14.57f);
            Path bezier98Path = CacheForLogo.bezier98Path;
            bezier98Path.reset();
            bezier98Path.moveTo(138.65f, 14.4f);
            bezier98Path.cubicTo(138.43f, 14.41f, 138.23f, 14.47f, 138.08f, 14.57f);
            bezier98Path.cubicTo(138.27f, 14.5f, 138.46f, 14.44f, 138.65f, 14.4f);
            bezier98Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier98Path, paint);
            
            // Bezier 99
            RectF bezier99Rect = CacheForLogo.bezier99Rect;
            bezier99Rect.set(136.95f, 14.29f, 137.02f, 14.31f);
            Path bezier99Path = CacheForLogo.bezier99Path;
            bezier99Path.reset();
            bezier99Path.moveTo(136.95f, 14.29f);
            bezier99Path.cubicTo(136.95f, 14.3f, 136.95f, 14.3f, 136.95f, 14.31f);
            bezier99Path.cubicTo(137.06f, 14.29f, 137.03f, 14.29f, 136.95f, 14.29f);
            bezier99Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier99Path, paint);
            
            // Bezier 100
            RectF bezier100Rect = CacheForLogo.bezier100Rect;
            bezier100Rect.set(140.39f, 13.57f, 140.43f, 13.57f);
            Path bezier100Path = CacheForLogo.bezier100Path;
            bezier100Path.reset();
            bezier100Path.moveTo(140.39f, 13.57f);
            bezier100Path.cubicTo(140.4f, 13.58f, 140.41f, 13.57f, 140.43f, 13.57f);
            bezier100Path.cubicTo(140.41f, 13.57f, 140.39f, 13.57f, 140.39f, 13.57f);
            bezier100Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier100Path, paint);
            
            // Bezier 101
            RectF bezier101Rect = CacheForLogo.bezier101Rect;
            bezier101Rect.set(139.78f, 15.08f, 141.25f, 15.37f);
            Path bezier101Path = CacheForLogo.bezier101Path;
            bezier101Path.reset();
            bezier101Path.moveTo(139.79f, 15.19f);
            bezier101Path.cubicTo(139.69f, 15.27f, 140.1f, 15.37f, 140.13f, 15.37f);
            bezier101Path.cubicTo(140.41f, 15.36f, 140.98f, 15.37f, 141.25f, 15.24f);
            bezier101Path.cubicTo(140.91f, 15.17f, 140.12f, 14.95f, 139.79f, 15.19f);
            bezier101Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.brightWhite);
            canvas.drawPath(bezier101Path, paint);
            
            // Bezier 102
            RectF bezier102Rect = CacheForLogo.bezier102Rect;
            bezier102Rect.set(158.02f, 111.77f, 209.95f, 201.06f);
            Path bezier102Path = CacheForLogo.bezier102Path;
            bezier102Path.reset();
            bezier102Path.moveTo(158.24f, 159.4f);
            bezier102Path.lineTo(158.02f, 156.24f);
            bezier102Path.cubicTo(158.02f, 156.24f, 158.61f, 154.19f, 160.13f, 153.64f);
            bezier102Path.cubicTo(160.13f, 153.64f, 166.75f, 139.88f, 169.69f, 136.72f);
            bezier102Path.cubicTo(169.69f, 136.72f, 169.91f, 126.69f, 179.39f, 126.47f);
            bezier102Path.cubicTo(179.39f, 126.47f, 179.94f, 124.84f, 180.98f, 124.46f);
            bezier102Path.lineTo(180.87f, 120.64f);
            bezier102Path.cubicTo(180.87f, 120.64f, 179.72f, 119.77f, 179.39f, 118.9f);
            bezier102Path.lineTo(179.45f, 117.42f);
            bezier102Path.lineTo(179.67f, 114.53f);
            bezier102Path.cubicTo(179.67f, 114.53f, 183.54f, 108.21f, 188.28f, 114.7f);
            bezier102Path.cubicTo(188.28f, 114.7f, 188.61f, 119.44f, 187.41f, 120.48f);
            bezier102Path.lineTo(186.1f, 122.33f);
            bezier102Path.lineTo(186.21f, 125.27f);
            bezier102Path.cubicTo(186.21f, 125.27f, 187.25f, 126.36f, 187.25f, 126.86f);
            bezier102Path.cubicTo(187.25f, 126.86f, 193.02f, 127.02f, 196.24f, 135.09f);
            bezier102Path.lineTo(198.69f, 141.41f);
            bezier102Path.lineTo(205.24f, 149.7f);
            bezier102Path.cubicTo(205.24f, 149.7f, 211.07f, 151.28f, 209.76f, 153.9f);
            bezier102Path.cubicTo(209.76f, 153.9f, 208.94f, 156.02f, 206.11f, 155.53f);
            bezier102Path.cubicTo(206.11f, 155.53f, 203.17f, 153.9f, 204.15f, 151.88f);
            bezier102Path.cubicTo(204.15f, 151.88f, 194.99f, 144.9f, 195.2f, 142.94f);
            bezier102Path.lineTo(193.24f, 142.34f);
            bezier102Path.lineTo(192.75f, 140.7f);
            bezier102Path.lineTo(192.04f, 140.65f);
            bezier102Path.lineTo(190.52f, 152.1f);
            bezier102Path.lineTo(191.55f, 183.61f);
            bezier102Path.lineTo(190.52f, 183.94f);
            bezier102Path.lineTo(189.7f, 196.48f);
            bezier102Path.cubicTo(189.7f, 196.48f, 191.17f, 199.75f, 190.63f, 200.89f);
            bezier102Path.lineTo(186.43f, 200.89f);
            bezier102Path.cubicTo(186.43f, 200.89f, 185.56f, 197.51f, 186.48f, 196.53f);
            bezier102Path.lineTo(186.48f, 187.97f);
            bezier102Path.cubicTo(186.48f, 187.97f, 185.23f, 184.43f, 185.5f, 183.94f);
            bezier102Path.lineTo(181.19f, 183.94f);
            bezier102Path.lineTo(181.36f, 163.44f);
            bezier102Path.lineTo(180.21f, 163.44f);
            bezier102Path.lineTo(176.07f, 182.74f);
            bezier102Path.lineTo(173.45f, 183.01f);
            bezier102Path.cubicTo(173.45f, 183.01f, 171.92f, 190.59f, 170.94f, 191.63f);
            bezier102Path.lineTo(171f, 198.44f);
            bezier102Path.lineTo(168.76f, 201.06f);
            bezier102Path.lineTo(165.22f, 200.46f);
            bezier102Path.cubicTo(165.22f, 200.46f, 166.36f, 196.86f, 168.16f, 195.39f);
            bezier102Path.cubicTo(168.16f, 195.39f, 167.18f, 173.2f, 170.4f, 168.34f);
            bezier102Path.lineTo(171.82f, 154.77f);
            bezier102Path.cubicTo(171.82f, 154.77f, 172.85f, 147.03f, 174.92f, 145.77f);
            bezier102Path.cubicTo(174.92f, 145.77f, 175.69f, 140.48f, 173.07f, 138.69f);
            bezier102Path.cubicTo(173.07f, 138.69f, 168.76f, 146.86f, 165.17f, 150.41f);
            bezier102Path.lineTo(162.06f, 154.39f);
            bezier102Path.cubicTo(162.06f, 154.39f, 161.63f, 157.98f, 160.53f, 159.19f);
            bezier102Path.cubicTo(160.14f, 159.61f, 158.24f, 159.4f, 158.24f, 159.4f);
            bezier102Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier102Path, paint);
            
            // Bezier 103
            RectF bezier103Rect = CacheForLogo.bezier103Rect;
            bezier103Rect.set(158.02f, 111.77f, 209.95f, 201.06f);
            Path bezier103Path = CacheForLogo.bezier103Path;
            bezier103Path.reset();
            bezier103Path.moveTo(158.24f, 159.4f);
            bezier103Path.lineTo(158.02f, 156.24f);
            bezier103Path.cubicTo(158.02f, 156.24f, 158.61f, 154.19f, 160.13f, 153.64f);
            bezier103Path.cubicTo(160.13f, 153.64f, 166.75f, 139.88f, 169.69f, 136.72f);
            bezier103Path.cubicTo(169.69f, 136.72f, 169.91f, 126.69f, 179.39f, 126.47f);
            bezier103Path.cubicTo(179.39f, 126.47f, 179.94f, 124.84f, 180.98f, 124.46f);
            bezier103Path.lineTo(180.87f, 120.64f);
            bezier103Path.cubicTo(180.87f, 120.64f, 179.72f, 119.77f, 179.39f, 118.9f);
            bezier103Path.lineTo(179.45f, 117.42f);
            bezier103Path.lineTo(179.67f, 114.53f);
            bezier103Path.cubicTo(179.67f, 114.53f, 183.54f, 108.21f, 188.28f, 114.7f);
            bezier103Path.cubicTo(188.28f, 114.7f, 188.61f, 119.44f, 187.41f, 120.48f);
            bezier103Path.lineTo(186.1f, 122.33f);
            bezier103Path.lineTo(186.21f, 125.27f);
            bezier103Path.cubicTo(186.21f, 125.27f, 187.25f, 126.36f, 187.25f, 126.86f);
            bezier103Path.cubicTo(187.25f, 126.86f, 193.02f, 127.02f, 196.24f, 135.09f);
            bezier103Path.lineTo(198.69f, 141.41f);
            bezier103Path.lineTo(205.24f, 149.7f);
            bezier103Path.cubicTo(205.24f, 149.7f, 211.07f, 151.28f, 209.76f, 153.9f);
            bezier103Path.cubicTo(209.76f, 153.9f, 208.94f, 156.02f, 206.11f, 155.53f);
            bezier103Path.cubicTo(206.11f, 155.53f, 203.17f, 153.9f, 204.15f, 151.88f);
            bezier103Path.cubicTo(204.15f, 151.88f, 194.99f, 144.9f, 195.2f, 142.94f);
            bezier103Path.lineTo(193.24f, 142.34f);
            bezier103Path.lineTo(192.75f, 140.7f);
            bezier103Path.lineTo(192.04f, 140.65f);
            bezier103Path.lineTo(190.52f, 152.1f);
            bezier103Path.lineTo(191.55f, 183.61f);
            bezier103Path.lineTo(190.52f, 183.94f);
            bezier103Path.lineTo(189.7f, 196.48f);
            bezier103Path.cubicTo(189.7f, 196.48f, 191.17f, 199.75f, 190.63f, 200.89f);
            bezier103Path.lineTo(186.43f, 200.89f);
            bezier103Path.cubicTo(186.43f, 200.89f, 185.56f, 197.51f, 186.48f, 196.53f);
            bezier103Path.lineTo(186.48f, 187.97f);
            bezier103Path.cubicTo(186.48f, 187.97f, 185.23f, 184.43f, 185.5f, 183.94f);
            bezier103Path.lineTo(181.19f, 183.94f);
            bezier103Path.lineTo(181.36f, 163.44f);
            bezier103Path.lineTo(180.21f, 163.44f);
            bezier103Path.lineTo(176.07f, 182.74f);
            bezier103Path.lineTo(173.45f, 183.01f);
            bezier103Path.cubicTo(173.45f, 183.01f, 171.92f, 190.59f, 170.94f, 191.63f);
            bezier103Path.lineTo(171f, 198.44f);
            bezier103Path.lineTo(168.76f, 201.06f);
            bezier103Path.lineTo(165.22f, 200.46f);
            bezier103Path.cubicTo(165.22f, 200.46f, 166.36f, 196.86f, 168.16f, 195.39f);
            bezier103Path.cubicTo(168.16f, 195.39f, 167.18f, 173.2f, 170.4f, 168.34f);
            bezier103Path.lineTo(171.82f, 154.77f);
            bezier103Path.cubicTo(171.82f, 154.77f, 172.85f, 147.03f, 174.92f, 145.77f);
            bezier103Path.cubicTo(174.92f, 145.77f, 175.69f, 140.48f, 173.07f, 138.69f);
            bezier103Path.cubicTo(173.07f, 138.69f, 168.76f, 146.86f, 165.17f, 150.41f);
            bezier103Path.lineTo(162.06f, 154.39f);
            bezier103Path.cubicTo(162.06f, 154.39f, 161.63f, 157.98f, 160.53f, 159.19f);
            bezier103Path.cubicTo(160.14f, 159.61f, 158.24f, 159.4f, 158.24f, 159.4f);
            bezier103Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier103Path, paint);
            canvas.restore();
            
            // Bezier 104
            RectF bezier104Rect = CacheForLogo.bezier104Rect;
            bezier104Rect.set(204.84f, 106.39f, 249.3f, 203.63f);
            Path bezier104Path = CacheForLogo.bezier104Path;
            bezier104Path.reset();
            bezier104Path.moveTo(226.14f, 118.54f);
            bezier104Path.lineTo(226.14f, 116.82f);
            bezier104Path.cubicTo(226.14f, 116.82f, 224.26f, 114.53f, 224.26f, 112.9f);
            bezier104Path.cubicTo(224.26f, 112.9f, 224.27f, 109.69f, 224.67f, 108.73f);
            bezier104Path.cubicTo(225.51f, 106.73f, 231.08f, 104.12f, 233.26f, 110.04f);
            bezier104Path.cubicTo(233.75f, 111.35f, 233.67f, 112.98f, 232.44f, 115.6f);
            bezier104Path.lineTo(231.79f, 116.09f);
            bezier104Path.lineTo(231.79f, 118.79f);
            bezier104Path.cubicTo(231.79f, 118.79f, 233.83f, 120.34f, 233.67f, 121.65f);
            bezier104Path.cubicTo(233.67f, 121.65f, 238.9f, 121.89f, 241.03f, 127.45f);
            bezier104Path.lineTo(243.4f, 134.57f);
            bezier104Path.lineTo(242.75f, 135.39f);
            bezier104Path.cubicTo(242.75f, 135.39f, 245.61f, 144.55f, 246.84f, 150.11f);
            bezier104Path.cubicTo(246.84f, 150.11f, 249.45f, 154.93f, 249.29f, 156.24f);
            bezier104Path.cubicTo(249.29f, 156.24f, 247.57f, 158.29f, 246.51f, 158.29f);
            bezier104Path.cubicTo(246.51f, 158.29f, 244.06f, 156.4f, 243.81f, 154.93f);
            bezier104Path.cubicTo(243.81f, 154.93f, 244.06f, 150.68f, 244.55f, 149.86f);
            bezier104Path.cubicTo(244.55f, 149.86f, 238.98f, 140.46f, 239.8f, 137.02f);
            bezier104Path.lineTo(238.74f, 136.78f);
            bezier104Path.lineTo(238.33f, 134.49f);
            bezier104Path.lineTo(237.27f, 134.49f);
            bezier104Path.lineTo(236.37f, 144.79f);
            bezier104Path.cubicTo(236.37f, 144.79f, 238.25f, 147f, 238.17f, 157.47f);
            bezier104Path.cubicTo(238.17f, 157.47f, 237.92f, 193.53f, 238.82f, 196.81f);
            bezier104Path.lineTo(237.68f, 197.21f);
            bezier104Path.cubicTo(237.68f, 197.21f, 238.82f, 200.89f, 239.48f, 201.79f);
            bezier104Path.cubicTo(239.48f, 201.79f, 239.07f, 204.82f, 235.63f, 203.1f);
            bezier104Path.lineTo(233.51f, 197.46f);
            bezier104Path.lineTo(232.52f, 196.4f);
            bezier104Path.lineTo(231.79f, 171.94f);
            bezier104Path.cubicTo(231.79f, 171.94f, 228.27f, 158.61f, 228.35f, 157.22f);
            bezier104Path.lineTo(227.05f, 156.98f);
            bezier104Path.cubicTo(227.05f, 156.98f, 225.33f, 170.31f, 223.86f, 173.42f);
            bezier104Path.lineTo(221.89f, 196.48f);
            bezier104Path.lineTo(221.32f, 196.48f);
            bezier104Path.lineTo(221.24f, 199.26f);
            bezier104Path.cubicTo(221.24f, 199.26f, 218.54f, 199.8f, 216.41f, 201.63f);
            bezier104Path.cubicTo(216.41f, 201.63f, 214.29f, 202.69f, 212.82f, 201.55f);
            bezier104Path.cubicTo(212.82f, 201.55f, 214.45f, 197.62f, 217.31f, 197.3f);
            bezier104Path.lineTo(217.39f, 196.37f);
            bezier104Path.lineTo(216f, 196.07f);
            bezier104Path.lineTo(217.64f, 174.07f);
            bezier104Path.lineTo(217.97f, 156.24f);
            bezier104Path.cubicTo(217.97f, 156.24f, 217.97f, 146.02f, 219.6f, 143.32f);
            bezier104Path.lineTo(220.01f, 132.03f);
            bezier104Path.lineTo(219.44f, 132.12f);
            bezier104Path.cubicTo(219.44f, 132.12f, 216.74f, 135.72f, 215.84f, 136.94f);
            bezier104Path.cubicTo(215.84f, 136.94f, 215.19f, 139.97f, 209.95f, 147.49f);
            bezier104Path.lineTo(209.22f, 150.6f);
            bezier104Path.cubicTo(209.22f, 150.6f, 211.34f, 152.15f, 210.61f, 153.46f);
            bezier104Path.cubicTo(209.87f, 154.77f, 205.13f, 156.08f, 204.88f, 155.01f);
            bezier104Path.cubicTo(204.64f, 153.95f, 205.5f, 149.94f, 206.52f, 148.73f);
            bezier104Path.cubicTo(206.52f, 148.73f, 208.89f, 141.44f, 209.95f, 138.98f);
            bezier104Path.cubicTo(209.95f, 138.98f, 214.12f, 131.13f, 215.51f, 129.83f);
            bezier104Path.cubicTo(215.51f, 129.83f, 215.68f, 121.24f, 222.55f, 121.4f);
            bezier104Path.lineTo(224.84f, 120.75f);
            bezier104Path.lineTo(225.25f, 118.87f);
            bezier104Path.lineTo(226.14f, 118.54f);
            bezier104Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier104Path, paint);
            
            // Bezier 105
            RectF bezier105Rect = CacheForLogo.bezier105Rect;
            bezier105Rect.set(204.84f, 106.39f, 249.3f, 203.63f);
            Path bezier105Path = CacheForLogo.bezier105Path;
            bezier105Path.reset();
            bezier105Path.moveTo(226.14f, 118.54f);
            bezier105Path.lineTo(226.14f, 116.82f);
            bezier105Path.cubicTo(226.14f, 116.82f, 224.26f, 114.53f, 224.26f, 112.9f);
            bezier105Path.cubicTo(224.26f, 112.9f, 224.27f, 109.69f, 224.67f, 108.73f);
            bezier105Path.cubicTo(225.51f, 106.73f, 231.08f, 104.12f, 233.26f, 110.04f);
            bezier105Path.cubicTo(233.75f, 111.35f, 233.67f, 112.98f, 232.44f, 115.6f);
            bezier105Path.lineTo(231.79f, 116.09f);
            bezier105Path.lineTo(231.79f, 118.79f);
            bezier105Path.cubicTo(231.79f, 118.79f, 233.83f, 120.34f, 233.67f, 121.65f);
            bezier105Path.cubicTo(233.67f, 121.65f, 238.9f, 121.89f, 241.03f, 127.45f);
            bezier105Path.lineTo(243.4f, 134.57f);
            bezier105Path.lineTo(242.75f, 135.39f);
            bezier105Path.cubicTo(242.75f, 135.39f, 245.61f, 144.55f, 246.84f, 150.11f);
            bezier105Path.cubicTo(246.84f, 150.11f, 249.45f, 154.93f, 249.29f, 156.24f);
            bezier105Path.cubicTo(249.29f, 156.24f, 247.57f, 158.29f, 246.51f, 158.29f);
            bezier105Path.cubicTo(246.51f, 158.29f, 244.06f, 156.4f, 243.81f, 154.93f);
            bezier105Path.cubicTo(243.81f, 154.93f, 244.06f, 150.68f, 244.55f, 149.86f);
            bezier105Path.cubicTo(244.55f, 149.86f, 238.98f, 140.46f, 239.8f, 137.02f);
            bezier105Path.lineTo(238.74f, 136.78f);
            bezier105Path.lineTo(238.33f, 134.49f);
            bezier105Path.lineTo(237.27f, 134.49f);
            bezier105Path.lineTo(236.37f, 144.79f);
            bezier105Path.cubicTo(236.37f, 144.79f, 238.25f, 147f, 238.17f, 157.47f);
            bezier105Path.cubicTo(238.17f, 157.47f, 237.92f, 193.53f, 238.82f, 196.81f);
            bezier105Path.lineTo(237.68f, 197.21f);
            bezier105Path.cubicTo(237.68f, 197.21f, 238.82f, 200.89f, 239.48f, 201.79f);
            bezier105Path.cubicTo(239.48f, 201.79f, 239.07f, 204.82f, 235.63f, 203.1f);
            bezier105Path.lineTo(233.51f, 197.46f);
            bezier105Path.lineTo(232.52f, 196.4f);
            bezier105Path.lineTo(231.79f, 171.94f);
            bezier105Path.cubicTo(231.79f, 171.94f, 228.27f, 158.61f, 228.35f, 157.22f);
            bezier105Path.lineTo(227.05f, 156.98f);
            bezier105Path.cubicTo(227.05f, 156.98f, 225.33f, 170.31f, 223.86f, 173.42f);
            bezier105Path.lineTo(221.89f, 196.48f);
            bezier105Path.lineTo(221.32f, 196.48f);
            bezier105Path.lineTo(221.24f, 199.26f);
            bezier105Path.cubicTo(221.24f, 199.26f, 218.54f, 199.8f, 216.41f, 201.63f);
            bezier105Path.cubicTo(216.41f, 201.63f, 214.29f, 202.69f, 212.82f, 201.55f);
            bezier105Path.cubicTo(212.82f, 201.55f, 214.45f, 197.62f, 217.31f, 197.3f);
            bezier105Path.lineTo(217.39f, 196.37f);
            bezier105Path.lineTo(216f, 196.07f);
            bezier105Path.lineTo(217.64f, 174.07f);
            bezier105Path.lineTo(217.97f, 156.24f);
            bezier105Path.cubicTo(217.97f, 156.24f, 217.97f, 146.02f, 219.6f, 143.32f);
            bezier105Path.lineTo(220.01f, 132.03f);
            bezier105Path.lineTo(219.44f, 132.12f);
            bezier105Path.cubicTo(219.44f, 132.12f, 216.74f, 135.72f, 215.84f, 136.94f);
            bezier105Path.cubicTo(215.84f, 136.94f, 215.19f, 139.97f, 209.95f, 147.49f);
            bezier105Path.lineTo(209.22f, 150.6f);
            bezier105Path.cubicTo(209.22f, 150.6f, 211.34f, 152.15f, 210.61f, 153.46f);
            bezier105Path.cubicTo(209.87f, 154.77f, 205.13f, 156.08f, 204.88f, 155.01f);
            bezier105Path.cubicTo(204.64f, 153.95f, 205.5f, 149.94f, 206.52f, 148.73f);
            bezier105Path.cubicTo(206.52f, 148.73f, 208.89f, 141.44f, 209.95f, 138.98f);
            bezier105Path.cubicTo(209.95f, 138.98f, 214.12f, 131.13f, 215.51f, 129.83f);
            bezier105Path.cubicTo(215.51f, 129.83f, 215.68f, 121.24f, 222.55f, 121.4f);
            bezier105Path.lineTo(224.84f, 120.75f);
            bezier105Path.lineTo(225.25f, 118.87f);
            bezier105Path.lineTo(226.14f, 118.54f);
            bezier105Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier105Path, paint);
            canvas.restore();
            
            // Bezier 106
            RectF bezier106Rect = CacheForLogo.bezier106Rect;
            bezier106Rect.set(244.72f, 116.38f, 291.11f, 199.85f);
            Path bezier106Path = CacheForLogo.bezier106Path;
            bezier106Path.reset();
            bezier106Path.moveTo(266.79f, 128.22f);
            bezier106Path.lineTo(266.79f, 125.71f);
            bezier106Path.cubicTo(266.79f, 125.71f, 263.65f, 121.32f, 265.13f, 119.19f);
            bezier106Path.cubicTo(265.13f, 119.19f, 269.41f, 111.86f, 273.17f, 120.86f);
            bezier106Path.cubicTo(273.17f, 120.86f, 273.99f, 121.56f, 272.02f, 124.89f);
            bezier106Path.cubicTo(272.02f, 124.89f, 270.88f, 126.85f, 271.15f, 128.49f);
            bezier106Path.cubicTo(271.15f, 128.49f, 272.46f, 129.63f, 272.73f, 130.67f);
            bezier106Path.cubicTo(272.73f, 130.67f, 278.13f, 131.1f, 278.51f, 134.76f);
            bezier106Path.lineTo(279.66f, 145.61f);
            bezier106Path.lineTo(287.02f, 154.11f);
            bezier106Path.cubicTo(287.02f, 154.11f, 291.16f, 154.98f, 291.11f, 156.89f);
            bezier106Path.cubicTo(291.05f, 158.8f, 289.96f, 159.67f, 289.96f, 159.67f);
            bezier106Path.cubicTo(289.96f, 159.67f, 286.91f, 159.73f, 286.74f, 157.17f);
            bezier106Path.cubicTo(286.74f, 157.17f, 277.37f, 148.23f, 277.04f, 147.13f);
            bezier106Path.lineTo(275.89f, 142.61f);
            bezier106Path.lineTo(275.08f, 142.61f);
            bezier106Path.lineTo(275.08f, 147.03f);
            bezier106Path.cubicTo(275.08f, 147.03f, 277.48f, 150.41f, 278.13f, 161.04f);
            bezier106Path.lineTo(280.96f, 192.17f);
            bezier106Path.lineTo(280.2f, 192.66f);
            bezier106Path.lineTo(280.26f, 194.08f);
            bezier106Path.lineTo(283.64f, 199.09f);
            bezier106Path.lineTo(283.58f, 199.86f);
            bezier106Path.lineTo(279.71f, 199.86f);
            bezier106Path.lineTo(277.53f, 196.09f);
            bezier106Path.lineTo(277.86f, 195.22f);
            bezier106Path.lineTo(277.64f, 193.48f);
            bezier106Path.lineTo(276.44f, 193.26f);
            bezier106Path.lineTo(276.44f, 187.97f);
            bezier106Path.cubicTo(276.44f, 187.97f, 272.95f, 174.94f, 272.89f, 174.67f);
            bezier106Path.cubicTo(272.84f, 174.39f, 270.01f, 163.06f, 270.06f, 162.4f);
            bezier106Path.cubicTo(270.12f, 161.75f, 269.79f, 160.87f, 269.79f, 160.87f);
            bezier106Path.lineTo(268.97f, 160.82f);
            bezier106Path.cubicTo(268.97f, 160.82f, 264.94f, 176.63f, 263.96f, 177.72f);
            bezier106Path.lineTo(262.48f, 191.84f);
            bezier106Path.lineTo(259.76f, 192.22f);
            bezier106Path.lineTo(259.7f, 196.04f);
            bezier106Path.lineTo(257.63f, 199.42f);
            bezier106Path.lineTo(254.2f, 199.69f);
            bezier106Path.lineTo(257.08f, 193.8f);
            bezier106Path.lineTo(257.08f, 191.57f);
            bezier106Path.lineTo(255.23f, 191.24f);
            bezier106Path.cubicTo(255.23f, 191.24f, 257.74f, 178.27f, 258.5f, 176.08f);
            bezier106Path.cubicTo(258.5f, 176.08f, 260.3f, 153.24f, 262.48f, 151.01f);
            bezier106Path.cubicTo(262.48f, 151.01f, 263.57f, 140.48f, 262.75f, 139.34f);
            bezier106Path.lineTo(261.45f, 139.17f);
            bezier106Path.cubicTo(261.45f, 139.17f, 261.5f, 141.95f, 258.07f, 146.48f);
            bezier106Path.cubicTo(258.07f, 146.48f, 254.41f, 151.11f, 250f, 154f);
            bezier106Path.lineTo(248.09f, 157.27f);
            bezier106Path.cubicTo(248.09f, 157.27f, 246.03f, 157.67f, 245.47f, 157.33f);
            bezier106Path.cubicTo(244.91f, 156.98f, 244.59f, 155.44f, 244.76f, 154.77f);
            bezier106Path.cubicTo(245.11f, 153.43f, 247.6f, 152.26f, 249.23f, 152.15f);
            bezier106Path.cubicTo(249.23f, 152.15f, 255.5f, 143.32f, 257.19f, 142.39f);
            bezier106Path.cubicTo(257.19f, 142.39f, 258.45f, 133.61f, 259.97f, 131.38f);
            bezier106Path.cubicTo(259.97f, 131.38f, 261.56f, 129.41f, 265.92f, 129.58f);
            bezier106Path.lineTo(266.79f, 128.22f);
            bezier106Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier106Path, paint);
            
            // Bezier 107
            RectF bezier107Rect = CacheForLogo.bezier107Rect;
            bezier107Rect.set(244.72f, 116.38f, 291.11f, 199.85f);
            Path bezier107Path = CacheForLogo.bezier107Path;
            bezier107Path.reset();
            bezier107Path.moveTo(266.79f, 128.22f);
            bezier107Path.lineTo(266.79f, 125.71f);
            bezier107Path.cubicTo(266.79f, 125.71f, 263.65f, 121.32f, 265.13f, 119.19f);
            bezier107Path.cubicTo(265.13f, 119.19f, 269.41f, 111.86f, 273.17f, 120.86f);
            bezier107Path.cubicTo(273.17f, 120.86f, 273.99f, 121.56f, 272.02f, 124.89f);
            bezier107Path.cubicTo(272.02f, 124.89f, 270.88f, 126.85f, 271.15f, 128.49f);
            bezier107Path.cubicTo(271.15f, 128.49f, 272.46f, 129.63f, 272.73f, 130.67f);
            bezier107Path.cubicTo(272.73f, 130.67f, 278.13f, 131.1f, 278.51f, 134.76f);
            bezier107Path.lineTo(279.66f, 145.61f);
            bezier107Path.lineTo(287.02f, 154.11f);
            bezier107Path.cubicTo(287.02f, 154.11f, 291.16f, 154.98f, 291.11f, 156.89f);
            bezier107Path.cubicTo(291.05f, 158.8f, 289.96f, 159.67f, 289.96f, 159.67f);
            bezier107Path.cubicTo(289.96f, 159.67f, 286.91f, 159.73f, 286.74f, 157.17f);
            bezier107Path.cubicTo(286.74f, 157.17f, 277.37f, 148.23f, 277.04f, 147.13f);
            bezier107Path.lineTo(275.89f, 142.61f);
            bezier107Path.lineTo(275.08f, 142.61f);
            bezier107Path.lineTo(275.08f, 147.03f);
            bezier107Path.cubicTo(275.08f, 147.03f, 277.48f, 150.41f, 278.13f, 161.04f);
            bezier107Path.lineTo(280.96f, 192.17f);
            bezier107Path.lineTo(280.2f, 192.66f);
            bezier107Path.lineTo(280.26f, 194.08f);
            bezier107Path.lineTo(283.64f, 199.09f);
            bezier107Path.lineTo(283.58f, 199.86f);
            bezier107Path.lineTo(279.71f, 199.86f);
            bezier107Path.lineTo(277.53f, 196.09f);
            bezier107Path.lineTo(277.86f, 195.22f);
            bezier107Path.lineTo(277.64f, 193.48f);
            bezier107Path.lineTo(276.44f, 193.26f);
            bezier107Path.lineTo(276.44f, 187.97f);
            bezier107Path.cubicTo(276.44f, 187.97f, 272.95f, 174.94f, 272.89f, 174.67f);
            bezier107Path.cubicTo(272.84f, 174.39f, 270.01f, 163.06f, 270.06f, 162.4f);
            bezier107Path.cubicTo(270.12f, 161.75f, 269.79f, 160.87f, 269.79f, 160.87f);
            bezier107Path.lineTo(268.97f, 160.82f);
            bezier107Path.cubicTo(268.97f, 160.82f, 264.94f, 176.63f, 263.96f, 177.72f);
            bezier107Path.lineTo(262.48f, 191.84f);
            bezier107Path.lineTo(259.76f, 192.22f);
            bezier107Path.lineTo(259.7f, 196.04f);
            bezier107Path.lineTo(257.63f, 199.42f);
            bezier107Path.lineTo(254.2f, 199.69f);
            bezier107Path.lineTo(257.08f, 193.8f);
            bezier107Path.lineTo(257.08f, 191.57f);
            bezier107Path.lineTo(255.23f, 191.24f);
            bezier107Path.cubicTo(255.23f, 191.24f, 257.74f, 178.27f, 258.5f, 176.08f);
            bezier107Path.cubicTo(258.5f, 176.08f, 260.3f, 153.24f, 262.48f, 151.01f);
            bezier107Path.cubicTo(262.48f, 151.01f, 263.57f, 140.48f, 262.75f, 139.34f);
            bezier107Path.lineTo(261.45f, 139.17f);
            bezier107Path.cubicTo(261.45f, 139.17f, 261.5f, 141.95f, 258.07f, 146.48f);
            bezier107Path.cubicTo(258.07f, 146.48f, 254.41f, 151.11f, 250f, 154f);
            bezier107Path.lineTo(248.09f, 157.27f);
            bezier107Path.cubicTo(248.09f, 157.27f, 246.03f, 157.67f, 245.47f, 157.33f);
            bezier107Path.cubicTo(244.91f, 156.98f, 244.59f, 155.44f, 244.76f, 154.77f);
            bezier107Path.cubicTo(245.11f, 153.43f, 247.6f, 152.26f, 249.23f, 152.15f);
            bezier107Path.cubicTo(249.23f, 152.15f, 255.5f, 143.32f, 257.19f, 142.39f);
            bezier107Path.cubicTo(257.19f, 142.39f, 258.45f, 133.61f, 259.97f, 131.38f);
            bezier107Path.cubicTo(259.97f, 131.38f, 261.56f, 129.41f, 265.92f, 129.58f);
            bezier107Path.lineTo(266.79f, 128.22f);
            bezier107Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier107Path, paint);
            canvas.restore();
            
            // Bezier 108
            RectF bezier108Rect = CacheForLogo.bezier108Rect;
            bezier108Rect.set(18.02f, 109.77f, 69.95f, 199.06f);
            Path bezier108Path = CacheForLogo.bezier108Path;
            bezier108Path.reset();
            bezier108Path.moveTo(18.24f, 157.4f);
            bezier108Path.lineTo(18.02f, 154.24f);
            bezier108Path.cubicTo(18.02f, 154.24f, 18.61f, 152.19f, 20.13f, 151.64f);
            bezier108Path.cubicTo(20.13f, 151.64f, 26.75f, 137.88f, 29.69f, 134.72f);
            bezier108Path.cubicTo(29.69f, 134.72f, 29.91f, 124.69f, 39.39f, 124.47f);
            bezier108Path.cubicTo(39.39f, 124.47f, 39.94f, 122.84f, 40.98f, 122.46f);
            bezier108Path.lineTo(40.87f, 118.64f);
            bezier108Path.cubicTo(40.87f, 118.64f, 39.72f, 117.77f, 39.39f, 116.9f);
            bezier108Path.lineTo(39.45f, 115.42f);
            bezier108Path.lineTo(39.67f, 112.53f);
            bezier108Path.cubicTo(39.67f, 112.53f, 43.54f, 106.21f, 48.28f, 112.7f);
            bezier108Path.cubicTo(48.28f, 112.7f, 48.61f, 117.44f, 47.41f, 118.48f);
            bezier108Path.lineTo(46.1f, 120.33f);
            bezier108Path.lineTo(46.21f, 123.27f);
            bezier108Path.cubicTo(46.21f, 123.27f, 47.25f, 124.36f, 47.25f, 124.86f);
            bezier108Path.cubicTo(47.25f, 124.86f, 53.02f, 125.02f, 56.24f, 133.09f);
            bezier108Path.lineTo(58.69f, 139.41f);
            bezier108Path.lineTo(65.24f, 147.7f);
            bezier108Path.cubicTo(65.24f, 147.7f, 71.07f, 149.28f, 69.76f, 151.9f);
            bezier108Path.cubicTo(69.76f, 151.9f, 68.94f, 154.02f, 66.11f, 153.53f);
            bezier108Path.cubicTo(66.11f, 153.53f, 63.17f, 151.9f, 64.15f, 149.88f);
            bezier108Path.cubicTo(64.15f, 149.88f, 54.99f, 142.9f, 55.21f, 140.94f);
            bezier108Path.lineTo(53.24f, 140.34f);
            bezier108Path.lineTo(52.75f, 138.7f);
            bezier108Path.lineTo(52.04f, 138.65f);
            bezier108Path.lineTo(50.52f, 150.1f);
            bezier108Path.lineTo(51.55f, 181.61f);
            bezier108Path.lineTo(50.52f, 181.94f);
            bezier108Path.lineTo(49.7f, 194.48f);
            bezier108Path.cubicTo(49.7f, 194.48f, 51.17f, 197.75f, 50.63f, 198.89f);
            bezier108Path.lineTo(46.43f, 198.89f);
            bezier108Path.cubicTo(46.43f, 198.89f, 45.56f, 195.51f, 46.48f, 194.53f);
            bezier108Path.lineTo(46.48f, 185.97f);
            bezier108Path.cubicTo(46.48f, 185.97f, 45.23f, 182.43f, 45.5f, 181.94f);
            bezier108Path.lineTo(41.19f, 181.94f);
            bezier108Path.lineTo(41.36f, 161.44f);
            bezier108Path.lineTo(40.21f, 161.44f);
            bezier108Path.lineTo(36.07f, 180.74f);
            bezier108Path.lineTo(33.45f, 181.01f);
            bezier108Path.cubicTo(33.45f, 181.01f, 31.93f, 188.59f, 30.94f, 189.63f);
            bezier108Path.lineTo(31f, 196.44f);
            bezier108Path.lineTo(28.76f, 199.06f);
            bezier108Path.lineTo(25.22f, 198.46f);
            bezier108Path.cubicTo(25.22f, 198.46f, 26.36f, 194.86f, 28.16f, 193.39f);
            bezier108Path.cubicTo(28.16f, 193.39f, 27.18f, 171.2f, 30.4f, 166.34f);
            bezier108Path.lineTo(31.81f, 152.77f);
            bezier108Path.cubicTo(31.81f, 152.77f, 32.85f, 145.03f, 34.92f, 143.77f);
            bezier108Path.cubicTo(34.92f, 143.77f, 35.69f, 138.48f, 33.07f, 136.69f);
            bezier108Path.cubicTo(33.07f, 136.69f, 28.76f, 144.86f, 25.16f, 148.41f);
            bezier108Path.lineTo(22.06f, 152.39f);
            bezier108Path.cubicTo(22.06f, 152.39f, 21.63f, 155.98f, 20.53f, 157.19f);
            bezier108Path.cubicTo(20.14f, 157.61f, 18.24f, 157.4f, 18.24f, 157.4f);
            bezier108Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier108Path, paint);
            
            // Bezier 109
            RectF bezier109Rect = CacheForLogo.bezier109Rect;
            bezier109Rect.set(18.02f, 109.77f, 69.95f, 199.06f);
            Path bezier109Path = CacheForLogo.bezier109Path;
            bezier109Path.reset();
            bezier109Path.moveTo(18.24f, 157.4f);
            bezier109Path.lineTo(18.02f, 154.24f);
            bezier109Path.cubicTo(18.02f, 154.24f, 18.61f, 152.19f, 20.13f, 151.64f);
            bezier109Path.cubicTo(20.13f, 151.64f, 26.75f, 137.88f, 29.69f, 134.72f);
            bezier109Path.cubicTo(29.69f, 134.72f, 29.91f, 124.69f, 39.39f, 124.47f);
            bezier109Path.cubicTo(39.39f, 124.47f, 39.94f, 122.84f, 40.98f, 122.46f);
            bezier109Path.lineTo(40.87f, 118.64f);
            bezier109Path.cubicTo(40.87f, 118.64f, 39.72f, 117.77f, 39.39f, 116.9f);
            bezier109Path.lineTo(39.45f, 115.42f);
            bezier109Path.lineTo(39.67f, 112.53f);
            bezier109Path.cubicTo(39.67f, 112.53f, 43.54f, 106.21f, 48.28f, 112.7f);
            bezier109Path.cubicTo(48.28f, 112.7f, 48.61f, 117.44f, 47.41f, 118.48f);
            bezier109Path.lineTo(46.1f, 120.33f);
            bezier109Path.lineTo(46.21f, 123.27f);
            bezier109Path.cubicTo(46.21f, 123.27f, 47.25f, 124.36f, 47.25f, 124.86f);
            bezier109Path.cubicTo(47.25f, 124.86f, 53.02f, 125.02f, 56.24f, 133.09f);
            bezier109Path.lineTo(58.69f, 139.41f);
            bezier109Path.lineTo(65.24f, 147.7f);
            bezier109Path.cubicTo(65.24f, 147.7f, 71.07f, 149.28f, 69.76f, 151.9f);
            bezier109Path.cubicTo(69.76f, 151.9f, 68.94f, 154.02f, 66.11f, 153.53f);
            bezier109Path.cubicTo(66.11f, 153.53f, 63.17f, 151.9f, 64.15f, 149.88f);
            bezier109Path.cubicTo(64.15f, 149.88f, 54.99f, 142.9f, 55.21f, 140.94f);
            bezier109Path.lineTo(53.24f, 140.34f);
            bezier109Path.lineTo(52.75f, 138.7f);
            bezier109Path.lineTo(52.04f, 138.65f);
            bezier109Path.lineTo(50.52f, 150.1f);
            bezier109Path.lineTo(51.55f, 181.61f);
            bezier109Path.lineTo(50.52f, 181.94f);
            bezier109Path.lineTo(49.7f, 194.48f);
            bezier109Path.cubicTo(49.7f, 194.48f, 51.17f, 197.75f, 50.63f, 198.89f);
            bezier109Path.lineTo(46.43f, 198.89f);
            bezier109Path.cubicTo(46.43f, 198.89f, 45.56f, 195.51f, 46.48f, 194.53f);
            bezier109Path.lineTo(46.48f, 185.97f);
            bezier109Path.cubicTo(46.48f, 185.97f, 45.23f, 182.43f, 45.5f, 181.94f);
            bezier109Path.lineTo(41.19f, 181.94f);
            bezier109Path.lineTo(41.36f, 161.44f);
            bezier109Path.lineTo(40.21f, 161.44f);
            bezier109Path.lineTo(36.07f, 180.74f);
            bezier109Path.lineTo(33.45f, 181.01f);
            bezier109Path.cubicTo(33.45f, 181.01f, 31.93f, 188.59f, 30.94f, 189.63f);
            bezier109Path.lineTo(31f, 196.44f);
            bezier109Path.lineTo(28.76f, 199.06f);
            bezier109Path.lineTo(25.22f, 198.46f);
            bezier109Path.cubicTo(25.22f, 198.46f, 26.36f, 194.86f, 28.16f, 193.39f);
            bezier109Path.cubicTo(28.16f, 193.39f, 27.18f, 171.2f, 30.4f, 166.34f);
            bezier109Path.lineTo(31.81f, 152.77f);
            bezier109Path.cubicTo(31.81f, 152.77f, 32.85f, 145.03f, 34.92f, 143.77f);
            bezier109Path.cubicTo(34.92f, 143.77f, 35.69f, 138.48f, 33.07f, 136.69f);
            bezier109Path.cubicTo(33.07f, 136.69f, 28.76f, 144.86f, 25.16f, 148.41f);
            bezier109Path.lineTo(22.06f, 152.39f);
            bezier109Path.cubicTo(22.06f, 152.39f, 21.63f, 155.98f, 20.53f, 157.19f);
            bezier109Path.cubicTo(20.14f, 157.61f, 18.24f, 157.4f, 18.24f, 157.4f);
            bezier109Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier109Path, paint);
            canvas.restore();
            
            // Bezier 110
            RectF bezier110Rect = CacheForLogo.bezier110Rect;
            bezier110Rect.set(64.84f, 104.39f, 109.3f, 201.63f);
            Path bezier110Path = CacheForLogo.bezier110Path;
            bezier110Path.reset();
            bezier110Path.moveTo(86.15f, 116.54f);
            bezier110Path.lineTo(86.15f, 114.82f);
            bezier110Path.cubicTo(86.15f, 114.82f, 84.26f, 112.53f, 84.26f, 110.9f);
            bezier110Path.cubicTo(84.26f, 110.9f, 84.27f, 107.69f, 84.67f, 106.73f);
            bezier110Path.cubicTo(85.51f, 104.72f, 91.08f, 102.12f, 93.26f, 108.04f);
            bezier110Path.cubicTo(93.75f, 109.35f, 93.67f, 110.98f, 92.44f, 113.6f);
            bezier110Path.lineTo(91.79f, 114.09f);
            bezier110Path.lineTo(91.79f, 116.79f);
            bezier110Path.cubicTo(91.79f, 116.79f, 93.83f, 118.34f, 93.67f, 119.65f);
            bezier110Path.cubicTo(93.67f, 119.65f, 98.9f, 119.89f, 101.03f, 125.45f);
            bezier110Path.lineTo(103.4f, 132.57f);
            bezier110Path.lineTo(102.75f, 133.39f);
            bezier110Path.cubicTo(102.75f, 133.39f, 105.61f, 142.55f, 106.84f, 148.11f);
            bezier110Path.cubicTo(106.84f, 148.11f, 109.45f, 152.93f, 109.29f, 154.24f);
            bezier110Path.cubicTo(109.29f, 154.24f, 107.57f, 156.29f, 106.51f, 156.29f);
            bezier110Path.cubicTo(106.51f, 156.29f, 104.05f, 154.41f, 103.81f, 152.93f);
            bezier110Path.cubicTo(103.81f, 152.93f, 104.05f, 148.68f, 104.55f, 147.86f);
            bezier110Path.cubicTo(104.55f, 147.86f, 98.98f, 138.46f, 99.8f, 135.02f);
            bezier110Path.lineTo(98.74f, 134.78f);
            bezier110Path.lineTo(98.33f, 132.49f);
            bezier110Path.lineTo(97.27f, 132.49f);
            bezier110Path.lineTo(96.37f, 142.79f);
            bezier110Path.cubicTo(96.37f, 142.79f, 98.25f, 145f, 98.17f, 155.47f);
            bezier110Path.cubicTo(98.17f, 155.47f, 97.92f, 191.53f, 98.82f, 194.81f);
            bezier110Path.lineTo(97.68f, 195.21f);
            bezier110Path.cubicTo(97.68f, 195.21f, 98.82f, 198.89f, 99.48f, 199.79f);
            bezier110Path.cubicTo(99.48f, 199.79f, 99.07f, 202.82f, 95.63f, 201.1f);
            bezier110Path.lineTo(93.51f, 195.46f);
            bezier110Path.lineTo(92.52f, 194.4f);
            bezier110Path.lineTo(91.79f, 169.94f);
            bezier110Path.cubicTo(91.79f, 169.94f, 88.27f, 156.61f, 88.35f, 155.22f);
            bezier110Path.lineTo(87.05f, 154.98f);
            bezier110Path.cubicTo(87.05f, 154.98f, 85.33f, 168.31f, 83.86f, 171.42f);
            bezier110Path.lineTo(81.89f, 194.48f);
            bezier110Path.lineTo(81.32f, 194.48f);
            bezier110Path.lineTo(81.24f, 197.26f);
            bezier110Path.cubicTo(81.24f, 197.26f, 78.54f, 197.8f, 76.41f, 199.63f);
            bezier110Path.cubicTo(76.41f, 199.63f, 74.29f, 200.69f, 72.82f, 199.55f);
            bezier110Path.cubicTo(72.82f, 199.55f, 74.45f, 195.62f, 77.31f, 195.3f);
            bezier110Path.lineTo(77.39f, 194.37f);
            bezier110Path.lineTo(76f, 194.07f);
            bezier110Path.lineTo(77.64f, 172.07f);
            bezier110Path.lineTo(77.97f, 154.24f);
            bezier110Path.cubicTo(77.97f, 154.24f, 77.97f, 144.02f, 79.6f, 141.32f);
            bezier110Path.lineTo(80.01f, 130.03f);
            bezier110Path.lineTo(79.44f, 130.12f);
            bezier110Path.cubicTo(79.44f, 130.12f, 76.74f, 133.71f, 75.84f, 134.94f);
            bezier110Path.cubicTo(75.84f, 134.94f, 75.19f, 137.97f, 69.95f, 145.49f);
            bezier110Path.lineTo(69.22f, 148.6f);
            bezier110Path.cubicTo(69.22f, 148.6f, 71.34f, 150.15f, 70.61f, 151.46f);
            bezier110Path.cubicTo(69.87f, 152.77f, 65.13f, 154.08f, 64.88f, 153.01f);
            bezier110Path.cubicTo(64.64f, 151.95f, 65.5f, 147.94f, 66.52f, 146.73f);
            bezier110Path.cubicTo(66.52f, 146.73f, 68.89f, 139.44f, 69.95f, 136.98f);
            bezier110Path.cubicTo(69.95f, 136.98f, 74.12f, 129.13f, 75.51f, 127.83f);
            bezier110Path.cubicTo(75.51f, 127.83f, 75.68f, 119.24f, 82.55f, 119.4f);
            bezier110Path.lineTo(84.84f, 118.75f);
            bezier110Path.lineTo(85.25f, 116.87f);
            bezier110Path.lineTo(86.15f, 116.54f);
            bezier110Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier110Path, paint);
            
            // Bezier 111
            RectF bezier111Rect = CacheForLogo.bezier111Rect;
            bezier111Rect.set(64.84f, 104.39f, 109.3f, 201.63f);
            Path bezier111Path = CacheForLogo.bezier111Path;
            bezier111Path.reset();
            bezier111Path.moveTo(86.15f, 116.54f);
            bezier111Path.lineTo(86.15f, 114.82f);
            bezier111Path.cubicTo(86.15f, 114.82f, 84.26f, 112.53f, 84.26f, 110.9f);
            bezier111Path.cubicTo(84.26f, 110.9f, 84.27f, 107.69f, 84.67f, 106.73f);
            bezier111Path.cubicTo(85.51f, 104.72f, 91.08f, 102.12f, 93.26f, 108.04f);
            bezier111Path.cubicTo(93.75f, 109.35f, 93.67f, 110.98f, 92.44f, 113.6f);
            bezier111Path.lineTo(91.79f, 114.09f);
            bezier111Path.lineTo(91.79f, 116.79f);
            bezier111Path.cubicTo(91.79f, 116.79f, 93.83f, 118.34f, 93.67f, 119.65f);
            bezier111Path.cubicTo(93.67f, 119.65f, 98.9f, 119.89f, 101.03f, 125.45f);
            bezier111Path.lineTo(103.4f, 132.57f);
            bezier111Path.lineTo(102.75f, 133.39f);
            bezier111Path.cubicTo(102.75f, 133.39f, 105.61f, 142.55f, 106.84f, 148.11f);
            bezier111Path.cubicTo(106.84f, 148.11f, 109.45f, 152.93f, 109.29f, 154.24f);
            bezier111Path.cubicTo(109.29f, 154.24f, 107.57f, 156.29f, 106.51f, 156.29f);
            bezier111Path.cubicTo(106.51f, 156.29f, 104.05f, 154.41f, 103.81f, 152.93f);
            bezier111Path.cubicTo(103.81f, 152.93f, 104.05f, 148.68f, 104.55f, 147.86f);
            bezier111Path.cubicTo(104.55f, 147.86f, 98.98f, 138.46f, 99.8f, 135.02f);
            bezier111Path.lineTo(98.74f, 134.78f);
            bezier111Path.lineTo(98.33f, 132.49f);
            bezier111Path.lineTo(97.27f, 132.49f);
            bezier111Path.lineTo(96.37f, 142.79f);
            bezier111Path.cubicTo(96.37f, 142.79f, 98.25f, 145f, 98.17f, 155.47f);
            bezier111Path.cubicTo(98.17f, 155.47f, 97.92f, 191.53f, 98.82f, 194.81f);
            bezier111Path.lineTo(97.68f, 195.21f);
            bezier111Path.cubicTo(97.68f, 195.21f, 98.82f, 198.89f, 99.48f, 199.79f);
            bezier111Path.cubicTo(99.48f, 199.79f, 99.07f, 202.82f, 95.63f, 201.1f);
            bezier111Path.lineTo(93.51f, 195.46f);
            bezier111Path.lineTo(92.52f, 194.4f);
            bezier111Path.lineTo(91.79f, 169.94f);
            bezier111Path.cubicTo(91.79f, 169.94f, 88.27f, 156.61f, 88.35f, 155.22f);
            bezier111Path.lineTo(87.05f, 154.98f);
            bezier111Path.cubicTo(87.05f, 154.98f, 85.33f, 168.31f, 83.86f, 171.42f);
            bezier111Path.lineTo(81.89f, 194.48f);
            bezier111Path.lineTo(81.32f, 194.48f);
            bezier111Path.lineTo(81.24f, 197.26f);
            bezier111Path.cubicTo(81.24f, 197.26f, 78.54f, 197.8f, 76.41f, 199.63f);
            bezier111Path.cubicTo(76.41f, 199.63f, 74.29f, 200.69f, 72.82f, 199.55f);
            bezier111Path.cubicTo(72.82f, 199.55f, 74.45f, 195.62f, 77.31f, 195.3f);
            bezier111Path.lineTo(77.39f, 194.37f);
            bezier111Path.lineTo(76f, 194.07f);
            bezier111Path.lineTo(77.64f, 172.07f);
            bezier111Path.lineTo(77.97f, 154.24f);
            bezier111Path.cubicTo(77.97f, 154.24f, 77.97f, 144.02f, 79.6f, 141.32f);
            bezier111Path.lineTo(80.01f, 130.03f);
            bezier111Path.lineTo(79.44f, 130.12f);
            bezier111Path.cubicTo(79.44f, 130.12f, 76.74f, 133.71f, 75.84f, 134.94f);
            bezier111Path.cubicTo(75.84f, 134.94f, 75.19f, 137.97f, 69.95f, 145.49f);
            bezier111Path.lineTo(69.22f, 148.6f);
            bezier111Path.cubicTo(69.22f, 148.6f, 71.34f, 150.15f, 70.61f, 151.46f);
            bezier111Path.cubicTo(69.87f, 152.77f, 65.13f, 154.08f, 64.88f, 153.01f);
            bezier111Path.cubicTo(64.64f, 151.95f, 65.5f, 147.94f, 66.52f, 146.73f);
            bezier111Path.cubicTo(66.52f, 146.73f, 68.89f, 139.44f, 69.95f, 136.98f);
            bezier111Path.cubicTo(69.95f, 136.98f, 74.12f, 129.13f, 75.51f, 127.83f);
            bezier111Path.cubicTo(75.51f, 127.83f, 75.68f, 119.24f, 82.55f, 119.4f);
            bezier111Path.lineTo(84.84f, 118.75f);
            bezier111Path.lineTo(85.25f, 116.87f);
            bezier111Path.lineTo(86.15f, 116.54f);
            bezier111Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier111Path, paint);
            canvas.restore();
            
            // Bezier 112
            RectF bezier112Rect = CacheForLogo.bezier112Rect;
            bezier112Rect.set(104.72f, 114.38f, 151.11f, 197.85f);
            Path bezier112Path = CacheForLogo.bezier112Path;
            bezier112Path.reset();
            bezier112Path.moveTo(126.79f, 126.22f);
            bezier112Path.lineTo(126.79f, 123.71f);
            bezier112Path.cubicTo(126.79f, 123.71f, 123.65f, 119.32f, 125.13f, 117.19f);
            bezier112Path.cubicTo(125.13f, 117.19f, 129.41f, 109.86f, 133.17f, 118.86f);
            bezier112Path.cubicTo(133.17f, 118.86f, 133.99f, 119.56f, 132.02f, 122.89f);
            bezier112Path.cubicTo(132.02f, 122.89f, 130.88f, 124.85f, 131.15f, 126.49f);
            bezier112Path.cubicTo(131.15f, 126.49f, 132.46f, 127.63f, 132.73f, 128.67f);
            bezier112Path.cubicTo(132.73f, 128.67f, 138.13f, 129.1f, 138.51f, 132.76f);
            bezier112Path.lineTo(139.66f, 143.61f);
            bezier112Path.lineTo(147.02f, 152.11f);
            bezier112Path.cubicTo(147.02f, 152.11f, 151.16f, 152.98f, 151.1f, 154.89f);
            bezier112Path.cubicTo(151.05f, 156.8f, 149.96f, 157.67f, 149.96f, 157.67f);
            bezier112Path.cubicTo(149.96f, 157.67f, 146.91f, 157.73f, 146.74f, 155.17f);
            bezier112Path.cubicTo(146.74f, 155.17f, 137.37f, 146.22f, 137.04f, 145.13f);
            bezier112Path.lineTo(135.9f, 140.61f);
            bezier112Path.lineTo(135.08f, 140.61f);
            bezier112Path.lineTo(135.08f, 145.03f);
            bezier112Path.cubicTo(135.08f, 145.03f, 137.48f, 148.41f, 138.13f, 159.04f);
            bezier112Path.lineTo(140.97f, 190.17f);
            bezier112Path.lineTo(140.2f, 190.66f);
            bezier112Path.lineTo(140.26f, 192.08f);
            bezier112Path.lineTo(143.64f, 197.09f);
            bezier112Path.lineTo(143.58f, 197.86f);
            bezier112Path.lineTo(139.71f, 197.86f);
            bezier112Path.lineTo(137.53f, 194.09f);
            bezier112Path.lineTo(137.86f, 193.22f);
            bezier112Path.lineTo(137.64f, 191.48f);
            bezier112Path.lineTo(136.44f, 191.26f);
            bezier112Path.lineTo(136.44f, 185.97f);
            bezier112Path.cubicTo(136.44f, 185.97f, 132.95f, 172.94f, 132.9f, 172.67f);
            bezier112Path.cubicTo(132.84f, 172.39f, 130.01f, 161.05f, 130.06f, 160.4f);
            bezier112Path.cubicTo(130.12f, 159.75f, 129.79f, 158.87f, 129.79f, 158.87f);
            bezier112Path.lineTo(128.97f, 158.82f);
            bezier112Path.cubicTo(128.97f, 158.82f, 124.94f, 174.63f, 123.96f, 175.72f);
            bezier112Path.lineTo(122.48f, 189.84f);
            bezier112Path.lineTo(119.76f, 190.22f);
            bezier112Path.lineTo(119.7f, 194.04f);
            bezier112Path.lineTo(117.63f, 197.42f);
            bezier112Path.lineTo(114.2f, 197.69f);
            bezier112Path.lineTo(117.09f, 191.8f);
            bezier112Path.lineTo(117.09f, 189.57f);
            bezier112Path.lineTo(115.23f, 189.24f);
            bezier112Path.cubicTo(115.23f, 189.24f, 117.74f, 176.27f, 118.5f, 174.08f);
            bezier112Path.cubicTo(118.5f, 174.08f, 120.3f, 151.24f, 122.48f, 149.01f);
            bezier112Path.cubicTo(122.48f, 149.01f, 123.57f, 138.48f, 122.76f, 137.34f);
            bezier112Path.lineTo(121.45f, 137.17f);
            bezier112Path.cubicTo(121.45f, 137.17f, 121.5f, 139.95f, 118.07f, 144.48f);
            bezier112Path.cubicTo(118.07f, 144.48f, 114.41f, 149.11f, 110f, 152f);
            bezier112Path.lineTo(108.09f, 155.27f);
            bezier112Path.cubicTo(108.09f, 155.27f, 106.03f, 155.67f, 105.47f, 155.33f);
            bezier112Path.cubicTo(104.91f, 154.98f, 104.59f, 153.44f, 104.76f, 152.77f);
            bezier112Path.cubicTo(105.11f, 151.43f, 107.6f, 150.26f, 109.23f, 150.15f);
            bezier112Path.cubicTo(109.23f, 150.15f, 115.5f, 141.32f, 117.19f, 140.39f);
            bezier112Path.cubicTo(117.19f, 140.39f, 118.45f, 131.61f, 119.97f, 129.38f);
            bezier112Path.cubicTo(119.97f, 129.38f, 121.56f, 127.41f, 125.92f, 127.58f);
            bezier112Path.lineTo(126.79f, 126.22f);
            bezier112Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.lightGray);
            canvas.drawPath(bezier112Path, paint);
            
            // Bezier 113
            RectF bezier113Rect = CacheForLogo.bezier113Rect;
            bezier113Rect.set(104.72f, 114.38f, 151.11f, 197.85f);
            Path bezier113Path = CacheForLogo.bezier113Path;
            bezier113Path.reset();
            bezier113Path.moveTo(126.79f, 126.22f);
            bezier113Path.lineTo(126.79f, 123.71f);
            bezier113Path.cubicTo(126.79f, 123.71f, 123.65f, 119.32f, 125.13f, 117.19f);
            bezier113Path.cubicTo(125.13f, 117.19f, 129.41f, 109.86f, 133.17f, 118.86f);
            bezier113Path.cubicTo(133.17f, 118.86f, 133.99f, 119.56f, 132.02f, 122.89f);
            bezier113Path.cubicTo(132.02f, 122.89f, 130.88f, 124.85f, 131.15f, 126.49f);
            bezier113Path.cubicTo(131.15f, 126.49f, 132.46f, 127.63f, 132.73f, 128.67f);
            bezier113Path.cubicTo(132.73f, 128.67f, 138.13f, 129.1f, 138.51f, 132.76f);
            bezier113Path.lineTo(139.66f, 143.61f);
            bezier113Path.lineTo(147.02f, 152.11f);
            bezier113Path.cubicTo(147.02f, 152.11f, 151.16f, 152.98f, 151.1f, 154.89f);
            bezier113Path.cubicTo(151.05f, 156.8f, 149.96f, 157.67f, 149.96f, 157.67f);
            bezier113Path.cubicTo(149.96f, 157.67f, 146.91f, 157.73f, 146.74f, 155.17f);
            bezier113Path.cubicTo(146.74f, 155.17f, 137.37f, 146.22f, 137.04f, 145.13f);
            bezier113Path.lineTo(135.9f, 140.61f);
            bezier113Path.lineTo(135.08f, 140.61f);
            bezier113Path.lineTo(135.08f, 145.03f);
            bezier113Path.cubicTo(135.08f, 145.03f, 137.48f, 148.41f, 138.13f, 159.04f);
            bezier113Path.lineTo(140.97f, 190.17f);
            bezier113Path.lineTo(140.2f, 190.66f);
            bezier113Path.lineTo(140.26f, 192.08f);
            bezier113Path.lineTo(143.64f, 197.09f);
            bezier113Path.lineTo(143.58f, 197.86f);
            bezier113Path.lineTo(139.71f, 197.86f);
            bezier113Path.lineTo(137.53f, 194.09f);
            bezier113Path.lineTo(137.86f, 193.22f);
            bezier113Path.lineTo(137.64f, 191.48f);
            bezier113Path.lineTo(136.44f, 191.26f);
            bezier113Path.lineTo(136.44f, 185.97f);
            bezier113Path.cubicTo(136.44f, 185.97f, 132.95f, 172.94f, 132.9f, 172.67f);
            bezier113Path.cubicTo(132.84f, 172.39f, 130.01f, 161.05f, 130.06f, 160.4f);
            bezier113Path.cubicTo(130.12f, 159.75f, 129.79f, 158.87f, 129.79f, 158.87f);
            bezier113Path.lineTo(128.97f, 158.82f);
            bezier113Path.cubicTo(128.97f, 158.82f, 124.94f, 174.63f, 123.96f, 175.72f);
            bezier113Path.lineTo(122.48f, 189.84f);
            bezier113Path.lineTo(119.76f, 190.22f);
            bezier113Path.lineTo(119.7f, 194.04f);
            bezier113Path.lineTo(117.63f, 197.42f);
            bezier113Path.lineTo(114.2f, 197.69f);
            bezier113Path.lineTo(117.09f, 191.8f);
            bezier113Path.lineTo(117.09f, 189.57f);
            bezier113Path.lineTo(115.23f, 189.24f);
            bezier113Path.cubicTo(115.23f, 189.24f, 117.74f, 176.27f, 118.5f, 174.08f);
            bezier113Path.cubicTo(118.5f, 174.08f, 120.3f, 151.24f, 122.48f, 149.01f);
            bezier113Path.cubicTo(122.48f, 149.01f, 123.57f, 138.48f, 122.76f, 137.34f);
            bezier113Path.lineTo(121.45f, 137.17f);
            bezier113Path.cubicTo(121.45f, 137.17f, 121.5f, 139.95f, 118.07f, 144.48f);
            bezier113Path.cubicTo(118.07f, 144.48f, 114.41f, 149.11f, 110f, 152f);
            bezier113Path.lineTo(108.09f, 155.27f);
            bezier113Path.cubicTo(108.09f, 155.27f, 106.03f, 155.67f, 105.47f, 155.33f);
            bezier113Path.cubicTo(104.91f, 154.98f, 104.59f, 153.44f, 104.76f, 152.77f);
            bezier113Path.cubicTo(105.11f, 151.43f, 107.6f, 150.26f, 109.23f, 150.15f);
            bezier113Path.cubicTo(109.23f, 150.15f, 115.5f, 141.32f, 117.19f, 140.39f);
            bezier113Path.cubicTo(117.19f, 140.39f, 118.45f, 131.61f, 119.97f, 129.38f);
            bezier113Path.cubicTo(119.97f, 129.38f, 121.56f, 127.41f, 125.92f, 127.58f);
            bezier113Path.lineTo(126.79f, 126.22f);
            bezier113Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStrokeWidth(1f);
            canvas.save();
            paint.setStyle(Paint.Style.STROKE);
            paint.setColor(strokeColor);
            canvas.drawPath(bezier113Path, paint);
            canvas.restore();
            
            // Bezier 114
            RectF bezier114Rect = CacheForLogo.bezier114Rect;
            bezier114Rect.set(52.86f, 113.23f, 132.23f, 249.7f);
            Path bezier114Path = CacheForLogo.bezier114Path;
            bezier114Path.reset();
            bezier114Path.moveTo(53.19f, 186.03f);
            bezier114Path.lineTo(52.86f, 181.2f);
            bezier114Path.cubicTo(52.86f, 181.2f, 53.75f, 178.06f, 56.08f, 177.23f);
            bezier114Path.cubicTo(56.08f, 177.23f, 66.19f, 156.2f, 70.69f, 151.37f);
            bezier114Path.cubicTo(70.69f, 151.37f, 71.02f, 136.03f, 85.52f, 135.7f);
            bezier114Path.cubicTo(85.52f, 135.7f, 86.36f, 133.2f, 87.94f, 132.62f);
            bezier114Path.lineTo(87.77f, 126.78f);
            bezier114Path.cubicTo(87.77f, 126.78f, 86.02f, 125.45f, 85.52f, 124.12f);
            bezier114Path.lineTo(85.61f, 121.87f);
            bezier114Path.lineTo(85.94f, 117.45f);
            bezier114Path.cubicTo(85.94f, 117.45f, 91.86f, 107.78f, 99.11f, 117.7f);
            bezier114Path.cubicTo(99.11f, 117.7f, 99.61f, 124.95f, 97.77f, 126.53f);
            bezier114Path.lineTo(95.77f, 129.37f);
            bezier114Path.lineTo(95.94f, 133.87f);
            bezier114Path.cubicTo(95.94f, 133.87f, 97.52f, 135.53f, 97.52f, 136.28f);
            bezier114Path.cubicTo(97.52f, 136.28f, 106.36f, 136.53f, 111.27f, 148.87f);
            bezier114Path.lineTo(115.02f, 158.53f);
            bezier114Path.lineTo(125.02f, 171.2f);
            bezier114Path.cubicTo(125.02f, 171.2f, 133.94f, 173.62f, 131.94f, 177.62f);
            bezier114Path.cubicTo(131.94f, 177.62f, 130.69f, 180.87f, 126.36f, 180.12f);
            bezier114Path.cubicTo(126.36f, 180.12f, 121.86f, 177.62f, 123.36f, 174.53f);
            bezier114Path.cubicTo(123.36f, 174.53f, 109.36f, 163.87f, 109.69f, 160.87f);
            bezier114Path.lineTo(106.69f, 159.95f);
            bezier114Path.lineTo(105.94f, 157.45f);
            bezier114Path.lineTo(104.86f, 157.37f);
            bezier114Path.lineTo(102.52f, 174.87f);
            bezier114Path.lineTo(104.11f, 223.03f);
            bezier114Path.lineTo(102.52f, 223.53f);
            bezier114Path.lineTo(101.27f, 242.7f);
            bezier114Path.cubicTo(101.27f, 242.7f, 103.52f, 247.7f, 102.69f, 249.45f);
            bezier114Path.lineTo(96.27f, 249.45f);
            bezier114Path.cubicTo(96.27f, 249.45f, 94.94f, 244.28f, 96.36f, 242.78f);
            bezier114Path.lineTo(96.36f, 229.7f);
            bezier114Path.cubicTo(96.36f, 229.7f, 94.44f, 224.28f, 94.86f, 223.53f);
            bezier114Path.lineTo(88.27f, 223.53f);
            bezier114Path.lineTo(88.52f, 192.2f);
            bezier114Path.lineTo(86.77f, 192.2f);
            bezier114Path.lineTo(80.44f, 221.7f);
            bezier114Path.lineTo(76.44f, 222.12f);
            bezier114Path.cubicTo(76.44f, 222.12f, 74.11f, 233.7f, 72.61f, 235.28f);
            bezier114Path.lineTo(72.69f, 245.7f);
            bezier114Path.lineTo(69.27f, 249.7f);
            bezier114Path.lineTo(63.86f, 248.78f);
            bezier114Path.cubicTo(63.86f, 248.78f, 65.61f, 243.28f, 68.36f, 241.03f);
            bezier114Path.cubicTo(68.36f, 241.03f, 66.86f, 207.12f, 71.77f, 199.7f);
            bezier114Path.lineTo(73.94f, 178.95f);
            bezier114Path.cubicTo(73.94f, 178.95f, 75.52f, 167.12f, 78.69f, 165.2f);
            bezier114Path.cubicTo(78.69f, 165.2f, 79.86f, 157.12f, 75.86f, 154.37f);
            bezier114Path.cubicTo(75.86f, 154.37f, 69.27f, 166.87f, 63.77f, 172.28f);
            bezier114Path.lineTo(59.02f, 178.37f);
            bezier114Path.cubicTo(59.02f, 178.37f, 58.37f, 183.85f, 56.69f, 185.7f);
            bezier114Path.cubicTo(56.1f, 186.35f, 53.19f, 186.03f, 53.19f, 186.03f);
            bezier114Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.yellow);
            canvas.drawPath(bezier114Path, paint);
            
            // Bezier 115
            RectF bezier115Rect = CacheForLogo.bezier115Rect;
            bezier115Rect.set(124.42f, 105.01f, 192.37f, 253.63f);
            Path bezier115Path = CacheForLogo.bezier115Path;
            bezier115Path.reset();
            bezier115Path.moveTo(156.98f, 123.57f);
            bezier115Path.lineTo(156.98f, 120.95f);
            bezier115Path.cubicTo(156.98f, 120.95f, 154.1f, 117.45f, 154.1f, 114.95f);
            bezier115Path.cubicTo(154.1f, 114.95f, 154.11f, 110.05f, 154.73f, 108.57f);
            bezier115Path.cubicTo(156.01f, 105.51f, 164.53f, 101.54f, 167.86f, 110.57f);
            bezier115Path.cubicTo(168.6f, 112.59f, 168.48f, 115.07f, 166.61f, 119.07f);
            bezier115Path.lineTo(165.61f, 119.82f);
            bezier115Path.lineTo(165.61f, 123.95f);
            bezier115Path.cubicTo(165.61f, 123.95f, 168.73f, 126.32f, 168.48f, 128.32f);
            bezier115Path.cubicTo(168.48f, 128.32f, 176.48f, 128.7f, 179.73f, 137.2f);
            bezier115Path.lineTo(183.36f, 148.07f);
            bezier115Path.lineTo(182.36f, 149.32f);
            bezier115Path.cubicTo(182.36f, 149.32f, 186.73f, 163.32f, 188.61f, 171.82f);
            bezier115Path.cubicTo(188.61f, 171.82f, 192.61f, 179.2f, 192.36f, 181.2f);
            bezier115Path.cubicTo(192.36f, 181.2f, 189.73f, 184.32f, 188.11f, 184.32f);
            bezier115Path.cubicTo(188.11f, 184.32f, 184.36f, 181.45f, 183.98f, 179.2f);
            bezier115Path.cubicTo(183.98f, 179.2f, 184.36f, 172.7f, 185.11f, 171.45f);
            bezier115Path.cubicTo(185.11f, 171.45f, 176.61f, 157.07f, 177.86f, 151.82f);
            bezier115Path.lineTo(176.23f, 151.45f);
            bezier115Path.lineTo(175.61f, 147.95f);
            bezier115Path.lineTo(173.98f, 147.95f);
            bezier115Path.lineTo(172.61f, 163.7f);
            bezier115Path.cubicTo(172.61f, 163.7f, 175.48f, 167.07f, 175.36f, 183.07f);
            bezier115Path.cubicTo(175.36f, 183.07f, 174.98f, 238.2f, 176.36f, 243.2f);
            bezier115Path.lineTo(174.61f, 243.82f);
            bezier115Path.cubicTo(174.61f, 243.82f, 176.36f, 249.45f, 177.36f, 250.82f);
            bezier115Path.cubicTo(177.36f, 250.82f, 176.73f, 255.45f, 171.48f, 252.82f);
            bezier115Path.lineTo(168.23f, 244.2f);
            bezier115Path.lineTo(166.73f, 242.57f);
            bezier115Path.lineTo(165.61f, 205.2f);
            bezier115Path.cubicTo(165.61f, 205.2f, 160.23f, 184.82f, 160.35f, 182.7f);
            bezier115Path.lineTo(158.35f, 182.32f);
            bezier115Path.cubicTo(158.35f, 182.32f, 155.73f, 202.7f, 153.48f, 207.45f);
            bezier115Path.lineTo(150.48f, 242.7f);
            bezier115Path.lineTo(149.6f, 242.7f);
            bezier115Path.lineTo(149.48f, 246.95f);
            bezier115Path.cubicTo(149.48f, 246.95f, 145.35f, 247.78f, 142.1f, 250.57f);
            bezier115Path.cubicTo(142.1f, 250.57f, 138.85f, 252.2f, 136.6f, 250.45f);
            bezier115Path.cubicTo(136.6f, 250.45f, 139.1f, 244.45f, 143.48f, 243.95f);
            bezier115Path.lineTo(143.6f, 242.53f);
            bezier115Path.lineTo(141.48f, 242.07f);
            bezier115Path.lineTo(143.98f, 208.45f);
            bezier115Path.lineTo(144.48f, 181.2f);
            bezier115Path.cubicTo(144.48f, 181.2f, 144.48f, 165.57f, 146.98f, 161.45f);
            bezier115Path.lineTo(147.6f, 144.2f);
            bezier115Path.lineTo(146.73f, 144.32f);
            bezier115Path.cubicTo(146.73f, 144.32f, 142.6f, 149.82f, 141.23f, 151.7f);
            bezier115Path.cubicTo(141.23f, 151.7f, 140.23f, 156.32f, 132.23f, 167.82f);
            bezier115Path.lineTo(131.1f, 172.57f);
            bezier115Path.cubicTo(131.1f, 172.57f, 134.35f, 174.95f, 133.23f, 176.95f);
            bezier115Path.cubicTo(132.1f, 178.95f, 124.86f, 180.95f, 124.48f, 179.32f);
            bezier115Path.cubicTo(124.11f, 177.7f, 125.43f, 171.57f, 126.98f, 169.71f);
            bezier115Path.cubicTo(126.98f, 169.71f, 130.6f, 158.57f, 132.23f, 154.82f);
            bezier115Path.cubicTo(132.23f, 154.82f, 138.6f, 142.82f, 140.73f, 140.82f);
            bezier115Path.cubicTo(140.73f, 140.82f, 140.98f, 127.7f, 151.48f, 127.95f);
            bezier115Path.lineTo(154.98f, 126.95f);
            bezier115Path.lineTo(155.6f, 124.07f);
            bezier115Path.lineTo(156.98f, 123.57f);
            bezier115Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.teal);
            canvas.drawPath(bezier115Path, paint);
            
            // Bezier 116
            RectF bezier116Rect = CacheForLogo.bezier116Rect;
            bezier116Rect.set(185.36f, 120.26f, 256.27f, 247.86f);
            Path bezier116Path = CacheForLogo.bezier116Path;
            bezier116Path.reset();
            bezier116Path.moveTo(219.11f, 138.36f);
            bezier116Path.lineTo(219.11f, 134.53f);
            bezier116Path.cubicTo(219.11f, 134.53f, 214.31f, 127.82f, 216.56f, 124.57f);
            bezier116Path.cubicTo(216.56f, 124.57f, 223.11f, 113.36f, 228.86f, 127.11f);
            bezier116Path.cubicTo(228.86f, 127.11f, 230.11f, 128.19f, 227.11f, 133.28f);
            bezier116Path.cubicTo(227.11f, 133.28f, 225.36f, 136.28f, 225.77f, 138.78f);
            bezier116Path.cubicTo(225.77f, 138.78f, 227.77f, 140.53f, 228.19f, 142.11f);
            bezier116Path.cubicTo(228.19f, 142.11f, 236.44f, 142.78f, 237.02f, 148.36f);
            bezier116Path.lineTo(238.77f, 164.94f);
            bezier116Path.lineTo(250.02f, 177.94f);
            bezier116Path.cubicTo(250.02f, 177.94f, 256.36f, 179.28f, 256.27f, 182.19f);
            bezier116Path.cubicTo(256.19f, 185.11f, 254.52f, 186.44f, 254.52f, 186.44f);
            bezier116Path.cubicTo(254.52f, 186.44f, 249.86f, 186.53f, 249.61f, 182.61f);
            bezier116Path.cubicTo(249.61f, 182.61f, 235.27f, 168.94f, 234.77f, 167.28f);
            bezier116Path.lineTo(233.02f, 160.36f);
            bezier116Path.lineTo(231.77f, 160.36f);
            bezier116Path.lineTo(231.77f, 167.11f);
            bezier116Path.cubicTo(231.77f, 167.11f, 235.44f, 172.28f, 236.44f, 188.53f);
            bezier116Path.lineTo(240.77f, 236.11f);
            bezier116Path.lineTo(239.61f, 236.86f);
            bezier116Path.lineTo(239.69f, 239.03f);
            bezier116Path.lineTo(244.86f, 246.69f);
            bezier116Path.lineTo(244.77f, 247.86f);
            bezier116Path.lineTo(238.86f, 247.86f);
            bezier116Path.lineTo(235.52f, 242.11f);
            bezier116Path.lineTo(236.02f, 240.78f);
            bezier116Path.lineTo(235.69f, 238.11f);
            bezier116Path.lineTo(233.86f, 237.78f);
            bezier116Path.lineTo(233.86f, 229.69f);
            bezier116Path.cubicTo(233.86f, 229.69f, 228.52f, 209.78f, 228.44f, 209.36f);
            bezier116Path.cubicTo(228.36f, 208.94f, 224.02f, 191.61f, 224.11f, 190.61f);
            bezier116Path.cubicTo(224.19f, 189.61f, 223.69f, 188.28f, 223.69f, 188.28f);
            bezier116Path.lineTo(222.44f, 188.19f);
            bezier116Path.cubicTo(222.44f, 188.19f, 216.27f, 212.36f, 214.77f, 214.03f);
            bezier116Path.lineTo(212.52f, 235.61f);
            bezier116Path.lineTo(208.36f, 236.19f);
            bezier116Path.lineTo(208.27f, 242.03f);
            bezier116Path.lineTo(205.11f, 247.19f);
            bezier116Path.lineTo(199.86f, 247.61f);
            bezier116Path.lineTo(204.27f, 238.61f);
            bezier116Path.lineTo(204.27f, 235.19f);
            bezier116Path.lineTo(201.44f, 234.69f);
            bezier116Path.cubicTo(201.44f, 234.69f, 205.27f, 214.86f, 206.44f, 211.53f);
            bezier116Path.cubicTo(206.44f, 211.53f, 209.19f, 176.61f, 212.52f, 173.19f);
            bezier116Path.cubicTo(212.52f, 173.19f, 214.19f, 157.11f, 212.94f, 155.36f);
            bezier116Path.lineTo(210.94f, 155.11f);
            bezier116Path.cubicTo(210.94f, 155.11f, 211.02f, 159.36f, 205.77f, 166.28f);
            bezier116Path.cubicTo(205.77f, 166.28f, 200.19f, 173.36f, 193.44f, 177.78f);
            bezier116Path.lineTo(190.52f, 182.78f);
            bezier116Path.cubicTo(190.52f, 182.78f, 187.37f, 183.39f, 186.52f, 182.86f);
            bezier116Path.cubicTo(185.66f, 182.32f, 185.17f, 179.97f, 185.44f, 178.94f);
            bezier116Path.cubicTo(185.97f, 176.9f, 189.77f, 175.11f, 192.27f, 174.94f);
            bezier116Path.cubicTo(192.27f, 174.94f, 201.86f, 161.44f, 204.44f, 160.03f);
            bezier116Path.cubicTo(204.44f, 160.03f, 206.36f, 146.61f, 208.69f, 143.19f);
            bezier116Path.cubicTo(208.69f, 143.19f, 211.11f, 140.19f, 217.77f, 140.44f);
            bezier116Path.lineTo(219.11f, 138.36f);
            bezier116Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.green);
            canvas.drawPath(bezier116Path, paint);
            
            // Bezier 117
            RectF bezier117Rect = CacheForLogo.bezier117Rect;
            bezier117Rect.set(232.04f, 47.71f, 325.3f, 79.82f);
            Path bezier117Path = CacheForLogo.bezier117Path;
            bezier117Path.reset();
            bezier117Path.moveTo(324.89f, 61.11f);
            bezier117Path.cubicTo(324.78f, 61.84f, 324.69f, 62.58f, 324.63f, 63.31f);
            bezier117Path.lineTo(323.91f, 63.27f);
            bezier117Path.cubicTo(323.56f, 63.24f, 323.33f, 63.15f, 323.24f, 63f);
            bezier117Path.cubicTo(323.14f, 62.86f, 323.08f, 62.69f, 323.04f, 62.5f);
            bezier117Path.cubicTo(322.88f, 61.54f, 322.52f, 60.79f, 321.94f, 60.27f);
            bezier117Path.cubicTo(321.37f, 59.74f, 320.58f, 59.47f, 319.59f, 59.47f);
            bezier117Path.cubicTo(318.56f, 59.47f, 317.69f, 59.72f, 316.95f, 60.22f);
            bezier117Path.cubicTo(316.21f, 60.71f, 315.84f, 61.43f, 315.84f, 62.35f);
            bezier117Path.cubicTo(315.84f, 63f, 316.12f, 63.64f, 316.68f, 64.3f);
            bezier117Path.cubicTo(317.25f, 64.95f, 317.91f, 65.62f, 318.68f, 66.29f);
            bezier117Path.cubicTo(319.25f, 66.8f, 319.86f, 67.33f, 320.5f, 67.87f);
            bezier117Path.cubicTo(321.14f, 68.42f, 321.71f, 68.97f, 322.23f, 69.53f);
            bezier117Path.cubicTo(322.74f, 70.09f, 323.17f, 70.67f, 323.5f, 71.28f);
            bezier117Path.cubicTo(323.83f, 71.89f, 324f, 72.51f, 324f, 73.16f);
            bezier117Path.cubicTo(324f, 74.08f, 323.79f, 74.95f, 323.38f, 75.75f);
            bezier117Path.cubicTo(322.96f, 76.55f, 322.39f, 77.24f, 321.67f, 77.83f);
            bezier117Path.cubicTo(320.95f, 78.43f, 320.11f, 78.9f, 319.13f, 79.25f);
            bezier117Path.cubicTo(318.15f, 79.6f, 317.12f, 79.78f, 316.03f, 79.78f);
            bezier117Path.cubicTo(314.92f, 79.78f, 313.83f, 79.68f, 312.77f, 79.49f);
            bezier117Path.cubicTo(311.71f, 79.3f, 310.72f, 78.99f, 309.8f, 78.58f);
            bezier117Path.cubicTo(310.05f, 77.62f, 310.25f, 76.73f, 310.39f, 75.91f);
            bezier117Path.cubicTo(310.54f, 75.1f, 310.64f, 74.18f, 310.71f, 73.15f);
            bezier117Path.lineTo(311.19f, 73.15f);
            bezier117Path.cubicTo(311.96f, 73.15f, 312.34f, 73.43f, 312.34f, 73.97f);
            bezier117Path.cubicTo(312.27f, 75.31f, 312.59f, 76.35f, 313.28f, 77.09f);
            bezier117Path.cubicTo(313.96f, 77.83f, 314.92f, 78.19f, 316.13f, 78.19f);
            bezier117Path.cubicTo(317.38f, 78.19f, 318.4f, 77.87f, 319.2f, 77.21f);
            bezier117Path.cubicTo(320f, 76.55f, 320.4f, 75.7f, 320.4f, 74.64f);
            bezier117Path.cubicTo(320.4f, 74.16f, 320.28f, 73.7f, 320.04f, 73.25f);
            bezier117Path.cubicTo(319.8f, 72.8f, 319.49f, 72.38f, 319.11f, 71.98f);
            bezier117Path.cubicTo(318.72f, 71.58f, 318.29f, 71.18f, 317.81f, 70.78f);
            bezier117Path.cubicTo(317.33f, 70.38f, 316.83f, 69.97f, 316.33f, 69.55f);
            bezier117Path.cubicTo(315.36f, 68.75f, 314.49f, 67.91f, 313.71f, 67.03f);
            bezier117Path.cubicTo(312.92f, 66.15f, 312.53f, 65.14f, 312.53f, 63.99f);
            bezier117Path.cubicTo(312.53f, 63.12f, 312.73f, 62.32f, 313.13f, 61.59f);
            bezier117Path.cubicTo(313.53f, 60.85f, 314.08f, 60.22f, 314.76f, 59.69f);
            bezier117Path.cubicTo(315.45f, 59.16f, 316.25f, 58.75f, 317.17f, 58.44f);
            bezier117Path.cubicTo(318.08f, 58.14f, 319.04f, 57.99f, 320.07f, 57.99f);
            bezier117Path.cubicTo(321.92f, 57.99f, 323.67f, 58.42f, 325.3f, 59.28f);
            bezier117Path.cubicTo(325.14f, 59.76f, 325f, 60.37f, 324.89f, 61.11f);
            bezier117Path.close();
            bezier117Path.moveTo(309.99f, 60.72f);
            bezier117Path.cubicTo(309.76f, 61.52f, 309.59f, 62.42f, 309.46f, 63.41f);
            bezier117Path.lineTo(308.69f, 63.41f);
            bezier117Path.cubicTo(308.37f, 62.83f, 307.91f, 62.55f, 307.3f, 62.55f);
            bezier117Path.cubicTo(306.79f, 62.55f, 306.2f, 62.77f, 305.55f, 63.22f);
            bezier117Path.cubicTo(304.89f, 63.66f, 304.24f, 64.27f, 303.58f, 65.04f);
            bezier117Path.cubicTo(302.92f, 65.81f, 302.28f, 66.69f, 301.66f, 67.71f);
            bezier117Path.cubicTo(301.04f, 68.71f, 300.49f, 69.78f, 300f, 70.92f);
            bezier117Path.cubicTo(299.52f, 72.06f, 299.14f, 73.22f, 298.85f, 74.4f);
            bezier117Path.cubicTo(298.56f, 75.58f, 298.42f, 76.72f, 298.42f, 77.81f);
            bezier117Path.cubicTo(298.42f, 78.25f, 298.47f, 78.69f, 298.56f, 79.1f);
            bezier117Path.cubicTo(297.92f, 79.17f, 297.27f, 79.26f, 296.62f, 79.39f);
            bezier117Path.cubicTo(295.96f, 79.52f, 295.32f, 79.66f, 294.68f, 79.82f);
            bezier117Path.cubicTo(294.39f, 79.66f, 294.24f, 79.47f, 294.24f, 79.25f);
            bezier117Path.cubicTo(294.24f, 79.06f, 294.27f, 78.83f, 294.34f, 78.58f);
            bezier117Path.cubicTo(294.4f, 78.32f, 294.47f, 78.11f, 294.53f, 77.95f);
            bezier117Path.cubicTo(294.59f, 77.79f, 294.66f, 77.6f, 294.72f, 77.38f);
            bezier117Path.cubicTo(294.79f, 77.15f, 294.85f, 76.83f, 294.92f, 76.42f);
            bezier117Path.lineTo(297.03f, 65.52f);
            bezier117Path.cubicTo(297.25f, 64.27f, 297.39f, 63.42f, 297.46f, 62.98f);
            bezier117Path.cubicTo(297.53f, 62.53f, 297.57f, 62.21f, 297.6f, 62.02f);
            bezier117Path.cubicTo(297.6f, 61.6f, 297.46f, 61.39f, 297.17f, 61.39f);
            bezier117Path.cubicTo(297.04f, 61.39f, 296.86f, 61.44f, 296.62f, 61.53f);
            bezier117Path.cubicTo(296.38f, 61.63f, 296.13f, 61.74f, 295.85f, 61.87f);
            bezier117Path.cubicTo(295.58f, 62f, 295.33f, 62.11f, 295.08f, 62.21f);
            bezier117Path.cubicTo(294.84f, 62.3f, 294.66f, 62.35f, 294.53f, 62.35f);
            bezier117Path.cubicTo(294.37f, 62.35f, 294.24f, 62.26f, 294.13f, 62.06f);
            bezier117Path.cubicTo(294.01f, 61.87f, 293.92f, 61.65f, 293.86f, 61.39f);
            bezier117Path.cubicTo(294.44f, 61.04f, 295.12f, 60.66f, 295.9f, 60.26f);
            bezier117Path.cubicTo(296.69f, 59.86f, 297.44f, 59.5f, 298.16f, 59.16f);
            bezier117Path.cubicTo(298.88f, 58.82f, 299.52f, 58.54f, 300.08f, 58.32f);
            bezier117Path.cubicTo(300.64f, 58.1f, 301f, 57.98f, 301.16f, 57.98f);
            bezier117Path.cubicTo(301.38f, 57.98f, 301.57f, 58.04f, 301.73f, 58.15f);
            bezier117Path.cubicTo(301.89f, 58.27f, 301.97f, 58.45f, 301.97f, 58.7f);
            bezier117Path.cubicTo(301.97f, 58.77f, 301.96f, 58.88f, 301.95f, 59.04f);
            bezier117Path.cubicTo(301.93f, 59.2f, 301.91f, 59.36f, 301.88f, 59.52f);
            bezier117Path.lineTo(300.34f, 66.72f);
            bezier117Path.lineTo(300.53f, 66.72f);
            bezier117Path.cubicTo(302.26f, 63.65f, 303.84f, 61.42f, 305.26f, 60.05f);
            bezier117Path.cubicTo(306.69f, 58.67f, 308.08f, 57.98f, 309.46f, 57.98f);
            bezier117Path.cubicTo(309.75f, 57.98f, 310.01f, 58.03f, 310.25f, 58.13f);
            bezier117Path.cubicTo(310.49f, 58.22f, 310.66f, 58.32f, 310.76f, 58.42f);
            bezier117Path.cubicTo(310.47f, 59.15f, 310.21f, 59.92f, 309.99f, 60.72f);
            bezier117Path.close();
            bezier117Path.moveTo(284.81f, 60.02f);
            bezier117Path.cubicTo(284.35f, 59.94f, 283.91f, 59.9f, 283.49f, 59.9f);
            bezier117Path.cubicTo(282.21f, 59.9f, 281.06f, 60.24f, 280.04f, 60.91f);
            bezier117Path.cubicTo(279.01f, 61.58f, 278.13f, 62.53f, 277.4f, 63.74f);
            bezier117Path.cubicTo(276.66f, 64.96f, 276.09f, 66.4f, 275.69f, 68.06f);
            bezier117Path.cubicTo(275.29f, 69.73f, 275.09f, 71.53f, 275.09f, 73.49f);
            bezier117Path.cubicTo(275.09f, 74.64f, 275.24f, 75.46f, 275.52f, 75.96f);
            bezier117Path.cubicTo(275.81f, 76.46f, 276.21f, 76.7f, 276.72f, 76.7f);
            bezier117Path.cubicTo(277.36f, 76.7f, 278.05f, 76.41f, 278.79f, 75.84f);
            bezier117Path.cubicTo(279.52f, 75.26f, 280.24f, 74.51f, 280.92f, 73.58f);
            bezier117Path.cubicTo(281.61f, 72.65f, 282.28f, 71.61f, 282.92f, 70.44f);
            bezier117Path.cubicTo(283.56f, 69.27f, 284.11f, 68.08f, 284.57f, 66.86f);
            bezier117Path.cubicTo(285.04f, 65.65f, 285.4f, 64.47f, 285.68f, 63.33f);
            bezier117Path.cubicTo(285.95f, 62.2f, 286.08f, 61.2f, 286.09f, 60.33f);
            bezier117Path.cubicTo(285.7f, 60.21f, 285.28f, 60.1f, 284.81f, 60.02f);
            bezier117Path.close();
            bezier117Path.moveTo(287.38f, 76.8f);
            bezier117Path.cubicTo(287.6f, 76.8f, 287.83f, 76.74f, 288.08f, 76.63f);
            bezier117Path.cubicTo(288.32f, 76.52f, 288.56f, 76.39f, 288.8f, 76.25f);
            bezier117Path.cubicTo(289.04f, 76.1f, 289.26f, 75.98f, 289.47f, 75.86f);
            bezier117Path.cubicTo(289.68f, 75.75f, 289.84f, 75.7f, 289.97f, 75.7f);
            bezier117Path.cubicTo(290.29f, 75.7f, 290.51f, 76.02f, 290.64f, 76.66f);
            bezier117Path.cubicTo(290.07f, 77.07f, 289.47f, 77.46f, 288.84f, 77.83f);
            bezier117Path.cubicTo(288.22f, 78.2f, 287.62f, 78.53f, 287.04f, 78.82f);
            bezier117Path.cubicTo(286.47f, 79.1f, 285.92f, 79.33f, 285.41f, 79.51f);
            bezier117Path.cubicTo(284.9f, 79.69f, 284.48f, 79.77f, 284.16f, 79.77f);
            bezier117Path.cubicTo(283.81f, 79.77f, 283.49f, 79.7f, 283.2f, 79.56f);
            bezier117Path.cubicTo(282.92f, 79.41f, 282.77f, 79.1f, 282.77f, 78.62f);
            bezier117Path.cubicTo(282.77f, 78.46f, 282.79f, 78.28f, 282.82f, 78.07f);
            bezier117Path.cubicTo(282.85f, 77.86f, 282.9f, 77.65f, 282.96f, 77.42f);
            bezier117Path.lineTo(284.36f, 71.23f);
            bezier117Path.lineTo(284.16f, 71.23f);
            bezier117Path.cubicTo(283.37f, 72.8f, 282.55f, 74.13f, 281.71f, 75.21f);
            bezier117Path.cubicTo(280.88f, 76.3f, 280.06f, 77.18f, 279.25f, 77.86f);
            bezier117Path.cubicTo(278.43f, 78.53f, 277.63f, 79.01f, 276.84f, 79.32f);
            bezier117Path.cubicTo(276.06f, 79.62f, 275.32f, 79.77f, 274.61f, 79.77f);
            bezier117Path.cubicTo(274.13f, 79.77f, 273.68f, 79.7f, 273.24f, 79.56f);
            bezier117Path.cubicTo(272.81f, 79.41f, 272.43f, 79.16f, 272.09f, 78.81f);
            bezier117Path.cubicTo(271.76f, 78.46f, 271.49f, 77.98f, 271.3f, 77.37f);
            bezier117Path.cubicTo(271.11f, 76.77f, 271.01f, 76f, 271.01f, 75.07f);
            bezier117Path.cubicTo(271.01f, 72.35f, 271.45f, 69.93f, 272.33f, 67.82f);
            bezier117Path.cubicTo(273.21f, 65.71f, 274.31f, 63.93f, 275.62f, 62.47f);
            bezier117Path.cubicTo(276.93f, 61.01f, 278.35f, 59.9f, 279.87f, 59.13f);
            bezier117Path.cubicTo(281.39f, 58.37f, 282.81f, 57.98f, 284.12f, 57.98f);
            bezier117Path.cubicTo(285.14f, 57.98f, 286.13f, 58.03f, 287.07f, 58.13f);
            bezier117Path.cubicTo(288.01f, 58.22f, 289.08f, 58.4f, 290.26f, 58.65f);
            bezier117Path.lineTo(286.95f, 75.31f);
            bezier117Path.cubicTo(286.88f, 75.63f, 286.85f, 75.92f, 286.85f, 76.18f);
            bezier117Path.cubicTo(286.85f, 76.59f, 287.03f, 76.8f, 287.38f, 76.8f);
            bezier117Path.close();
            bezier117Path.moveTo(264.85f, 60.36f);
            bezier117Path.cubicTo(264.41f, 59.89f, 263.83f, 59.66f, 263.09f, 59.66f);
            bezier117Path.cubicTo(262.33f, 59.66f, 261.61f, 59.89f, 260.96f, 60.36f);
            bezier117Path.cubicTo(260.3f, 60.82f, 259.71f, 61.44f, 259.18f, 62.2f);
            bezier117Path.cubicTo(258.65f, 62.97f, 258.21f, 63.86f, 257.86f, 64.87f);
            bezier117Path.cubicTo(257.51f, 65.88f, 257.25f, 66.92f, 257.09f, 68.01f);
            bezier117Path.cubicTo(260.13f, 67.75f, 262.29f, 67.13f, 263.57f, 66.14f);
            bezier117Path.cubicTo(264.85f, 65.15f, 265.49f, 63.9f, 265.5f, 62.4f);
            bezier117Path.cubicTo(265.5f, 61.5f, 265.28f, 60.82f, 264.85f, 60.36f);
            bezier117Path.close();
            bezier117Path.moveTo(268.4f, 65.54f);
            bezier117Path.cubicTo(267.77f, 66.39f, 266.91f, 67.09f, 265.81f, 67.65f);
            bezier117Path.cubicTo(264.7f, 68.21f, 263.4f, 68.64f, 261.89f, 68.92f);
            bezier117Path.cubicTo(260.39f, 69.21f, 258.74f, 69.39f, 256.95f, 69.45f);
            bezier117Path.cubicTo(256.92f, 69.77f, 256.89f, 70.09f, 256.88f, 70.41f);
            bezier117Path.cubicTo(256.86f, 70.73f, 256.85f, 71.07f, 256.85f, 71.42f);
            bezier117Path.cubicTo(256.85f, 72.16f, 256.92f, 72.88f, 257.04f, 73.58f);
            bezier117Path.cubicTo(257.17f, 74.28f, 257.4f, 74.91f, 257.72f, 75.45f);
            bezier117Path.cubicTo(258.04f, 76f, 258.48f, 76.44f, 259.04f, 76.77f);
            bezier117Path.cubicTo(259.6f, 77.11f, 260.31f, 77.27f, 261.17f, 77.28f);
            bezier117Path.cubicTo(262f, 77.28f, 262.87f, 77.13f, 263.76f, 76.82f);
            bezier117Path.cubicTo(264.66f, 76.52f, 265.57f, 76.05f, 266.5f, 75.4f);
            bezier117Path.cubicTo(266.82f, 75.18f, 267.04f, 75.07f, 267.17f, 75.07f);
            bezier117Path.cubicTo(267.43f, 75.07f, 267.6f, 75.2f, 267.68f, 75.45f);
            bezier117Path.cubicTo(267.76f, 75.71f, 267.8f, 75.9f, 267.8f, 76.03f);
            bezier117Path.cubicTo(267.32f, 76.48f, 266.77f, 76.92f, 266.17f, 77.37f);
            bezier117Path.cubicTo(265.56f, 77.82f, 264.9f, 78.22f, 264.2f, 78.57f);
            bezier117Path.cubicTo(263.49f, 78.92f, 262.74f, 79.21f, 261.94f, 79.44f);
            bezier117Path.cubicTo(261.14f, 79.66f, 260.31f, 79.77f, 259.44f, 79.77f);
            bezier117Path.cubicTo(258.1f, 79.77f, 257f, 79.52f, 256.16f, 79.03f);
            bezier117Path.cubicTo(255.31f, 78.53f, 254.64f, 77.89f, 254.14f, 77.11f);
            bezier117Path.cubicTo(253.64f, 76.32f, 253.31f, 75.47f, 253.13f, 74.54f);
            bezier117Path.cubicTo(252.96f, 73.61f, 252.87f, 72.72f, 252.87f, 71.85f);
            bezier117Path.cubicTo(252.87f, 70.16f, 253.13f, 68.47f, 253.66f, 66.81f);
            bezier117Path.cubicTo(254.19f, 65.15f, 254.93f, 63.66f, 255.89f, 62.35f);
            bezier117Path.cubicTo(256.85f, 61.04f, 258.02f, 59.98f, 259.4f, 59.18f);
            bezier117Path.cubicTo(260.77f, 58.38f, 262.31f, 57.98f, 264.01f, 57.98f);
            bezier117Path.cubicTo(264.68f, 57.98f, 265.33f, 58.07f, 265.97f, 58.25f);
            bezier117Path.cubicTo(266.61f, 58.42f, 267.18f, 58.69f, 267.68f, 59.04f);
            bezier117Path.cubicTo(268.17f, 59.39f, 268.57f, 59.85f, 268.88f, 60.43f);
            bezier117Path.cubicTo(269.18f, 61f, 269.33f, 61.69f, 269.33f, 62.49f);
            bezier117Path.cubicTo(269.33f, 63.68f, 269.02f, 64.69f, 268.4f, 65.54f);
            bezier117Path.close();
            bezier117Path.moveTo(258.87f, 49.29f);
            bezier117Path.cubicTo(258.1f, 49.42f, 257.48f, 49.63f, 257f, 49.92f);
            bezier117Path.cubicTo(256.52f, 50.2f, 256.1f, 50.57f, 255.75f, 51.02f);
            bezier117Path.lineTo(245.24f, 64.84f);
            bezier117Path.lineTo(243.13f, 75.79f);
            bezier117Path.cubicTo(243f, 76.46f, 243.17f, 76.96f, 243.63f, 77.27f);
            bezier117Path.cubicTo(244.09f, 77.6f, 244.72f, 77.8f, 245.52f, 77.9f);
            bezier117Path.cubicTo(246f, 77.96f, 246.24f, 78.22f, 246.24f, 78.67f);
            bezier117Path.cubicTo(246.24f, 78.92f, 246.2f, 79.19f, 246.1f, 79.48f);
            bezier117Path.cubicTo(245.14f, 79.39f, 244.13f, 79.32f, 243.08f, 79.27f);
            bezier117Path.cubicTo(242.02f, 79.22f, 241.09f, 79.19f, 240.29f, 79.19f);
            bezier117Path.cubicTo(239.94f, 79.19f, 239.53f, 79.2f, 239.07f, 79.22f);
            bezier117Path.cubicTo(238.6f, 79.23f, 238.11f, 79.25f, 237.58f, 79.27f);
            bezier117Path.cubicTo(237.05f, 79.28f, 236.53f, 79.31f, 236.02f, 79.36f);
            bezier117Path.cubicTo(235.51f, 79.41f, 235.04f, 79.45f, 234.63f, 79.48f);
            bezier117Path.cubicTo(234.6f, 79.32f, 234.57f, 79.18f, 234.56f, 79.05f);
            bezier117Path.cubicTo(234.54f, 78.92f, 234.53f, 78.81f, 234.53f, 78.71f);
            bezier117Path.cubicTo(234.53f, 78.55f, 234.58f, 78.39f, 234.68f, 78.23f);
            bezier117Path.cubicTo(234.77f, 78.07f, 234.93f, 77.98f, 235.16f, 77.94f);
            bezier117Path.cubicTo(235.99f, 77.82f, 236.73f, 77.59f, 237.39f, 77.25f);
            bezier117Path.cubicTo(238.04f, 76.91f, 238.45f, 76.43f, 238.61f, 75.79f);
            bezier117Path.lineTo(240.58f, 65.37f);
            bezier117Path.lineTo(235.16f, 50.87f);
            bezier117Path.cubicTo(235.03f, 50.52f, 234.78f, 50.22f, 234.39f, 49.96f);
            bezier117Path.cubicTo(234.01f, 49.71f, 233.43f, 49.51f, 232.66f, 49.39f);
            bezier117Path.cubicTo(232.25f, 49.29f, 232.04f, 49.02f, 232.04f, 48.57f);
            bezier117Path.cubicTo(232.04f, 48.31f, 232.09f, 48.04f, 232.18f, 47.75f);
            bezier117Path.cubicTo(233.11f, 47.85f, 234.04f, 47.92f, 234.97f, 47.97f);
            bezier117Path.cubicTo(235.89f, 48.02f, 236.78f, 48.04f, 237.61f, 48.04f);
            bezier117Path.cubicTo(237.93f, 48.04f, 238.32f, 48.03f, 238.78f, 48.02f);
            bezier117Path.cubicTo(239.25f, 48f, 239.73f, 47.99f, 240.25f, 47.97f);
            bezier117Path.cubicTo(240.76f, 47.95f, 241.26f, 47.93f, 241.76f, 47.9f);
            bezier117Path.cubicTo(242.26f, 47.87f, 242.71f, 47.82f, 243.13f, 47.75f);
            bezier117Path.cubicTo(243.16f, 47.92f, 243.18f, 48.06f, 243.2f, 48.19f);
            bezier117Path.cubicTo(243.22f, 48.32f, 243.22f, 48.44f, 243.22f, 48.57f);
            bezier117Path.cubicTo(243.22f, 48.73f, 243.17f, 48.88f, 243.08f, 49.03f);
            bezier117Path.cubicTo(242.98f, 49.17f, 242.84f, 49.26f, 242.65f, 49.29f);
            bezier117Path.cubicTo(241.66f, 49.36f, 240.95f, 49.6f, 240.54f, 50.01f);
            bezier117Path.cubicTo(240.12f, 50.43f, 240.04f, 51f, 240.3f, 51.74f);
            bezier117Path.lineTo(244.33f, 62.92f);
            bezier117Path.lineTo(252.78f, 51.64f);
            bezier117Path.cubicTo(253.22f, 51.07f, 253.28f, 50.54f, 252.94f, 50.06f);
            bezier117Path.cubicTo(252.61f, 49.58f, 251.99f, 49.31f, 251.1f, 49.24f);
            bezier117Path.cubicTo(250.65f, 49.21f, 250.42f, 48.97f, 250.42f, 48.52f);
            bezier117Path.cubicTo(250.42f, 48.27f, 250.47f, 48f, 250.57f, 47.71f);
            bezier117Path.cubicTo(251.4f, 47.8f, 252.25f, 47.88f, 253.11f, 47.92f);
            bezier117Path.cubicTo(253.98f, 47.97f, 254.73f, 48f, 255.37f, 48f);
            bezier117Path.cubicTo(255.94f, 48f, 256.57f, 47.97f, 257.24f, 47.92f);
            bezier117Path.cubicTo(257.91f, 47.88f, 258.66f, 47.8f, 259.5f, 47.71f);
            bezier117Path.cubicTo(259.59f, 48f, 259.64f, 48.25f, 259.64f, 48.48f);
            bezier117Path.cubicTo(259.64f, 48.92f, 259.38f, 49.2f, 258.87f, 49.29f);
            bezier117Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(StyleKit.darkGray);
            canvas.drawPath(bezier117Path, paint);
        }
        
        canvas.restore();
    }
    
    // TitleTab
    
    private static class CacheForTitle {
        private static Paint paint = new Paint();
        private static RectF originalFrame = new RectF(0f, 0f, 368f, 45f);
        private static RectF resizedFrame = new RectF();
        private static RectF bezierRect = new RectF();
        private static Path bezierPath = new Path();
        private static RectF bezier2Rect = new RectF();
        private static Path bezier2Path = new Path();
        private static RectF bezier3Rect = new RectF();
        private static Path bezier3Path = new Path();
        private static RectF bezier4Rect = new RectF();
        private static Path bezier4Path = new Path();
        private static RectF bezier5Rect = new RectF();
        private static Path bezier5Path = new Path();
        private static RectF bezier6Rect = new RectF();
        private static Path bezier6Path = new Path();
        private static RectF bezier7Rect = new RectF();
        private static Path bezier7Path = new Path();
        private static RectF bezier8Rect = new RectF();
        private static Path bezier8Path = new Path();
        private static RectF bezier9Rect = new RectF();
        private static Path bezier9Path = new Path();
        private static RectF bezier10Rect = new RectF();
        private static Path bezier10Path = new Path();
        private static RectF bezier11Rect = new RectF();
        private static Path bezier11Path = new Path();
        private static RectF bezier12Rect = new RectF();
        private static Path bezier12Path = new Path();
        private static RectF bezier13Rect = new RectF();
        private static Path bezier13Path = new Path();
        private static RectF bezier14Rect = new RectF();
        private static Path bezier14Path = new Path();
        private static RectF bezier15Rect = new RectF();
        private static Path bezier15Path = new Path();
        private static RectF group3 = new RectF();
        private static Path clipPath = new Path();
        private static RectF bezier16Rect = new RectF();
        private static Path bezier16Path = new Path();
        private static RectF bezier17Rect = new RectF();
        private static Path bezier17Path = new Path();
        private static RectF bezier18Rect = new RectF();
        private static Path bezier18Path = new Path();
        private static RectF bezier19Rect = new RectF();
        private static Path bezier19Path = new Path();
        private static RectF bezier20Rect = new RectF();
        private static Path bezier20Path = new Path();
        private static RectF bezier21Rect = new RectF();
        private static Path bezier21Path = new Path();
        private static RectF bezier22Rect = new RectF();
        private static Path bezier22Path = new Path();
        private static RectF bezier23Rect = new RectF();
        private static Path bezier23Path = new Path();
        private static RectF bezier24Rect = new RectF();
        private static Path bezier24Path = new Path();
        private static RectF bezier25Rect = new RectF();
        private static Path bezier25Path = new Path();
        private static RectF bezier26Rect = new RectF();
        private static Path bezier26Path = new Path();
        private static RectF bezier27Rect = new RectF();
        private static Path bezier27Path = new Path();
        private static RectF bezier28Rect = new RectF();
        private static Path bezier28Path = new Path();
        private static RectF bezier29Rect = new RectF();
        private static Path bezier29Path = new Path();
        private static RectF bezier30Rect = new RectF();
        private static Path bezier30Path = new Path();
        private static RectF bezier31Rect = new RectF();
        private static Path bezier31Path = new Path();
        private static RectF bezier32Rect = new RectF();
        private static Path bezier32Path = new Path();
    }
    
    public static void drawTitle(Canvas canvas) {
        StyleKit.drawTitle(canvas, new RectF(0f, 0f, 368f, 45f), ResizingBehavior.AspectFit);
    }
    
    public static void drawTitle(Canvas canvas, RectF targetFrame, ResizingBehavior resizing) {
        // General Declarations
        Paint paint = CacheForTitle.paint;
        
        // Local Colors
        int fillColor = Color.argb(255, 27, 123, 152);
        int fillColor2 = Color.argb(255, 199, 198, 193);
        
        // Resize to Target Frame
        canvas.save();
        RectF resizedFrame = CacheForTitle.resizedFrame;
        StyleKit.resizingBehaviorApply(resizing, CacheForTitle.originalFrame, targetFrame, resizedFrame);
        canvas.translate(resizedFrame.left, resizedFrame.top);
        canvas.scale(resizedFrame.width() / 368f, resizedFrame.height() / 45f);
        
        // Group 2
        {
            // Bezier
            RectF bezierRect = CacheForTitle.bezierRect;
            bezierRect.set(1f, 3.54f, 33.49f, 33.79f);
            Path bezierPath = CacheForTitle.bezierPath;
            bezierPath.reset();
            bezierPath.moveTo(19.18f, 33.79f);
            bezierPath.lineTo(15.91f, 33.79f);
            bezierPath.cubicTo(14.69f, 30.78f, 13.52f, 27.92f, 12.4f, 25.21f);
            bezierPath.lineTo(9.35f, 17.91f);
            bezierPath.cubicTo(6.95f, 12.19f, 5.48f, 8.78f, 4.93f, 7.68f);
            bezierPath.cubicTo(4.37f, 6.59f, 3.96f, 5.96f, 3.67f, 5.8f);
            bezierPath.cubicTo(3.24f, 5.57f, 2.35f, 5.44f, 1f, 5.41f);
            bezierPath.lineTo(1f, 3.54f);
            bezierPath.cubicTo(4.44f, 3.64f, 6.54f, 3.69f, 7.28f, 3.69f);
            bezierPath.lineTo(15.01f, 3.54f);
            bezierPath.lineTo(15.01f, 5.41f);
            bezierPath.cubicTo(13.8f, 5.43f, 12.93f, 5.5f, 12.38f, 5.63f);
            bezierPath.cubicTo(12.07f, 5.7f, 11.85f, 5.81f, 11.73f, 5.94f);
            bezierPath.cubicTo(11.6f, 6.08f, 11.54f, 6.25f, 11.54f, 6.47f);
            bezierPath.cubicTo(11.54f, 6.9f, 12.02f, 8.26f, 12.96f, 10.56f);
            bezierPath.cubicTo(13.51f, 11.88f, 13.8f, 12.59f, 13.83f, 12.7f);
            bezierPath.cubicTo(13.87f, 12.8f, 13.91f, 12.94f, 13.97f, 13.09f);
            bezierPath.lineTo(19.42f, 26.37f);
            bezierPath.lineTo(24.19f, 14.54f);
            bezierPath.cubicTo(24.31f, 14.26f, 24.82f, 12.91f, 25.72f, 10.47f);
            bezierPath.cubicTo(26.37f, 8.75f, 26.76f, 7.59f, 26.9f, 7.01f);
            bezierPath.cubicTo(26.93f, 6.83f, 26.95f, 6.66f, 26.95f, 6.49f);
            bezierPath.cubicTo(26.95f, 6.25f, 26.91f, 6.06f, 26.83f, 5.94f);
            bezierPath.cubicTo(26.75f, 5.82f, 26.65f, 5.73f, 26.52f, 5.67f);
            bezierPath.cubicTo(26.42f, 5.63f, 26.16f, 5.59f, 25.74f, 5.56f);
            bezierPath.cubicTo(24.81f, 5.48f, 24.02f, 5.43f, 23.38f, 5.41f);
            bezierPath.lineTo(23.38f, 3.54f);
            bezierPath.lineTo(28.84f, 3.67f);
            bezierPath.lineTo(33.49f, 3.54f);
            bezierPath.lineTo(33.49f, 5.41f);
            bezierPath.cubicTo(32.1f, 5.54f, 31.29f, 5.69f, 31.06f, 5.87f);
            bezierPath.cubicTo(30.67f, 6.17f, 29.86f, 7.8f, 28.62f, 10.75f);
            bezierPath.lineTo(27.1f, 14.32f);
            bezierPath.lineTo(24.19f, 21.25f);
            bezierPath.cubicTo(21.73f, 27.16f, 20.05f, 31.34f, 19.18f, 33.79f);
            bezierPath.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezierPath, paint);
            
            // Bezier 2
            RectF bezier2Rect = CacheForTitle.bezier2Rect;
            bezier2Rect.set(33.27f, 2.49f, 45.38f, 33.64f);
            Path bezier2Path = CacheForTitle.bezier2Path;
            bezier2Path.reset();
            bezier2Path.moveTo(45.38f, 33.64f);
            bezier2Path.cubicTo(43.35f, 33.58f, 41.13f, 33.56f, 38.74f, 33.56f);
            bezier2Path.cubicTo(36.67f, 33.56f, 34.85f, 33.58f, 33.27f, 33.64f);
            bezier2Path.lineTo(33.27f, 32.05f);
            bezier2Path.cubicTo(34.88f, 31.93f, 35.8f, 31.81f, 36.03f, 31.67f);
            bezier2Path.cubicTo(36.26f, 31.54f, 36.4f, 31.28f, 36.46f, 30.91f);
            bezier2Path.cubicTo(36.6f, 30.12f, 36.67f, 28.09f, 36.67f, 24.82f);
            bezier2Path.cubicTo(36.67f, 20.33f, 36.61f, 17.78f, 36.48f, 17.16f);
            bezier2Path.cubicTo(36.42f, 16.87f, 36.33f, 16.69f, 36.2f, 16.6f);
            bezier2Path.cubicTo(35.91f, 16.41f, 34.94f, 16.32f, 33.27f, 16.3f);
            bezier2Path.lineTo(33.27f, 14.66f);
            bezier2Path.cubicTo(35.44f, 14.44f, 37.07f, 14.19f, 38.18f, 13.93f);
            bezier2Path.cubicTo(39.28f, 13.67f, 40.49f, 13.28f, 41.79f, 12.75f);
            bezier2Path.lineTo(42.31f, 13.03f);
            bezier2Path.cubicTo(42.14f, 15.27f, 42.05f, 17.37f, 42.05f, 19.33f);
            bezier2Path.lineTo(42.05f, 26.65f);
            bezier2Path.cubicTo(42.05f, 29.14f, 42.11f, 30.62f, 42.22f, 31.08f);
            bezier2Path.cubicTo(42.28f, 31.34f, 42.39f, 31.51f, 42.57f, 31.6f);
            bezier2Path.cubicTo(42.95f, 31.78f, 43.89f, 31.9f, 45.38f, 31.96f);
            bezier2Path.lineTo(45.38f, 33.64f);
            bezier2Path.close();
            bezier2Path.moveTo(39.17f, 9.09f);
            bezier2Path.cubicTo(38.26f, 9.09f, 37.49f, 8.77f, 36.84f, 8.12f);
            bezier2Path.cubicTo(36.2f, 7.48f, 35.88f, 6.7f, 35.88f, 5.78f);
            bezier2Path.cubicTo(35.88f, 4.88f, 36.19f, 4.1f, 36.83f, 3.46f);
            bezier2Path.cubicTo(37.47f, 2.81f, 38.25f, 2.49f, 39.17f, 2.49f);
            bezier2Path.cubicTo(40.08f, 2.49f, 40.86f, 2.81f, 41.5f, 3.46f);
            bezier2Path.cubicTo(42.14f, 4.1f, 42.46f, 4.88f, 42.46f, 5.78f);
            bezier2Path.cubicTo(42.46f, 6.7f, 42.14f, 7.48f, 41.5f, 8.12f);
            bezier2Path.cubicTo(40.86f, 8.77f, 40.08f, 9.09f, 39.17f, 9.09f);
            bezier2Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier2Path, paint);
            
            // Bezier 3
            RectF bezier3Rect = CacheForTitle.bezier3Rect;
            bezier3Rect.set(47.79f, 12.77f, 63.56f, 33.64f);
            Path bezier3Path = CacheForTitle.bezier3Path;
            bezier3Path.reset();
            bezier3Path.moveTo(60.14f, 33.64f);
            bezier3Path.cubicTo(58.52f, 33.57f, 56.71f, 33.53f, 54.72f, 33.53f);
            bezier3Path.cubicTo(52.5f, 33.53f, 50.19f, 33.57f, 47.79f, 33.64f);
            bezier3Path.lineTo(47.79f, 31.98f);
            bezier3Path.cubicTo(48.91f, 31.98f, 49.69f, 31.9f, 50.12f, 31.75f);
            bezier3Path.cubicTo(50.32f, 31.68f, 50.47f, 31.55f, 50.57f, 31.38f);
            bezier3Path.cubicTo(50.71f, 31.11f, 50.79f, 30.59f, 50.81f, 29.83f);
            bezier3Path.lineTo(50.89f, 27.92f);
            bezier3Path.cubicTo(50.91f, 27.52f, 50.91f, 26.86f, 50.91f, 25.96f);
            bezier3Path.lineTo(50.91f, 23.14f);
            bezier3Path.cubicTo(50.91f, 21.87f, 50.87f, 20.32f, 50.78f, 18.5f);
            bezier3Path.cubicTo(50.74f, 17.58f, 50.68f, 17.06f, 50.6f, 16.93f);
            bezier3Path.cubicTo(50.52f, 16.81f, 50.4f, 16.72f, 50.23f, 16.67f);
            bezier3Path.cubicTo(49.95f, 16.57f, 49.14f, 16.49f, 47.79f, 16.45f);
            bezier3Path.lineTo(47.79f, 14.79f);
            bezier3Path.cubicTo(50.4f, 14.35f, 52.12f, 14.02f, 52.94f, 13.81f);
            bezier3Path.cubicTo(53.75f, 13.59f, 54.68f, 13.25f, 55.71f, 12.77f);
            bezier3Path.lineTo(56.29f, 13.03f);
            bezier3Path.lineTo(56.25f, 17.38f);
            bezier3Path.cubicTo(57.18f, 16.41f, 57.9f, 15.62f, 58.4f, 14.99f);
            bezier3Path.cubicTo(59.15f, 14.1f, 59.71f, 13.53f, 60.08f, 13.29f);
            bezier3Path.cubicTo(60.59f, 12.94f, 61.28f, 12.77f, 62.12f, 12.77f);
            bezier3Path.cubicTo(62.65f, 12.77f, 63.13f, 12.86f, 63.56f, 13.03f);
            bezier3Path.lineTo(63.43f, 16.09f);
            bezier3Path.cubicTo(63.39f, 17.75f, 63.36f, 18.7f, 63.33f, 18.95f);
            bezier3Path.lineTo(62.42f, 19.23f);
            bezier3Path.cubicTo(62.06f, 18.75f, 61.72f, 18.42f, 61.39f, 18.24f);
            bezier3Path.cubicTo(60.86f, 17.93f, 60.28f, 17.79f, 59.65f, 17.79f);
            bezier3Path.cubicTo(58.8f, 17.79f, 58.07f, 18.05f, 57.46f, 18.57f);
            bezier3Path.cubicTo(56.85f, 19.09f, 56.49f, 19.63f, 56.38f, 20.17f);
            bezier3Path.cubicTo(56.32f, 20.49f, 56.29f, 21.7f, 56.29f, 23.81f);
            bezier3Path.lineTo(56.29f, 25.96f);
            bezier3Path.lineTo(56.33f, 28.89f);
            bezier3Path.cubicTo(56.35f, 29.99f, 56.39f, 30.67f, 56.45f, 30.92f);
            bezier3Path.cubicTo(56.52f, 31.17f, 56.66f, 31.37f, 56.89f, 31.51f);
            bezier3Path.cubicTo(57.12f, 31.65f, 57.62f, 31.76f, 58.38f, 31.81f);
            bezier3Path.lineTo(60.14f, 31.98f);
            bezier3Path.lineTo(60.14f, 33.64f);
            bezier3Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier3Path, paint);
            
            // Bezier 4
            RectF bezier4Rect = CacheForTitle.bezier4Rect;
            bezier4Rect.set(64.6f, 5.52f, 77.98f, 34.09f);
            Path bezier4Path = CacheForTitle.bezier4Path;
            bezier4Path.reset();
            bezier4Path.moveTo(72.71f, 34.09f);
            bezier4Path.cubicTo(71.04f, 34.09f, 69.73f, 33.67f, 68.78f, 32.81f);
            bezier4Path.cubicTo(67.83f, 31.96f, 67.35f, 30.89f, 67.35f, 29.62f);
            bezier4Path.lineTo(67.44f, 22.52f);
            bezier4Path.lineTo(67.44f, 17.2f);
            bezier4Path.lineTo(66.86f, 17.2f);
            bezier4Path.cubicTo(66.07f, 17.2f, 65.31f, 17.23f, 64.6f, 17.27f);
            bezier4Path.lineTo(64.6f, 16.3f);
            bezier4Path.lineTo(66.53f, 15.07f);
            bezier4Path.cubicTo(66.85f, 14.87f, 67.15f, 14.66f, 67.44f, 14.43f);
            bezier4Path.lineTo(67.44f, 11.55f);
            bezier4Path.cubicTo(67.44f, 10.51f, 67.38f, 9.24f, 67.26f, 7.72f);
            bezier4Path.cubicTo(68.66f, 7.26f, 69.56f, 6.95f, 69.97f, 6.79f);
            bezier4Path.cubicTo(70.05f, 6.76f, 70.96f, 6.34f, 72.71f, 5.52f);
            bezier4Path.lineTo(73.27f, 5.95f);
            bezier4Path.lineTo(73.05f, 8.19f);
            bezier4Path.lineTo(72.9f, 10.66f);
            bezier4Path.lineTo(72.71f, 14.43f);
            bezier4Path.lineTo(73.42f, 14.43f);
            bezier4Path.cubicTo(75.32f, 14.43f, 76.77f, 14.36f, 77.74f, 14.21f);
            bezier4Path.lineTo(77.38f, 17.12f);
            bezier4Path.cubicTo(77.2f, 17.15f, 77.05f, 17.16f, 76.9f, 17.16f);
            bezier4Path.lineTo(74.79f, 17.12f);
            bezier4Path.lineTo(72.71f, 17.12f);
            bezier4Path.lineTo(72.71f, 24.3f);
            bezier4Path.cubicTo(72.71f, 26.51f, 72.73f, 27.82f, 72.77f, 28.22f);
            bezier4Path.cubicTo(72.83f, 28.89f, 73.07f, 29.42f, 73.49f, 29.8f);
            bezier4Path.cubicTo(73.91f, 30.18f, 74.53f, 30.37f, 75.33f, 30.37f);
            bezier4Path.cubicTo(75.47f, 30.38f, 75.6f, 30.38f, 75.72f, 30.38f);
            bezier4Path.cubicTo(76.03f, 30.38f, 76.29f, 30.36f, 76.5f, 30.34f);
            bezier4Path.cubicTo(76.8f, 30.3f, 77.18f, 30.23f, 77.63f, 30.13f);
            bezier4Path.lineTo(77.98f, 31.02f);
            bezier4Path.lineTo(77.2f, 31.79f);
            bezier4Path.cubicTo(76.57f, 32.44f, 76.02f, 33f, 75.55f, 33.49f);
            bezier4Path.cubicTo(74.99f, 33.73f, 74.49f, 33.89f, 74.05f, 33.97f);
            bezier4Path.cubicTo(73.61f, 34.05f, 73.17f, 34.09f, 72.71f, 34.09f);
            bezier4Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier4Path, paint);
            
            // Bezier 5
            RectF bezier5Rect = CacheForTitle.bezier5Rect;
            bezier5Rect.set(79.42f, 12.88f, 104.12f, 34.22f);
            Path bezier5Path = CacheForTitle.bezier5Path;
            bezier5Path.reset();
            bezier5Path.moveTo(88.74f, 34.22f);
            bezier5Path.cubicTo(86.8f, 34.22f, 85.28f, 33.69f, 84.17f, 32.63f);
            bezier5Path.cubicTo(83.07f, 31.57f, 82.52f, 30.16f, 82.52f, 28.39f);
            bezier5Path.cubicTo(82.52f, 28.18f, 82.54f, 27.38f, 82.58f, 26f);
            bezier5Path.cubicTo(82.6f, 25.27f, 82.6f, 24.33f, 82.6f, 23.16f);
            bezier5Path.lineTo(82.56f, 18.62f);
            bezier5Path.cubicTo(82.56f, 17.79f, 82.51f, 17.28f, 82.4f, 17.08f);
            bezier5Path.cubicTo(82.29f, 16.87f, 82.12f, 16.72f, 81.87f, 16.62f);
            bezier5Path.cubicTo(81.63f, 16.52f, 80.81f, 16.44f, 79.42f, 16.39f);
            bezier5Path.lineTo(79.42f, 14.75f);
            bezier5Path.cubicTo(80.65f, 14.68f, 81.89f, 14.52f, 83.14f, 14.26f);
            bezier5Path.cubicTo(84.39f, 14f, 85.99f, 13.54f, 87.94f, 12.88f);
            bezier5Path.lineTo(88.24f, 13.12f);
            bezier5Path.cubicTo(88.04f, 15.96f, 87.94f, 18.58f, 87.94f, 20.99f);
            bezier5Path.lineTo(87.94f, 23.4f);
            bezier5Path.cubicTo(87.94f, 25.45f, 87.99f, 26.82f, 88.09f, 27.51f);
            bezier5Path.cubicTo(88.23f, 28.41f, 88.58f, 29.09f, 89.12f, 29.55f);
            bezier5Path.cubicTo(89.67f, 30.01f, 90.39f, 30.24f, 91.3f, 30.24f);
            bezier5Path.cubicTo(92.33f, 30.24f, 93.2f, 29.97f, 93.9f, 29.43f);
            bezier5Path.cubicTo(94.6f, 28.9f, 95.09f, 28.34f, 95.36f, 27.77f);
            bezier5Path.cubicTo(95.53f, 27.4f, 95.62f, 26.62f, 95.62f, 25.44f);
            bezier5Path.lineTo(95.62f, 21.77f);
            bezier5Path.lineTo(95.58f, 18.71f);
            bezier5Path.cubicTo(95.58f, 17.72f, 95.51f, 17.13f, 95.38f, 16.92f);
            bezier5Path.cubicTo(95.31f, 16.79f, 95.17f, 16.7f, 94.95f, 16.62f);
            bezier5Path.cubicTo(94.74f, 16.55f, 93.86f, 16.47f, 92.33f, 16.39f);
            bezier5Path.lineTo(92.33f, 14.75f);
            bezier5Path.cubicTo(94.55f, 14.46f, 96.06f, 14.24f, 96.87f, 14.06f);
            bezier5Path.cubicTo(97.67f, 13.89f, 99.03f, 13.5f, 100.96f, 12.88f);
            bezier5Path.lineTo(101.36f, 13.12f);
            bezier5Path.lineTo(101.13f, 17.08f);
            bezier5Path.cubicTo(101.01f, 19.89f, 100.96f, 21.46f, 100.96f, 21.79f);
            bezier5Path.lineTo(100.96f, 26.2f);
            bezier5Path.cubicTo(100.96f, 28.82f, 101.02f, 30.44f, 101.15f, 31.06f);
            bezier5Path.cubicTo(101.21f, 31.32f, 101.31f, 31.5f, 101.47f, 31.6f);
            bezier5Path.cubicTo(101.74f, 31.74f, 102.63f, 31.85f, 104.12f, 31.92f);
            bezier5Path.lineTo(104.12f, 33.64f);
            bezier5Path.lineTo(99.69f, 33.53f);
            bezier5Path.lineTo(95.62f, 33.64f);
            bezier5Path.lineTo(95.47f, 33.47f);
            bezier5Path.lineTo(95.6f, 31.81f);
            bezier5Path.cubicTo(95.61f, 31.54f, 95.62f, 30.99f, 95.62f, 30.16f);
            bezier5Path.cubicTo(95.06f, 30.6f, 94.57f, 31.01f, 94.16f, 31.38f);
            bezier5Path.lineTo(91.73f, 33.68f);
            bezier5Path.cubicTo(90.74f, 34.04f, 89.74f, 34.22f, 88.74f, 34.22f);
            bezier5Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier5Path, paint);
            
            // Bezier 6
            RectF bezier6Rect = CacheForTitle.bezier6Rect;
            bezier6Rect.set(106.91f, 12.88f, 126.21f, 34.2f);
            Path bezier6Path = CacheForTitle.bezier6Path;
            bezier6Path.reset();
            bezier6Path.moveTo(111.91f, 34.2f);
            bezier6Path.cubicTo(110.34f, 34.2f, 109.12f, 33.74f, 108.24f, 32.82f);
            bezier6Path.cubicTo(107.36f, 31.9f, 106.91f, 30.59f, 106.91f, 28.86f);
            bezier6Path.cubicTo(106.91f, 27.7f, 107.11f, 26.75f, 107.51f, 26f);
            bezier6Path.cubicTo(107.9f, 25.26f, 108.32f, 24.71f, 108.78f, 24.36f);
            bezier6Path.cubicTo(109.23f, 24.01f, 109.93f, 23.67f, 110.87f, 23.34f);
            bezier6Path.cubicTo(113.14f, 22.53f, 115.62f, 21.9f, 118.32f, 21.44f);
            bezier6Path.cubicTo(118.35f, 19.74f, 118f, 18.44f, 117.26f, 17.55f);
            bezier6Path.cubicTo(116.52f, 16.66f, 115.38f, 16.21f, 113.86f, 16.21f);
            bezier6Path.cubicTo(113.25f, 16.21f, 112.66f, 16.29f, 112.1f, 16.45f);
            bezier6Path.cubicTo(111.86f, 16.52f, 111.57f, 16.67f, 111.24f, 16.88f);
            bezier6Path.lineTo(110.34f, 19.05f);
            bezier6Path.lineTo(108.87f, 18.73f);
            bezier6Path.lineTo(109f, 15.96f);
            bezier6Path.cubicTo(110.06f, 15.24f, 111.07f, 14.62f, 112.04f, 14.08f);
            bezier6Path.cubicTo(113f, 13.55f, 113.67f, 13.23f, 114.06f, 13.12f);
            bezier6Path.cubicTo(114.59f, 12.96f, 115.33f, 12.88f, 116.3f, 12.88f);
            bezier6Path.cubicTo(117.86f, 12.88f, 119.15f, 13.11f, 120.16f, 13.56f);
            bezier6Path.cubicTo(121.17f, 14.01f, 121.91f, 14.54f, 122.4f, 15.16f);
            bezier6Path.cubicTo(122.88f, 15.78f, 123.21f, 16.44f, 123.38f, 17.14f);
            bezier6Path.cubicTo(123.56f, 17.84f, 123.65f, 18.73f, 123.65f, 19.81f);
            bezier6Path.cubicTo(123.65f, 20.27f, 123.62f, 21.46f, 123.55f, 23.4f);
            bezier6Path.cubicTo(123.5f, 24.69f, 123.48f, 25.75f, 123.48f, 26.56f);
            bezier6Path.cubicTo(123.48f, 29.12f, 123.55f, 30.67f, 123.7f, 31.21f);
            bezier6Path.cubicTo(123.75f, 31.47f, 123.87f, 31.64f, 124.04f, 31.73f);
            bezier6Path.cubicTo(124.27f, 31.84f, 124.99f, 31.94f, 126.21f, 32.03f);
            bezier6Path.lineTo(126.21f, 33.64f);
            bezier6Path.cubicTo(124.56f, 33.57f, 123.1f, 33.53f, 121.82f, 33.53f);
            bezier6Path.cubicTo(120.62f, 33.53f, 119.45f, 33.57f, 118.32f, 33.64f);
            bezier6Path.lineTo(118.12f, 33.4f);
            bezier6Path.lineTo(118.32f, 30.59f);
            bezier6Path.cubicTo(117.8f, 30.92f, 116.28f, 32.05f, 113.76f, 33.99f);
            bezier6Path.cubicTo(113.11f, 34.13f, 112.49f, 34.2f, 111.91f, 34.2f);
            bezier6Path.close();
            bezier6Path.moveTo(118.32f, 23.25f);
            bezier6Path.cubicTo(117.1f, 23.51f, 115.98f, 23.82f, 114.97f, 24.19f);
            bezier6Path.cubicTo(113.96f, 24.55f, 113.26f, 25f, 112.87f, 25.54f);
            bezier6Path.cubicTo(112.49f, 26.08f, 112.29f, 26.76f, 112.29f, 27.57f);
            bezier6Path.cubicTo(112.29f, 28.49f, 112.53f, 29.2f, 112.99f, 29.7f);
            bezier6Path.cubicTo(113.46f, 30.21f, 114.07f, 30.46f, 114.83f, 30.46f);
            bezier6Path.cubicTo(115.48f, 30.46f, 116.13f, 30.27f, 116.78f, 29.9f);
            bezier6Path.cubicTo(117.43f, 29.52f, 117.94f, 29.05f, 118.32f, 28.48f);
            bezier6Path.lineTo(118.32f, 23.25f);
            bezier6Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier6Path, paint);
            
            // Bezier 7
            RectF bezier7Rect = CacheForTitle.bezier7Rect;
            bezier7Rect.set(128.41f, 1.84f, 140.61f, 33.64f);
            Path bezier7Path = CacheForTitle.bezier7Path;
            bezier7Path.reset();
            bezier7Path.moveTo(140.61f, 33.64f);
            bezier7Path.cubicTo(138.81f, 33.53f, 136.94f, 33.47f, 134.99f, 33.47f);
            bezier7Path.cubicTo(133.04f, 33.47f, 130.85f, 33.53f, 128.41f, 33.64f);
            bezier7Path.lineTo(128.41f, 31.94f);
            bezier7Path.cubicTo(129.77f, 31.9f, 130.59f, 31.84f, 130.88f, 31.77f);
            bezier7Path.cubicTo(131.1f, 31.71f, 131.26f, 31.63f, 131.37f, 31.52f);
            bezier7Path.cubicTo(131.47f, 31.41f, 131.55f, 31.25f, 131.59f, 31.02f);
            bezier7Path.cubicTo(131.69f, 30.59f, 131.76f, 29.23f, 131.81f, 26.95f);
            bezier7Path.cubicTo(131.85f, 24.67f, 131.87f, 22.65f, 131.87f, 20.88f);
            bezier7Path.lineTo(131.87f, 13.78f);
            bezier7Path.cubicTo(131.87f, 11.53f, 131.82f, 9.47f, 131.72f, 7.61f);
            bezier7Path.cubicTo(131.66f, 6.6f, 131.59f, 6.01f, 131.51f, 5.82f);
            bezier7Path.cubicTo(131.45f, 5.72f, 131.37f, 5.64f, 131.27f, 5.59f);
            bezier7Path.cubicTo(131.1f, 5.47f, 130.82f, 5.39f, 130.45f, 5.33f);
            bezier7Path.cubicTo(130.24f, 5.3f, 129.59f, 5.26f, 128.51f, 5.22f);
            bezier7Path.lineTo(128.51f, 3.63f);
            bezier7Path.cubicTo(130.29f, 3.44f, 131.71f, 3.24f, 132.78f, 3.02f);
            bezier7Path.cubicTo(133.84f, 2.79f, 135.26f, 2.4f, 137.06f, 1.84f);
            bezier7Path.lineTo(137.51f, 2.1f);
            bezier7Path.lineTo(137.34f, 6.45f);
            bezier7Path.cubicTo(137.26f, 8.89f, 137.22f, 11.88f, 137.21f, 15.42f);
            bezier7Path.lineTo(137.21f, 20.93f);
            bezier7Path.cubicTo(137.21f, 23.01f, 137.22f, 24.56f, 137.25f, 25.59f);
            bezier7Path.cubicTo(137.31f, 28.16f, 137.35f, 29.71f, 137.38f, 30.25f);
            bezier7Path.cubicTo(137.41f, 30.79f, 137.46f, 31.13f, 137.53f, 31.27f);
            bezier7Path.cubicTo(137.57f, 31.37f, 137.64f, 31.46f, 137.75f, 31.53f);
            bezier7Path.cubicTo(137.87f, 31.63f, 138.1f, 31.71f, 138.41f, 31.77f);
            bezier7Path.cubicTo(138.54f, 31.8f, 139.27f, 31.85f, 140.61f, 31.92f);
            bezier7Path.lineTo(140.61f, 33.64f);
            bezier7Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier7Path, paint);
            
            // Bezier 8
            RectF bezier8Rect = CacheForTitle.bezier8Rect;
            bezier8Rect.set(155.41f, 3.03f, 177.52f, 34.39f);
            Path bezier8Path = CacheForTitle.bezier8Path;
            bezier8Path.reset();
            bezier8Path.moveTo(164.66f, 34.39f);
            bezier8Path.cubicTo(162.89f, 34.39f, 161.32f, 34.23f, 159.95f, 33.9f);
            bezier8Path.cubicTo(158.57f, 33.57f, 157.06f, 33f, 155.41f, 32.2f);
            bezier8Path.cubicTo(155.85f, 30.56f, 156.08f, 28.08f, 156.1f, 24.73f);
            bezier8Path.lineTo(157.9f, 24.73f);
            bezier8Path.cubicTo(157.87f, 25.77f, 157.95f, 27.05f, 158.14f, 28.59f);
            bezier8Path.cubicTo(158.69f, 29.47f, 159.62f, 30.26f, 160.94f, 30.93f);
            bezier8Path.cubicTo(162.26f, 31.6f, 163.7f, 31.94f, 165.26f, 31.94f);
            bezier8Path.cubicTo(166.62f, 31.94f, 167.84f, 31.7f, 168.91f, 31.22f);
            bezier8Path.cubicTo(169.98f, 30.74f, 170.75f, 30.08f, 171.23f, 29.23f);
            bezier8Path.cubicTo(171.71f, 28.38f, 171.95f, 27.42f, 171.95f, 26.35f);
            bezier8Path.cubicTo(171.95f, 25.44f, 171.78f, 24.67f, 171.45f, 24.02f);
            bezier8Path.cubicTo(171.11f, 23.38f, 170.58f, 22.86f, 169.87f, 22.47f);
            bezier8Path.cubicTo(169.15f, 22.09f, 167.89f, 21.69f, 166.08f, 21.27f);
            bezier8Path.cubicTo(163.48f, 20.72f, 161.78f, 20.33f, 160.96f, 20.09f);
            bezier8Path.cubicTo(159.73f, 19.71f, 158.73f, 19.18f, 157.98f, 18.47f);
            bezier8Path.cubicTo(157.23f, 17.77f, 156.66f, 16.92f, 156.29f, 15.92f);
            bezier8Path.cubicTo(155.92f, 14.93f, 155.73f, 13.86f, 155.73f, 12.71f);
            bezier8Path.cubicTo(155.73f, 11.1f, 156.07f, 9.62f, 156.74f, 8.27f);
            bezier8Path.cubicTo(157.41f, 6.91f, 158.31f, 5.86f, 159.41f, 5.11f);
            bezier8Path.cubicTo(160.51f, 4.37f, 161.76f, 3.83f, 163.15f, 3.51f);
            bezier8Path.cubicTo(164.54f, 3.19f, 165.97f, 3.03f, 167.43f, 3.03f);
            bezier8Path.cubicTo(168.95f, 3.03f, 170.43f, 3.16f, 171.86f, 3.44f);
            bezier8Path.cubicTo(173.28f, 3.71f, 174.52f, 4.1f, 175.57f, 4.62f);
            bezier8Path.lineTo(175.74f, 5.13f);
            bezier8Path.cubicTo(175.54f, 6.07f, 175.39f, 6.98f, 175.3f, 7.88f);
            bezier8Path.cubicTo(175.2f, 8.77f, 175.14f, 9.95f, 175.09f, 11.42f);
            bezier8Path.lineTo(173.29f, 11.42f);
            bezier8Path.cubicTo(173.26f, 9.75f, 173.19f, 8.58f, 173.07f, 7.89f);
            bezier8Path.cubicTo(172.63f, 7.26f, 171.86f, 6.7f, 170.76f, 6.21f);
            bezier8Path.cubicTo(169.66f, 5.72f, 168.43f, 5.48f, 167.07f, 5.48f);
            bezier8Path.cubicTo(165.12f, 5.48f, 163.61f, 5.97f, 162.54f, 6.95f);
            bezier8Path.cubicTo(161.47f, 7.94f, 160.94f, 9.09f, 160.94f, 10.41f);
            bezier8Path.cubicTo(160.95f, 11.35f, 161.11f, 12.12f, 161.41f, 12.71f);
            bezier8Path.cubicTo(161.71f, 13.3f, 162.14f, 13.76f, 162.7f, 14.11f);
            bezier8Path.cubicTo(163.26f, 14.45f, 164.09f, 14.77f, 165.17f, 15.05f);
            bezier8Path.cubicTo(166.01f, 15.23f, 167.17f, 15.44f, 168.65f, 15.7f);
            bezier8Path.cubicTo(170.13f, 15.96f, 171.1f, 16.13f, 171.54f, 16.24f);
            bezier8Path.cubicTo(172.7f, 16.54f, 173.64f, 16.9f, 174.36f, 17.32f);
            bezier8Path.cubicTo(175.08f, 17.75f, 175.65f, 18.23f, 176.07f, 18.79f);
            bezier8Path.cubicTo(176.5f, 19.34f, 176.84f, 20.03f, 177.12f, 20.87f);
            bezier8Path.cubicTo(177.39f, 21.71f, 177.52f, 22.65f, 177.52f, 23.7f);
            bezier8Path.cubicTo(177.52f, 25.54f, 177.14f, 27.15f, 176.38f, 28.54f);
            bezier8Path.cubicTo(175.81f, 29.59f, 175.01f, 30.55f, 174f, 31.41f);
            bezier8Path.cubicTo(172.98f, 32.28f, 171.93f, 32.93f, 170.86f, 33.36f);
            bezier8Path.cubicTo(169.13f, 34.05f, 167.07f, 34.39f, 164.66f, 34.39f);
            bezier8Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier8Path, paint);
            
            // Bezier 9
            RectF bezier9Rect = CacheForTitle.bezier9Rect;
            bezier9Rect.set(181.55f, 12.88f, 200.85f, 34.2f);
            Path bezier9Path = CacheForTitle.bezier9Path;
            bezier9Path.reset();
            bezier9Path.moveTo(186.54f, 34.2f);
            bezier9Path.cubicTo(184.98f, 34.2f, 183.75f, 33.74f, 182.87f, 32.82f);
            bezier9Path.cubicTo(181.99f, 31.9f, 181.55f, 30.59f, 181.55f, 28.86f);
            bezier9Path.cubicTo(181.55f, 27.7f, 181.75f, 26.75f, 182.14f, 26f);
            bezier9Path.cubicTo(182.53f, 25.26f, 182.96f, 24.71f, 183.41f, 24.36f);
            bezier9Path.cubicTo(183.86f, 24.01f, 184.56f, 23.67f, 185.51f, 23.34f);
            bezier9Path.cubicTo(187.77f, 22.53f, 190.25f, 21.9f, 192.95f, 21.44f);
            bezier9Path.cubicTo(192.98f, 19.74f, 192.63f, 18.44f, 191.9f, 17.55f);
            bezier9Path.cubicTo(191.15f, 16.66f, 190.02f, 16.21f, 188.5f, 16.21f);
            bezier9Path.cubicTo(187.88f, 16.21f, 187.29f, 16.29f, 186.73f, 16.45f);
            bezier9Path.cubicTo(186.49f, 16.52f, 186.2f, 16.67f, 185.87f, 16.88f);
            bezier9Path.lineTo(184.97f, 19.05f);
            bezier9Path.lineTo(183.51f, 18.73f);
            bezier9Path.lineTo(183.64f, 15.96f);
            bezier9Path.cubicTo(184.7f, 15.24f, 185.71f, 14.62f, 186.67f, 14.08f);
            bezier9Path.cubicTo(187.63f, 13.55f, 188.3f, 13.23f, 188.69f, 13.12f);
            bezier9Path.cubicTo(189.22f, 12.96f, 189.97f, 12.88f, 190.93f, 12.88f);
            bezier9Path.cubicTo(192.49f, 12.88f, 193.78f, 13.11f, 194.79f, 13.56f);
            bezier9Path.cubicTo(195.8f, 14.01f, 196.55f, 14.54f, 197.03f, 15.16f);
            bezier9Path.cubicTo(197.51f, 15.78f, 197.84f, 16.44f, 198.02f, 17.14f);
            bezier9Path.cubicTo(198.2f, 17.84f, 198.29f, 18.73f, 198.29f, 19.81f);
            bezier9Path.cubicTo(198.29f, 20.27f, 198.25f, 21.46f, 198.18f, 23.4f);
            bezier9Path.cubicTo(198.14f, 24.69f, 198.11f, 25.75f, 198.11f, 26.56f);
            bezier9Path.cubicTo(198.11f, 29.12f, 198.19f, 30.67f, 198.33f, 31.21f);
            bezier9Path.cubicTo(198.39f, 31.47f, 198.5f, 31.64f, 198.67f, 31.73f);
            bezier9Path.cubicTo(198.9f, 31.84f, 199.63f, 31.94f, 200.85f, 32.03f);
            bezier9Path.lineTo(200.85f, 33.64f);
            bezier9Path.cubicTo(199.2f, 33.57f, 197.73f, 33.53f, 196.46f, 33.53f);
            bezier9Path.cubicTo(195.25f, 33.53f, 194.08f, 33.57f, 192.95f, 33.64f);
            bezier9Path.lineTo(192.76f, 33.4f);
            bezier9Path.lineTo(192.95f, 30.59f);
            bezier9Path.cubicTo(192.43f, 30.92f, 190.91f, 32.05f, 188.39f, 33.99f);
            bezier9Path.cubicTo(187.74f, 34.13f, 187.13f, 34.2f, 186.54f, 34.2f);
            bezier9Path.close();
            bezier9Path.moveTo(192.95f, 23.25f);
            bezier9Path.cubicTo(191.73f, 23.51f, 190.62f, 23.82f, 189.61f, 24.19f);
            bezier9Path.cubicTo(188.59f, 24.55f, 187.9f, 25f, 187.51f, 25.54f);
            bezier9Path.cubicTo(187.12f, 26.08f, 186.93f, 26.76f, 186.93f, 27.57f);
            bezier9Path.cubicTo(186.93f, 28.49f, 187.16f, 29.2f, 187.63f, 29.7f);
            bezier9Path.cubicTo(188.09f, 30.21f, 188.7f, 30.46f, 189.47f, 30.46f);
            bezier9Path.cubicTo(190.11f, 30.46f, 190.76f, 30.27f, 191.41f, 29.9f);
            bezier9Path.cubicTo(192.06f, 29.52f, 192.58f, 29.05f, 192.95f, 28.48f);
            bezier9Path.lineTo(192.95f, 23.25f);
            bezier9Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier9Path, paint);
            
            // Bezier 10
            RectF bezier10Rect = CacheForTitle.bezier10Rect;
            bezier10Rect.set(203.41f, 1.8f, 219.07f, 33.64f);
            Path bezier10Path = CacheForTitle.bezier10Path;
            bezier10Path.reset();
            bezier10Path.moveTo(216.6f, 33.64f);
            bezier10Path.lineTo(209.26f, 33.53f);
            bezier10Path.cubicTo(208.35f, 33.53f, 206.4f, 33.57f, 203.41f, 33.64f);
            bezier10Path.lineTo(203.41f, 32.01f);
            bezier10Path.cubicTo(205.1f, 31.89f, 206.1f, 31.73f, 206.42f, 31.53f);
            bezier10Path.cubicTo(206.66f, 31.37f, 206.81f, 31.09f, 206.85f, 30.67f);
            bezier10Path.cubicTo(206.95f, 29.93f, 207.01f, 27.59f, 207.04f, 23.66f);
            bezier10Path.lineTo(207.04f, 17.2f);
            bezier10Path.lineTo(206.44f, 17.18f);
            bezier10Path.lineTo(203.51f, 17.31f);
            bezier10Path.lineTo(203.51f, 16.26f);
            bezier10Path.cubicTo(205.42f, 15.27f, 206.41f, 14.74f, 206.48f, 14.69f);
            bezier10Path.cubicTo(206.67f, 14.56f, 206.76f, 14.39f, 206.76f, 14.17f);
            bezier10Path.cubicTo(206.76f, 13.5f, 206.8f, 12.66f, 206.86f, 11.66f);
            bezier10Path.cubicTo(206.92f, 10.67f, 207.02f, 9.96f, 207.15f, 9.54f);
            bezier10Path.cubicTo(207.28f, 9.13f, 207.49f, 8.73f, 207.77f, 8.34f);
            bezier10Path.cubicTo(208.25f, 7.71f, 209.29f, 6.69f, 210.92f, 5.29f);
            bezier10Path.lineTo(213.52f, 2.96f);
            bezier10Path.cubicTo(213.93f, 2.6f, 214.42f, 2.32f, 214.96f, 2.11f);
            bezier10Path.cubicTo(215.5f, 1.9f, 216.12f, 1.8f, 216.81f, 1.8f);
            bezier10Path.cubicTo(217.51f, 1.8f, 218.27f, 1.93f, 219.07f, 2.19f);
            bezier10Path.cubicTo(218.84f, 3.74f, 218.74f, 5.17f, 218.77f, 6.49f);
            bezier10Path.lineTo(217.91f, 6.88f);
            bezier10Path.cubicTo(217.48f, 6.48f, 217.08f, 6.2f, 216.7f, 6.05f);
            bezier10Path.cubicTo(216.33f, 5.9f, 215.86f, 5.82f, 215.28f, 5.82f);
            bezier10Path.cubicTo(214.45f, 5.82f, 213.79f, 5.98f, 213.3f, 6.3f);
            bezier10Path.cubicTo(212.96f, 6.52f, 212.73f, 6.83f, 212.62f, 7.22f);
            bezier10Path.cubicTo(212.44f, 7.8f, 212.36f, 9.23f, 212.36f, 11.52f);
            bezier10Path.lineTo(212.36f, 14.52f);
            bezier10Path.lineTo(214.89f, 14.49f);
            bezier10Path.cubicTo(216.13f, 14.46f, 217.2f, 14.41f, 218.1f, 14.34f);
            bezier10Path.lineTo(218.38f, 14.56f);
            bezier10Path.cubicTo(218.31f, 14.8f, 218.25f, 15.05f, 218.21f, 15.31f);
            bezier10Path.lineTo(217.86f, 17.23f);
            bezier10Path.lineTo(215.69f, 17.18f);
            bezier10Path.cubicTo(215.06f, 17.15f, 214.7f, 17.14f, 214.62f, 17.14f);
            bezier10Path.cubicTo(214.36f, 17.14f, 213.6f, 17.16f, 212.36f, 17.2f);
            bezier10Path.lineTo(212.36f, 24.07f);
            bezier10Path.cubicTo(212.36f, 25.6f, 212.37f, 27.06f, 212.41f, 28.46f);
            bezier10Path.cubicTo(212.45f, 29.85f, 212.51f, 30.69f, 212.59f, 30.97f);
            bezier10Path.cubicTo(212.67f, 31.17f, 212.78f, 31.34f, 212.93f, 31.47f);
            bezier10Path.cubicTo(213.08f, 31.6f, 213.33f, 31.69f, 213.67f, 31.75f);
            bezier10Path.cubicTo(213.76f, 31.76f, 214.73f, 31.84f, 216.6f, 31.98f);
            bezier10Path.lineTo(216.6f, 33.64f);
            bezier10Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier10Path, paint);
            
            // Bezier 11
            RectF bezier11Rect = CacheForTitle.bezier11Rect;
            bezier11Rect.set(221.01f, 12.88f, 239.49f, 34.39f);
            Path bezier11Path = CacheForTitle.bezier11Path;
            bezier11Path.reset();
            bezier11Path.moveTo(231.2f, 34.39f);
            bezier11Path.cubicTo(229.78f, 34.39f, 228.53f, 34.23f, 227.45f, 33.9f);
            bezier11Path.cubicTo(226.37f, 33.57f, 225.44f, 33.12f, 224.67f, 32.54f);
            bezier11Path.cubicTo(223.91f, 31.97f, 223.23f, 31.27f, 222.65f, 30.44f);
            bezier11Path.cubicTo(222.07f, 29.6f, 221.65f, 28.64f, 221.39f, 27.55f);
            bezier11Path.cubicTo(221.13f, 26.46f, 221.01f, 25.27f, 221.01f, 23.98f);
            bezier11Path.cubicTo(221.01f, 22.1f, 221.26f, 20.42f, 221.76f, 18.95f);
            bezier11Path.cubicTo(222.1f, 17.91f, 222.5f, 17.17f, 222.96f, 16.71f);
            bezier11Path.cubicTo(223.25f, 16.42f, 224f, 15.88f, 225.2f, 15.09f);
            bezier11Path.cubicTo(226.41f, 14.31f, 227.28f, 13.79f, 227.83f, 13.55f);
            bezier11Path.cubicTo(228.83f, 13.1f, 230.01f, 12.88f, 231.38f, 12.88f);
            bezier11Path.cubicTo(233.3f, 12.88f, 234.87f, 13.28f, 236.11f, 14.08f);
            bezier11Path.cubicTo(237.34f, 14.89f, 238.21f, 15.91f, 238.72f, 17.16f);
            bezier11Path.cubicTo(239.23f, 18.41f, 239.49f, 19.92f, 239.49f, 21.7f);
            bezier11Path.cubicTo(239.49f, 22.1f, 239.47f, 22.49f, 239.44f, 22.86f);
            bezier11Path.cubicTo(239.08f, 22.98f, 238.54f, 23.11f, 237.81f, 23.25f);
            bezier11Path.cubicTo(236.83f, 23.44f, 236.17f, 23.54f, 235.83f, 23.55f);
            bezier11Path.cubicTo(234.75f, 23.64f, 233.33f, 23.69f, 231.57f, 23.7f);
            bezier11Path.cubicTo(229.81f, 23.72f, 228.83f, 23.73f, 228.64f, 23.74f);
            bezier11Path.cubicTo(228.46f, 23.76f, 228.25f, 23.77f, 228.02f, 23.77f);
            bezier11Path.lineTo(226.6f, 23.77f);
            bezier11Path.cubicTo(226.71f, 26.03f, 227.42f, 27.82f, 228.71f, 29.13f);
            bezier11Path.cubicTo(230f, 30.45f, 231.59f, 31.1f, 233.48f, 31.1f);
            bezier11Path.cubicTo(234.3f, 31.1f, 235.05f, 31.01f, 235.74f, 30.83f);
            bezier11Path.cubicTo(236.43f, 30.65f, 237.33f, 30.28f, 238.45f, 29.72f);
            bezier11Path.lineTo(238.97f, 30.33f);
            bezier11Path.lineTo(238.02f, 32.44f);
            bezier11Path.cubicTo(236.85f, 33.15f, 235.64f, 33.68f, 234.39f, 34.03f);
            bezier11Path.cubicTo(233.45f, 34.27f, 232.39f, 34.39f, 231.2f, 34.39f);
            bezier11Path.close();
            bezier11Path.moveTo(230.26f, 15.27f);
            bezier11Path.cubicTo(229.14f, 15.27f, 228.21f, 15.74f, 227.48f, 16.69f);
            bezier11Path.cubicTo(226.73f, 17.65f, 226.39f, 19.23f, 226.45f, 21.42f);
            bezier11Path.cubicTo(227.29f, 21.55f, 228.71f, 21.61f, 230.69f, 21.61f);
            bezier11Path.cubicTo(231.95f, 21.61f, 233f, 21.55f, 233.85f, 21.42f);
            bezier11Path.cubicTo(233.91f, 19.14f, 233.6f, 17.54f, 232.92f, 16.62f);
            bezier11Path.cubicTo(232.24f, 15.72f, 231.35f, 15.27f, 230.26f, 15.27f);
            bezier11Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier11Path, paint);
            
            // Bezier 12
            RectF bezier12Rect = CacheForTitle.bezier12Rect;
            bezier12Rect.set(254.55f, 3.03f, 276.66f, 34.39f);
            Path bezier12Path = CacheForTitle.bezier12Path;
            bezier12Path.reset();
            bezier12Path.moveTo(263.8f, 34.39f);
            bezier12Path.cubicTo(262.03f, 34.39f, 260.46f, 34.23f, 259.08f, 33.9f);
            bezier12Path.cubicTo(257.71f, 33.57f, 256.2f, 33f, 254.55f, 32.2f);
            bezier12Path.cubicTo(254.99f, 30.56f, 255.22f, 28.08f, 255.23f, 24.73f);
            bezier12Path.lineTo(257.04f, 24.73f);
            bezier12Path.cubicTo(257.01f, 25.77f, 257.09f, 27.05f, 257.28f, 28.59f);
            bezier12Path.cubicTo(257.82f, 29.47f, 258.76f, 30.26f, 260.08f, 30.93f);
            bezier12Path.cubicTo(261.39f, 31.6f, 262.84f, 31.94f, 264.4f, 31.94f);
            bezier12Path.cubicTo(265.76f, 31.94f, 266.98f, 31.7f, 268.05f, 31.22f);
            bezier12Path.cubicTo(269.11f, 30.74f, 269.89f, 30.08f, 270.37f, 29.23f);
            bezier12Path.cubicTo(270.85f, 28.38f, 271.09f, 27.42f, 271.09f, 26.35f);
            bezier12Path.cubicTo(271.09f, 25.44f, 270.92f, 24.67f, 270.58f, 24.02f);
            bezier12Path.cubicTo(270.25f, 23.38f, 269.72f, 22.86f, 269f, 22.47f);
            bezier12Path.cubicTo(268.29f, 22.09f, 267.02f, 21.69f, 265.22f, 21.27f);
            bezier12Path.cubicTo(262.62f, 20.72f, 260.91f, 20.33f, 260.1f, 20.09f);
            bezier12Path.cubicTo(258.86f, 19.71f, 257.87f, 19.18f, 257.12f, 18.47f);
            bezier12Path.cubicTo(256.36f, 17.77f, 255.8f, 16.92f, 255.43f, 15.92f);
            bezier12Path.cubicTo(255.06f, 14.93f, 254.87f, 13.86f, 254.87f, 12.71f);
            bezier12Path.cubicTo(254.87f, 11.1f, 255.21f, 9.62f, 255.88f, 8.27f);
            bezier12Path.cubicTo(256.55f, 6.91f, 257.44f, 5.86f, 258.55f, 5.11f);
            bezier12Path.cubicTo(259.65f, 4.37f, 260.9f, 3.83f, 262.29f, 3.51f);
            bezier12Path.cubicTo(263.68f, 3.19f, 265.11f, 3.03f, 266.57f, 3.03f);
            bezier12Path.cubicTo(268.09f, 3.03f, 269.57f, 3.16f, 270.99f, 3.44f);
            bezier12Path.cubicTo(272.42f, 3.71f, 273.66f, 4.1f, 274.7f, 4.62f);
            bezier12Path.lineTo(274.88f, 5.13f);
            bezier12Path.cubicTo(274.68f, 6.07f, 274.53f, 6.98f, 274.44f, 7.88f);
            bezier12Path.cubicTo(274.34f, 8.77f, 274.27f, 9.95f, 274.23f, 11.42f);
            bezier12Path.lineTo(272.42f, 11.42f);
            bezier12Path.cubicTo(272.39f, 9.75f, 272.32f, 8.58f, 272.21f, 7.89f);
            bezier12Path.cubicTo(271.76f, 7.26f, 270.99f, 6.7f, 269.9f, 6.21f);
            bezier12Path.cubicTo(268.8f, 5.72f, 267.57f, 5.48f, 266.21f, 5.48f);
            bezier12Path.cubicTo(264.26f, 5.48f, 262.75f, 5.97f, 261.68f, 6.95f);
            bezier12Path.cubicTo(260.61f, 7.94f, 260.08f, 9.09f, 260.08f, 10.41f);
            bezier12Path.cubicTo(260.09f, 11.35f, 260.25f, 12.12f, 260.55f, 12.71f);
            bezier12Path.cubicTo(260.85f, 13.3f, 261.28f, 13.76f, 261.84f, 14.11f);
            bezier12Path.cubicTo(262.4f, 14.45f, 263.22f, 14.77f, 264.31f, 15.05f);
            bezier12Path.cubicTo(265.14f, 15.23f, 266.3f, 15.44f, 267.79f, 15.7f);
            bezier12Path.cubicTo(269.27f, 15.96f, 270.24f, 16.13f, 270.68f, 16.24f);
            bezier12Path.cubicTo(271.84f, 16.54f, 272.78f, 16.9f, 273.5f, 17.32f);
            bezier12Path.cubicTo(274.22f, 17.75f, 274.79f, 18.23f, 275.21f, 18.79f);
            bezier12Path.cubicTo(275.63f, 19.34f, 275.98f, 20.03f, 276.25f, 20.87f);
            bezier12Path.cubicTo(276.53f, 21.71f, 276.66f, 22.65f, 276.66f, 23.7f);
            bezier12Path.cubicTo(276.66f, 25.54f, 276.28f, 27.15f, 275.52f, 28.54f);
            bezier12Path.cubicTo(274.95f, 29.59f, 274.15f, 30.55f, 273.13f, 31.41f);
            bezier12Path.cubicTo(272.12f, 32.28f, 271.07f, 32.93f, 269.99f, 33.36f);
            bezier12Path.cubicTo(268.27f, 34.05f, 266.21f, 34.39f, 263.8f, 34.39f);
            bezier12Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier12Path, paint);
            
            // Bezier 13
            RectF bezier13Rect = CacheForTitle.bezier13Rect;
            bezier13Rect.set(280.06f, 12.77f, 303.83f, 45f);
            Path bezier13Path = CacheForTitle.bezier13Path;
            bezier13Path.reset();
            bezier13Path.moveTo(292.52f, 45f);
            bezier13Path.lineTo(285.7f, 44.85f);
            bezier13Path.lineTo(280.06f, 45f);
            bezier13Path.lineTo(280.06f, 43.3f);
            bezier13Path.cubicTo(281.37f, 43.3f, 282.17f, 43.24f, 282.47f, 43.13f);
            bezier13Path.cubicTo(282.64f, 43.07f, 282.78f, 42.97f, 282.89f, 42.82f);
            bezier13Path.cubicTo(283f, 42.67f, 283.07f, 42.48f, 283.09f, 42.27f);
            bezier13Path.cubicTo(283.17f, 41.69f, 283.23f, 40.46f, 283.29f, 38.57f);
            bezier13Path.lineTo(283.35f, 33.94f);
            bezier13Path.lineTo(283.35f, 23.98f);
            bezier13Path.cubicTo(283.35f, 22.17f, 283.32f, 20.59f, 283.27f, 19.24f);
            bezier13Path.cubicTo(283.21f, 17.88f, 283.11f, 17.08f, 282.97f, 16.84f);
            bezier13Path.cubicTo(282.87f, 16.68f, 282.71f, 16.56f, 282.51f, 16.48f);
            bezier13Path.cubicTo(282.31f, 16.4f, 281.5f, 16.36f, 280.06f, 16.34f);
            bezier13Path.lineTo(280.06f, 14.66f);
            bezier13Path.cubicTo(282.2f, 14.44f, 283.81f, 14.19f, 284.9f, 13.93f);
            bezier13Path.cubicTo(285.99f, 13.67f, 287.12f, 13.29f, 288.28f, 12.77f);
            bezier13Path.lineTo(288.77f, 13.09f);
            bezier13Path.lineTo(288.71f, 16.71f);
            bezier13Path.cubicTo(288.93f, 16.54f, 289.28f, 16.24f, 289.79f, 15.83f);
            bezier13Path.lineTo(291.94f, 14.06f);
            bezier13Path.cubicTo(292.08f, 13.93f, 292.3f, 13.73f, 292.58f, 13.46f);
            bezier13Path.cubicTo(293.14f, 13.23f, 293.61f, 13.08f, 293.99f, 13f);
            bezier13Path.cubicTo(294.37f, 12.92f, 294.9f, 12.88f, 295.57f, 12.88f);
            bezier13Path.cubicTo(297.09f, 12.88f, 298.32f, 13.09f, 299.25f, 13.53f);
            bezier13Path.cubicTo(300.59f, 14.14f, 301.68f, 15.1f, 302.54f, 16.4f);
            bezier13Path.cubicTo(303.4f, 17.7f, 303.83f, 19.28f, 303.83f, 21.14f);
            bezier13Path.cubicTo(303.83f, 22.32f, 303.68f, 23.49f, 303.36f, 24.65f);
            bezier13Path.cubicTo(303.05f, 25.81f, 302.69f, 26.73f, 302.3f, 27.42f);
            bezier13Path.cubicTo(301.9f, 28.11f, 301.48f, 28.69f, 301.04f, 29.14f);
            bezier13Path.cubicTo(300.71f, 29.49f, 300.15f, 29.95f, 299.37f, 30.52f);
            bezier13Path.cubicTo(298.59f, 31.1f, 297.87f, 31.65f, 297.21f, 32.2f);
            bezier13Path.cubicTo(296.55f, 32.74f, 296.08f, 33.11f, 295.79f, 33.3f);
            bezier13Path.cubicTo(295.33f, 33.58f, 294.89f, 33.78f, 294.48f, 33.9f);
            bezier13Path.cubicTo(293.9f, 34.07f, 293.24f, 34.16f, 292.47f, 34.16f);
            bezier13Path.cubicTo(291.87f, 34.16f, 291.26f, 34.1f, 290.63f, 33.99f);
            bezier13Path.cubicTo(289.99f, 33.87f, 289.36f, 33.7f, 288.71f, 33.49f);
            bezier13Path.lineTo(288.71f, 41.45f);
            bezier13Path.cubicTo(288.71f, 42.11f, 288.77f, 42.52f, 288.9f, 42.69f);
            bezier13Path.cubicTo(289.03f, 42.85f, 289.27f, 42.97f, 289.61f, 43.04f);
            bezier13Path.cubicTo(289.76f, 43.07f, 290.72f, 43.16f, 292.52f, 43.3f);
            bezier13Path.lineTo(292.52f, 45f);
            bezier13Path.close();
            bezier13Path.moveTo(293.1f, 16.69f);
            bezier13Path.cubicTo(292.31f, 16.69f, 291.51f, 16.89f, 290.7f, 17.29f);
            bezier13Path.cubicTo(289.89f, 17.69f, 289.23f, 18.2f, 288.71f, 18.82f);
            bezier13Path.lineTo(288.71f, 29.36f);
            bezier13Path.cubicTo(289.37f, 30.03f, 290.06f, 30.54f, 290.78f, 30.88f);
            bezier13Path.cubicTo(291.49f, 31.21f, 292.24f, 31.38f, 293.01f, 31.38f);
            bezier13Path.cubicTo(294.05f, 31.38f, 294.96f, 31.12f, 295.76f, 30.61f);
            bezier13Path.cubicTo(296.55f, 30.09f, 297.18f, 29.22f, 297.63f, 28f);
            bezier13Path.cubicTo(298.08f, 26.79f, 298.31f, 25.38f, 298.31f, 23.79f);
            bezier13Path.cubicTo(298.31f, 22.77f, 298.19f, 21.8f, 297.96f, 20.89f);
            bezier13Path.cubicTo(297.73f, 19.98f, 297.42f, 19.24f, 297.01f, 18.68f);
            bezier13Path.cubicTo(296.61f, 18.11f, 296.06f, 17.64f, 295.37f, 17.26f);
            bezier13Path.cubicTo(294.67f, 16.88f, 293.92f, 16.69f, 293.1f, 16.69f);
            bezier13Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier13Path, paint);
            
            // Bezier 14
            RectF bezier14Rect = CacheForTitle.bezier14Rect;
            bezier14Rect.set(307.6f, 12.88f, 326.9f, 34.2f);
            Path bezier14Path = CacheForTitle.bezier14Path;
            bezier14Path.reset();
            bezier14Path.moveTo(312.59f, 34.2f);
            bezier14Path.cubicTo(311.03f, 34.2f, 309.81f, 33.74f, 308.92f, 32.82f);
            bezier14Path.cubicTo(308.04f, 31.9f, 307.6f, 30.59f, 307.6f, 28.86f);
            bezier14Path.cubicTo(307.6f, 27.7f, 307.8f, 26.75f, 308.19f, 26f);
            bezier14Path.cubicTo(308.59f, 25.26f, 309.01f, 24.71f, 309.46f, 24.36f);
            bezier14Path.cubicTo(309.91f, 24.01f, 310.61f, 23.67f, 311.56f, 23.34f);
            bezier14Path.cubicTo(313.83f, 22.53f, 316.31f, 21.9f, 319f, 21.44f);
            bezier14Path.cubicTo(319.03f, 19.74f, 318.68f, 18.44f, 317.95f, 17.55f);
            bezier14Path.cubicTo(317.2f, 16.66f, 316.07f, 16.21f, 314.55f, 16.21f);
            bezier14Path.cubicTo(313.93f, 16.21f, 313.34f, 16.29f, 312.78f, 16.45f);
            bezier14Path.cubicTo(312.54f, 16.52f, 312.25f, 16.67f, 311.92f, 16.88f);
            bezier14Path.lineTo(311.02f, 19.05f);
            bezier14Path.lineTo(309.56f, 18.73f);
            bezier14Path.lineTo(309.69f, 15.96f);
            bezier14Path.cubicTo(310.75f, 15.24f, 311.76f, 14.62f, 312.72f, 14.08f);
            bezier14Path.cubicTo(313.68f, 13.55f, 314.36f, 13.23f, 314.74f, 13.12f);
            bezier14Path.cubicTo(315.27f, 12.96f, 316.02f, 12.88f, 316.98f, 12.88f);
            bezier14Path.cubicTo(318.54f, 12.88f, 319.83f, 13.11f, 320.84f, 13.56f);
            bezier14Path.cubicTo(321.85f, 14.01f, 322.6f, 14.54f, 323.08f, 15.16f);
            bezier14Path.cubicTo(323.56f, 15.78f, 323.89f, 16.44f, 324.07f, 17.14f);
            bezier14Path.cubicTo(324.25f, 17.84f, 324.34f, 18.73f, 324.34f, 19.81f);
            bezier14Path.cubicTo(324.34f, 20.27f, 324.3f, 21.46f, 324.23f, 23.4f);
            bezier14Path.cubicTo(324.19f, 24.69f, 324.17f, 25.75f, 324.17f, 26.56f);
            bezier14Path.cubicTo(324.17f, 29.12f, 324.24f, 30.67f, 324.38f, 31.21f);
            bezier14Path.cubicTo(324.44f, 31.47f, 324.55f, 31.64f, 324.73f, 31.73f);
            bezier14Path.cubicTo(324.95f, 31.84f, 325.68f, 31.94f, 326.9f, 32.03f);
            bezier14Path.lineTo(326.9f, 33.64f);
            bezier14Path.cubicTo(325.25f, 33.57f, 323.79f, 33.53f, 322.51f, 33.53f);
            bezier14Path.cubicTo(321.31f, 33.53f, 320.14f, 33.57f, 319f, 33.64f);
            bezier14Path.lineTo(318.81f, 33.4f);
            bezier14Path.lineTo(319f, 30.59f);
            bezier14Path.cubicTo(318.49f, 30.92f, 316.97f, 32.05f, 314.44f, 33.99f);
            bezier14Path.cubicTo(313.8f, 34.13f, 313.18f, 34.2f, 312.59f, 34.2f);
            bezier14Path.close();
            bezier14Path.moveTo(319f, 23.25f);
            bezier14Path.cubicTo(317.78f, 23.51f, 316.67f, 23.82f, 315.66f, 24.19f);
            bezier14Path.cubicTo(314.65f, 24.55f, 313.95f, 25f, 313.56f, 25.54f);
            bezier14Path.cubicTo(313.17f, 26.08f, 312.98f, 26.76f, 312.98f, 27.57f);
            bezier14Path.cubicTo(312.98f, 28.49f, 313.21f, 29.2f, 313.68f, 29.7f);
            bezier14Path.cubicTo(314.14f, 30.21f, 314.76f, 30.46f, 315.52f, 30.46f);
            bezier14Path.cubicTo(316.16f, 30.46f, 316.81f, 30.27f, 317.46f, 29.9f);
            bezier14Path.cubicTo(318.12f, 29.52f, 318.63f, 29.05f, 319f, 28.48f);
            bezier14Path.lineTo(319f, 23.25f);
            bezier14Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier14Path, paint);
            
            // Bezier 15
            RectF bezier15Rect = CacheForTitle.bezier15Rect;
            bezier15Rect.set(329.85f, 12.88f, 346.43f, 34.39f);
            Path bezier15Path = CacheForTitle.bezier15Path;
            bezier15Path.reset();
            bezier15Path.moveTo(339.72f, 34.39f);
            bezier15Path.cubicTo(337.37f, 34.39f, 335.46f, 33.94f, 334f, 33.02f);
            bezier15Path.cubicTo(332.53f, 32.1f, 331.42f, 30.79f, 330.66f, 29.08f);
            bezier15Path.cubicTo(330.12f, 27.88f, 329.85f, 26.27f, 329.85f, 24.26f);
            bezier15Path.cubicTo(329.85f, 22.75f, 329.99f, 21.52f, 330.28f, 20.56f);
            bezier15Path.cubicTo(330.56f, 19.6f, 330.97f, 18.75f, 331.5f, 18.02f);
            bezier15Path.cubicTo(331.86f, 17.53f, 332.34f, 17.08f, 332.94f, 16.65f);
            bezier15Path.lineTo(336.26f, 14.56f);
            bezier15Path.cubicTo(337.38f, 13.84f, 338.14f, 13.41f, 338.56f, 13.27f);
            bezier15Path.cubicTo(339.25f, 13.01f, 340.14f, 12.88f, 341.25f, 12.88f);
            bezier15Path.cubicTo(342.17f, 12.88f, 343.02f, 12.96f, 343.82f, 13.11f);
            bezier15Path.cubicTo(344.62f, 13.26f, 345.35f, 13.48f, 346.02f, 13.78f);
            bezier15Path.lineTo(346.24f, 14.15f);
            bezier15Path.lineTo(345.7f, 17.66f);
            bezier15Path.cubicTo(345.66f, 17.97f, 345.59f, 18.96f, 345.49f, 20.62f);
            bezier15Path.lineTo(343.81f, 20.62f);
            bezier15Path.cubicTo(343.72f, 19.35f, 343.62f, 18.4f, 343.49f, 17.79f);
            bezier15Path.cubicTo(343.18f, 17.3f, 342.72f, 16.9f, 342.09f, 16.59f);
            bezier15Path.cubicTo(341.46f, 16.28f, 340.68f, 16.13f, 339.76f, 16.13f);
            bezier15Path.cubicTo(338.67f, 16.13f, 337.81f, 16.33f, 337.16f, 16.73f);
            bezier15Path.cubicTo(336.52f, 17.13f, 336.04f, 17.81f, 335.74f, 18.75f);
            bezier15Path.cubicTo(335.44f, 19.7f, 335.29f, 20.85f, 335.29f, 22.2f);
            bezier15Path.cubicTo(335.29f, 24f, 335.6f, 25.62f, 336.21f, 27.05f);
            bezier15Path.cubicTo(336.83f, 28.47f, 337.65f, 29.52f, 338.66f, 30.19f);
            bezier15Path.cubicTo(339.67f, 30.86f, 340.91f, 31.19f, 342.39f, 31.19f);
            bezier15Path.cubicTo(343.06f, 31.19f, 343.7f, 31.11f, 344.3f, 30.96f);
            bezier15Path.cubicTo(344.91f, 30.81f, 345.48f, 30.59f, 346.02f, 30.31f);
            bezier15Path.lineTo(346.43f, 30.8f);
            bezier15Path.lineTo(345.49f, 32.89f);
            bezier15Path.cubicTo(344.25f, 33.5f, 343.25f, 33.91f, 342.49f, 34.1f);
            bezier15Path.cubicTo(341.72f, 34.3f, 340.8f, 34.39f, 339.72f, 34.39f);
            bezier15Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor2);
            canvas.drawPath(bezier15Path, paint);
            
            // Group 3
            {
                RectF group3 = CacheForTitle.group3;
                group3.set(0.05f, -0.2f, 367.95f, 45f);
                canvas.save();
                
                // Clip
                Path clipPath = CacheForTitle.clipPath;
                clipPath.reset();
                clipPath.moveTo(group3.left, group3.top);
                clipPath.lineTo(group3.right, group3.top);
                clipPath.lineTo(group3.right, group3.bottom);
                clipPath.lineTo(group3.left, group3.bottom);
                clipPath.close();
                canvas.clipPath(clipPath);
                
                // Bezier 16
                RectF bezier16Rect = CacheForTitle.bezier16Rect;
                bezier16Rect.set(349.47f, 12.88f, 367.95f, 34.39f);
                Path bezier16Path = CacheForTitle.bezier16Path;
                bezier16Path.reset();
                bezier16Path.moveTo(359.67f, 34.39f);
                bezier16Path.cubicTo(358.25f, 34.39f, 356.99f, 34.23f, 355.91f, 33.9f);
                bezier16Path.cubicTo(354.83f, 33.57f, 353.9f, 33.12f, 353.14f, 32.54f);
                bezier16Path.cubicTo(352.37f, 31.97f, 351.69f, 31.27f, 351.11f, 30.44f);
                bezier16Path.cubicTo(350.53f, 29.6f, 350.11f, 28.64f, 349.85f, 27.55f);
                bezier16Path.cubicTo(349.6f, 26.46f, 349.47f, 25.27f, 349.47f, 23.98f);
                bezier16Path.cubicTo(349.47f, 22.1f, 349.72f, 20.42f, 350.22f, 18.95f);
                bezier16Path.cubicTo(350.56f, 17.91f, 350.97f, 17.17f, 351.42f, 16.71f);
                bezier16Path.cubicTo(351.71f, 16.42f, 352.46f, 15.88f, 353.66f, 15.09f);
                bezier16Path.cubicTo(354.87f, 14.31f, 355.74f, 13.79f, 356.29f, 13.55f);
                bezier16Path.cubicTo(357.29f, 13.1f, 358.47f, 12.88f, 359.84f, 12.88f);
                bezier16Path.cubicTo(361.76f, 12.88f, 363.34f, 13.28f, 364.57f, 14.08f);
                bezier16Path.cubicTo(365.8f, 14.89f, 366.67f, 15.91f, 367.18f, 17.16f);
                bezier16Path.cubicTo(367.69f, 18.41f, 367.95f, 19.92f, 367.95f, 21.7f);
                bezier16Path.cubicTo(367.95f, 22.1f, 367.93f, 22.49f, 367.9f, 22.86f);
                bezier16Path.cubicTo(367.55f, 22.98f, 367f, 23.11f, 366.27f, 23.25f);
                bezier16Path.cubicTo(365.29f, 23.44f, 364.63f, 23.54f, 364.29f, 23.55f);
                bezier16Path.cubicTo(363.21f, 23.64f, 361.79f, 23.69f, 360.03f, 23.7f);
                bezier16Path.cubicTo(358.27f, 23.72f, 357.29f, 23.73f, 357.1f, 23.74f);
                bezier16Path.cubicTo(356.92f, 23.76f, 356.71f, 23.77f, 356.48f, 23.77f);
                bezier16Path.lineTo(355.06f, 23.77f);
                bezier16Path.cubicTo(355.18f, 26.03f, 355.88f, 27.82f, 357.17f, 29.13f);
                bezier16Path.cubicTo(358.46f, 30.45f, 360.05f, 31.1f, 361.95f, 31.1f);
                bezier16Path.cubicTo(362.76f, 31.1f, 363.52f, 31.01f, 364.2f, 30.83f);
                bezier16Path.cubicTo(364.89f, 30.65f, 365.8f, 30.28f, 366.92f, 29.72f);
                bezier16Path.lineTo(367.43f, 30.33f);
                bezier16Path.lineTo(366.48f, 32.44f);
                bezier16Path.cubicTo(365.31f, 33.15f, 364.1f, 33.68f, 362.85f, 34.03f);
                bezier16Path.cubicTo(361.92f, 34.27f, 360.86f, 34.39f, 359.67f, 34.39f);
                bezier16Path.close();
                bezier16Path.moveTo(358.72f, 15.27f);
                bezier16Path.cubicTo(357.6f, 15.27f, 356.67f, 15.74f, 355.94f, 16.69f);
                bezier16Path.cubicTo(355.2f, 17.65f, 354.85f, 19.23f, 354.91f, 21.42f);
                bezier16Path.cubicTo(355.76f, 21.55f, 357.17f, 21.61f, 359.15f, 21.61f);
                bezier16Path.cubicTo(360.41f, 21.61f, 361.46f, 21.55f, 362.31f, 21.42f);
                bezier16Path.cubicTo(362.37f, 19.14f, 362.06f, 17.54f, 361.39f, 16.62f);
                bezier16Path.cubicTo(360.7f, 15.72f, 359.81f, 15.27f, 358.72f, 15.27f);
                bezier16Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(fillColor2);
                canvas.drawPath(bezier16Path, paint);
                
                // Bezier 17
                RectF bezier17Rect = CacheForTitle.bezier17Rect;
                bezier17Rect.set(0f, 1.54f, 32.49f, 31.79f);
                Path bezier17Path = CacheForTitle.bezier17Path;
                bezier17Path.reset();
                bezier17Path.moveTo(14.91f, 31.79f);
                bezier17Path.cubicTo(13.69f, 28.78f, 12.52f, 25.92f, 11.4f, 23.21f);
                bezier17Path.lineTo(8.35f, 15.91f);
                bezier17Path.cubicTo(5.95f, 10.19f, 4.48f, 6.78f, 3.93f, 5.68f);
                bezier17Path.cubicTo(3.37f, 4.59f, 2.96f, 3.96f, 2.67f, 3.8f);
                bezier17Path.cubicTo(2.24f, 3.57f, 1.35f, 3.44f, 0f, 3.41f);
                bezier17Path.lineTo(0f, 1.54f);
                bezier17Path.cubicTo(3.44f, 1.64f, 5.54f, 1.69f, 6.28f, 1.69f);
                bezier17Path.lineTo(14.01f, 1.54f);
                bezier17Path.lineTo(14.01f, 3.41f);
                bezier17Path.cubicTo(12.8f, 3.43f, 11.93f, 3.5f, 11.38f, 3.63f);
                bezier17Path.cubicTo(11.07f, 3.7f, 10.85f, 3.8f, 10.73f, 3.94f);
                bezier17Path.cubicTo(10.6f, 4.08f, 10.54f, 4.25f, 10.54f, 4.47f);
                bezier17Path.cubicTo(10.54f, 4.9f, 11.02f, 6.26f, 11.96f, 8.56f);
                bezier17Path.cubicTo(12.51f, 9.88f, 12.8f, 10.59f, 12.83f, 10.7f);
                bezier17Path.cubicTo(12.87f, 10.8f, 12.92f, 10.94f, 12.97f, 11.1f);
                bezier17Path.lineTo(18.42f, 24.37f);
                bezier17Path.lineTo(23.19f, 12.54f);
                bezier17Path.cubicTo(23.31f, 12.26f, 23.82f, 10.91f, 24.72f, 8.47f);
                bezier17Path.cubicTo(25.37f, 6.75f, 25.76f, 5.59f, 25.9f, 5.01f);
                bezier17Path.cubicTo(25.93f, 4.83f, 25.95f, 4.66f, 25.95f, 4.49f);
                bezier17Path.cubicTo(25.95f, 4.25f, 25.91f, 4.06f, 25.83f, 3.94f);
                bezier17Path.cubicTo(25.75f, 3.82f, 25.65f, 3.73f, 25.52f, 3.67f);
                bezier17Path.cubicTo(25.42f, 3.63f, 25.16f, 3.59f, 24.74f, 3.56f);
                bezier17Path.cubicTo(23.81f, 3.48f, 23.02f, 3.43f, 22.38f, 3.41f);
                bezier17Path.lineTo(22.38f, 1.54f);
                bezier17Path.lineTo(27.84f, 1.67f);
                bezier17Path.lineTo(32.49f, 1.54f);
                bezier17Path.lineTo(32.49f, 3.41f);
                bezier17Path.cubicTo(31.1f, 3.54f, 30.29f, 3.69f, 30.06f, 3.87f);
                bezier17Path.cubicTo(29.67f, 4.17f, 28.86f, 5.8f, 27.62f, 8.75f);
                bezier17Path.lineTo(26.1f, 12.32f);
                bezier17Path.lineTo(23.19f, 19.25f);
                bezier17Path.cubicTo(20.73f, 25.16f, 19.05f, 29.34f, 18.18f, 31.79f);
                bezier17Path.lineTo(14.91f, 31.79f);
                bezier17Path.close();
                
                paint.reset();
                paint.setFlags(Paint.ANTI_ALIAS_FLAG);
                paint.setStyle(Paint.Style.FILL);
                paint.setColor(fillColor);
                canvas.drawPath(bezier17Path, paint);
                
                canvas.restore();
            }
            
            // Bezier 18
            RectF bezier18Rect = CacheForTitle.bezier18Rect;
            bezier18Rect.set(32.27f, 0.49f, 44.38f, 31.64f);
            Path bezier18Path = CacheForTitle.bezier18Path;
            bezier18Path.reset();
            bezier18Path.moveTo(38.17f, 0.49f);
            bezier18Path.cubicTo(39.08f, 0.49f, 39.86f, 0.81f, 40.5f, 1.46f);
            bezier18Path.cubicTo(41.14f, 2.1f, 41.46f, 2.88f, 41.46f, 3.78f);
            bezier18Path.cubicTo(41.46f, 4.7f, 41.14f, 5.48f, 40.5f, 6.13f);
            bezier18Path.cubicTo(39.86f, 6.77f, 39.08f, 7.09f, 38.17f, 7.09f);
            bezier18Path.cubicTo(37.26f, 7.09f, 36.49f, 6.77f, 35.84f, 6.13f);
            bezier18Path.cubicTo(35.2f, 5.48f, 34.88f, 4.7f, 34.88f, 3.78f);
            bezier18Path.cubicTo(34.88f, 2.88f, 35.19f, 2.1f, 35.83f, 1.46f);
            bezier18Path.cubicTo(36.47f, 0.81f, 37.25f, 0.49f, 38.17f, 0.49f);
            bezier18Path.close();
            bezier18Path.moveTo(32.27f, 31.64f);
            bezier18Path.lineTo(32.27f, 30.05f);
            bezier18Path.cubicTo(33.88f, 29.93f, 34.8f, 29.81f, 35.03f, 29.67f);
            bezier18Path.cubicTo(35.26f, 29.54f, 35.4f, 29.28f, 35.46f, 28.91f);
            bezier18Path.cubicTo(35.6f, 28.12f, 35.67f, 26.09f, 35.67f, 22.82f);
            bezier18Path.cubicTo(35.67f, 18.33f, 35.61f, 15.78f, 35.48f, 15.16f);
            bezier18Path.cubicTo(35.42f, 14.87f, 35.33f, 14.69f, 35.2f, 14.6f);
            bezier18Path.cubicTo(34.91f, 14.41f, 33.94f, 14.31f, 32.27f, 14.3f);
            bezier18Path.lineTo(32.27f, 12.67f);
            bezier18Path.cubicTo(34.44f, 12.44f, 36.07f, 12.19f, 37.18f, 11.93f);
            bezier18Path.cubicTo(38.28f, 11.67f, 39.49f, 11.28f, 40.79f, 10.75f);
            bezier18Path.lineTo(41.31f, 11.03f);
            bezier18Path.cubicTo(41.14f, 13.27f, 41.05f, 15.37f, 41.05f, 17.33f);
            bezier18Path.lineTo(41.05f, 24.65f);
            bezier18Path.cubicTo(41.05f, 27.14f, 41.11f, 28.62f, 41.22f, 29.08f);
            bezier18Path.cubicTo(41.28f, 29.34f, 41.39f, 29.51f, 41.57f, 29.6f);
            bezier18Path.cubicTo(41.95f, 29.78f, 42.89f, 29.91f, 44.38f, 29.96f);
            bezier18Path.lineTo(44.38f, 31.64f);
            bezier18Path.cubicTo(42.35f, 31.58f, 40.13f, 31.56f, 37.74f, 31.56f);
            bezier18Path.cubicTo(35.67f, 31.56f, 33.85f, 31.58f, 32.27f, 31.64f);
            bezier18Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier18Path, paint);
            
            // Bezier 19
            RectF bezier19Rect = CacheForTitle.bezier19Rect;
            bezier19Rect.set(46.79f, 10.77f, 62.56f, 31.64f);
            Path bezier19Path = CacheForTitle.bezier19Path;
            bezier19Path.reset();
            bezier19Path.moveTo(59.14f, 29.98f);
            bezier19Path.lineTo(59.14f, 31.64f);
            bezier19Path.cubicTo(57.52f, 31.57f, 55.71f, 31.53f, 53.72f, 31.53f);
            bezier19Path.cubicTo(51.5f, 31.53f, 49.19f, 31.57f, 46.79f, 31.64f);
            bezier19Path.lineTo(46.79f, 29.98f);
            bezier19Path.cubicTo(47.91f, 29.98f, 48.69f, 29.91f, 49.12f, 29.75f);
            bezier19Path.cubicTo(49.32f, 29.68f, 49.47f, 29.55f, 49.57f, 29.38f);
            bezier19Path.cubicTo(49.71f, 29.11f, 49.79f, 28.59f, 49.81f, 27.83f);
            bezier19Path.lineTo(49.89f, 25.92f);
            bezier19Path.cubicTo(49.91f, 25.52f, 49.91f, 24.86f, 49.91f, 23.96f);
            bezier19Path.lineTo(49.91f, 21.14f);
            bezier19Path.cubicTo(49.91f, 19.86f, 49.87f, 18.32f, 49.78f, 16.5f);
            bezier19Path.cubicTo(49.74f, 15.58f, 49.68f, 15.06f, 49.6f, 14.94f);
            bezier19Path.cubicTo(49.52f, 14.81f, 49.4f, 14.72f, 49.23f, 14.67f);
            bezier19Path.cubicTo(48.95f, 14.57f, 48.14f, 14.49f, 46.79f, 14.45f);
            bezier19Path.lineTo(46.79f, 12.79f);
            bezier19Path.cubicTo(49.4f, 12.35f, 51.12f, 12.02f, 51.94f, 11.81f);
            bezier19Path.cubicTo(52.75f, 11.59f, 53.68f, 11.25f, 54.71f, 10.77f);
            bezier19Path.lineTo(55.29f, 11.03f);
            bezier19Path.lineTo(55.25f, 15.38f);
            bezier19Path.cubicTo(56.18f, 14.41f, 56.9f, 13.62f, 57.4f, 12.99f);
            bezier19Path.cubicTo(58.14f, 12.1f, 58.71f, 11.53f, 59.08f, 11.29f);
            bezier19Path.cubicTo(59.59f, 10.94f, 60.28f, 10.77f, 61.12f, 10.77f);
            bezier19Path.cubicTo(61.65f, 10.77f, 62.13f, 10.86f, 62.56f, 11.03f);
            bezier19Path.lineTo(62.43f, 14.08f);
            bezier19Path.cubicTo(62.39f, 15.75f, 62.36f, 16.7f, 62.33f, 16.95f);
            bezier19Path.lineTo(61.42f, 17.23f);
            bezier19Path.cubicTo(61.06f, 16.75f, 60.72f, 16.42f, 60.39f, 16.24f);
            bezier19Path.cubicTo(59.86f, 15.94f, 59.28f, 15.79f, 58.65f, 15.79f);
            bezier19Path.cubicTo(57.8f, 15.79f, 57.07f, 16.05f, 56.46f, 16.57f);
            bezier19Path.cubicTo(55.85f, 17.09f, 55.49f, 17.63f, 55.38f, 18.17f);
            bezier19Path.cubicTo(55.32f, 18.49f, 55.29f, 19.7f, 55.29f, 21.81f);
            bezier19Path.lineTo(55.29f, 23.96f);
            bezier19Path.lineTo(55.34f, 26.89f);
            bezier19Path.cubicTo(55.35f, 27.99f, 55.39f, 28.67f, 55.45f, 28.92f);
            bezier19Path.cubicTo(55.52f, 29.17f, 55.66f, 29.37f, 55.89f, 29.51f);
            bezier19Path.cubicTo(56.12f, 29.65f, 56.62f, 29.76f, 57.38f, 29.81f);
            bezier19Path.lineTo(59.14f, 29.98f);
            bezier19Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier19Path, paint);
            
            // Bezier 20
            RectF bezier20Rect = CacheForTitle.bezier20Rect;
            bezier20Rect.set(63.6f, 3.52f, 76.98f, 32.09f);
            Path bezier20Path = CacheForTitle.bezier20Path;
            bezier20Path.reset();
            bezier20Path.moveTo(63.6f, 15.27f);
            bezier20Path.lineTo(63.6f, 14.3f);
            bezier20Path.lineTo(65.53f, 13.07f);
            bezier20Path.cubicTo(65.85f, 12.87f, 66.15f, 12.66f, 66.44f, 12.43f);
            bezier20Path.lineTo(66.44f, 9.55f);
            bezier20Path.cubicTo(66.44f, 8.51f, 66.38f, 7.24f, 66.26f, 5.72f);
            bezier20Path.cubicTo(67.66f, 5.26f, 68.56f, 4.95f, 68.97f, 4.79f);
            bezier20Path.cubicTo(69.05f, 4.76f, 69.96f, 4.34f, 71.71f, 3.52f);
            bezier20Path.lineTo(72.27f, 3.95f);
            bezier20Path.lineTo(72.05f, 6.19f);
            bezier20Path.lineTo(71.9f, 8.66f);
            bezier20Path.lineTo(71.71f, 12.43f);
            bezier20Path.lineTo(72.42f, 12.43f);
            bezier20Path.cubicTo(74.32f, 12.43f, 75.77f, 12.36f, 76.74f, 12.21f);
            bezier20Path.lineTo(76.38f, 15.12f);
            bezier20Path.cubicTo(76.2f, 15.15f, 76.05f, 15.16f, 75.9f, 15.16f);
            bezier20Path.lineTo(73.79f, 15.12f);
            bezier20Path.lineTo(71.71f, 15.12f);
            bezier20Path.lineTo(71.71f, 22.3f);
            bezier20Path.cubicTo(71.71f, 24.51f, 71.73f, 25.82f, 71.77f, 26.22f);
            bezier20Path.cubicTo(71.83f, 26.89f, 72.07f, 27.42f, 72.49f, 27.8f);
            bezier20Path.cubicTo(72.91f, 28.18f, 73.53f, 28.37f, 74.33f, 28.37f);
            bezier20Path.cubicTo(74.82f, 28.38f, 75.21f, 28.37f, 75.5f, 28.34f);
            bezier20Path.cubicTo(75.8f, 28.3f, 76.18f, 28.23f, 76.63f, 28.13f);
            bezier20Path.lineTo(76.98f, 29.02f);
            bezier20Path.lineTo(76.2f, 29.79f);
            bezier20Path.cubicTo(75.57f, 30.44f, 75.02f, 31f, 74.55f, 31.49f);
            bezier20Path.cubicTo(73.99f, 31.73f, 73.49f, 31.9f, 73.05f, 31.97f);
            bezier20Path.cubicTo(72.61f, 32.05f, 72.17f, 32.09f, 71.71f, 32.09f);
            bezier20Path.cubicTo(70.04f, 32.09f, 68.73f, 31.67f, 67.78f, 30.81f);
            bezier20Path.cubicTo(66.83f, 29.96f, 66.35f, 28.89f, 66.35f, 27.62f);
            bezier20Path.lineTo(66.44f, 20.52f);
            bezier20Path.lineTo(66.44f, 15.2f);
            bezier20Path.lineTo(65.86f, 15.2f);
            bezier20Path.cubicTo(65.07f, 15.2f, 64.31f, 15.23f, 63.6f, 15.27f);
            bezier20Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier20Path, paint);
            
            // Bezier 21
            RectF bezier21Rect = CacheForTitle.bezier21Rect;
            bezier21Rect.set(78.42f, 10.88f, 103.12f, 32.22f);
            Path bezier21Path = CacheForTitle.bezier21Path;
            bezier21Path.reset();
            bezier21Path.moveTo(78.42f, 14.39f);
            bezier21Path.lineTo(78.42f, 12.75f);
            bezier21Path.cubicTo(79.65f, 12.68f, 80.89f, 12.52f, 82.14f, 12.26f);
            bezier21Path.cubicTo(83.39f, 12f, 84.99f, 11.54f, 86.94f, 10.88f);
            bezier21Path.lineTo(87.24f, 11.12f);
            bezier21Path.cubicTo(87.04f, 13.96f, 86.94f, 16.58f, 86.94f, 18.99f);
            bezier21Path.lineTo(86.94f, 21.4f);
            bezier21Path.cubicTo(86.94f, 23.45f, 86.99f, 24.82f, 87.09f, 25.51f);
            bezier21Path.cubicTo(87.23f, 26.41f, 87.58f, 27.09f, 88.12f, 27.55f);
            bezier21Path.cubicTo(88.67f, 28.01f, 89.39f, 28.24f, 90.3f, 28.24f);
            bezier21Path.cubicTo(91.33f, 28.24f, 92.2f, 27.97f, 92.9f, 27.44f);
            bezier21Path.cubicTo(93.6f, 26.9f, 94.09f, 26.34f, 94.36f, 25.77f);
            bezier21Path.cubicTo(94.53f, 25.39f, 94.62f, 24.62f, 94.62f, 23.44f);
            bezier21Path.lineTo(94.62f, 19.77f);
            bezier21Path.lineTo(94.58f, 16.71f);
            bezier21Path.cubicTo(94.58f, 15.72f, 94.51f, 15.13f, 94.38f, 14.92f);
            bezier21Path.cubicTo(94.31f, 14.8f, 94.17f, 14.7f, 93.95f, 14.62f);
            bezier21Path.cubicTo(93.74f, 14.55f, 92.86f, 14.47f, 91.33f, 14.39f);
            bezier21Path.lineTo(91.33f, 12.75f);
            bezier21Path.cubicTo(93.55f, 12.46f, 95.06f, 12.24f, 95.87f, 12.06f);
            bezier21Path.cubicTo(96.67f, 11.89f, 98.03f, 11.5f, 99.96f, 10.88f);
            bezier21Path.lineTo(100.36f, 11.12f);
            bezier21Path.lineTo(100.13f, 15.08f);
            bezier21Path.cubicTo(100.01f, 17.89f, 99.96f, 19.46f, 99.96f, 19.79f);
            bezier21Path.lineTo(99.96f, 24.2f);
            bezier21Path.cubicTo(99.96f, 26.82f, 100.02f, 28.44f, 100.15f, 29.06f);
            bezier21Path.cubicTo(100.21f, 29.32f, 100.31f, 29.5f, 100.47f, 29.6f);
            bezier21Path.cubicTo(100.74f, 29.74f, 101.63f, 29.85f, 103.12f, 29.92f);
            bezier21Path.lineTo(103.12f, 31.64f);
            bezier21Path.lineTo(98.69f, 31.53f);
            bezier21Path.lineTo(94.62f, 31.64f);
            bezier21Path.lineTo(94.47f, 31.47f);
            bezier21Path.lineTo(94.6f, 29.81f);
            bezier21Path.cubicTo(94.61f, 29.54f, 94.62f, 28.99f, 94.62f, 28.16f);
            bezier21Path.cubicTo(94.06f, 28.6f, 93.57f, 29.01f, 93.16f, 29.38f);
            bezier21Path.lineTo(90.73f, 31.68f);
            bezier21Path.cubicTo(89.74f, 32.04f, 88.74f, 32.22f, 87.74f, 32.22f);
            bezier21Path.cubicTo(85.8f, 32.22f, 84.28f, 31.69f, 83.17f, 30.63f);
            bezier21Path.cubicTo(82.07f, 29.57f, 81.52f, 28.16f, 81.52f, 26.39f);
            bezier21Path.cubicTo(81.52f, 26.18f, 81.54f, 25.38f, 81.58f, 24f);
            bezier21Path.cubicTo(81.6f, 23.27f, 81.6f, 22.33f, 81.6f, 21.16f);
            bezier21Path.lineTo(81.56f, 16.62f);
            bezier21Path.cubicTo(81.56f, 15.79f, 81.51f, 15.28f, 81.4f, 15.08f);
            bezier21Path.cubicTo(81.29f, 14.87f, 81.12f, 14.72f, 80.87f, 14.62f);
            bezier21Path.cubicTo(80.63f, 14.52f, 79.81f, 14.44f, 78.42f, 14.39f);
            bezier21Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier21Path, paint);
            
            // Bezier 22
            RectF bezier22Rect = CacheForTitle.bezier22Rect;
            bezier22Rect.set(105.91f, 10.88f, 125.21f, 32.2f);
            Path bezier22Path = CacheForTitle.bezier22Path;
            bezier22Path.reset();
            bezier22Path.moveTo(117.32f, 21.25f);
            bezier22Path.cubicTo(116.1f, 21.51f, 114.98f, 21.82f, 113.97f, 22.19f);
            bezier22Path.cubicTo(112.96f, 22.55f, 112.26f, 23f, 111.88f, 23.54f);
            bezier22Path.cubicTo(111.49f, 24.08f, 111.29f, 24.76f, 111.29f, 25.57f);
            bezier22Path.cubicTo(111.29f, 26.49f, 111.53f, 27.2f, 111.99f, 27.7f);
            bezier22Path.cubicTo(112.46f, 28.21f, 113.07f, 28.46f, 113.83f, 28.46f);
            bezier22Path.cubicTo(114.48f, 28.46f, 115.13f, 28.27f, 115.78f, 27.9f);
            bezier22Path.cubicTo(116.43f, 27.52f, 116.94f, 27.05f, 117.32f, 26.48f);
            bezier22Path.lineTo(117.32f, 21.25f);
            bezier22Path.close();
            bezier22Path.moveTo(125.21f, 30.03f);
            bezier22Path.lineTo(125.21f, 31.64f);
            bezier22Path.cubicTo(123.56f, 31.57f, 122.1f, 31.53f, 120.82f, 31.53f);
            bezier22Path.cubicTo(119.62f, 31.53f, 118.45f, 31.57f, 117.32f, 31.64f);
            bezier22Path.lineTo(117.12f, 31.4f);
            bezier22Path.lineTo(117.32f, 28.59f);
            bezier22Path.cubicTo(116.8f, 28.92f, 115.28f, 30.05f, 112.76f, 31.99f);
            bezier22Path.cubicTo(112.11f, 32.13f, 111.49f, 32.2f, 110.91f, 32.2f);
            bezier22Path.cubicTo(109.34f, 32.2f, 108.12f, 31.74f, 107.24f, 30.82f);
            bezier22Path.cubicTo(106.36f, 29.91f, 105.91f, 28.59f, 105.91f, 26.86f);
            bezier22Path.cubicTo(105.91f, 25.7f, 106.11f, 24.75f, 106.51f, 24f);
            bezier22Path.cubicTo(106.9f, 23.26f, 107.32f, 22.71f, 107.78f, 22.36f);
            bezier22Path.cubicTo(108.23f, 22.01f, 108.93f, 21.67f, 109.87f, 21.34f);
            bezier22Path.cubicTo(112.14f, 20.53f, 114.62f, 19.9f, 117.32f, 19.44f);
            bezier22Path.cubicTo(117.35f, 17.74f, 117f, 16.44f, 116.26f, 15.55f);
            bezier22Path.cubicTo(115.52f, 14.66f, 114.38f, 14.21f, 112.86f, 14.21f);
            bezier22Path.cubicTo(112.25f, 14.21f, 111.66f, 14.29f, 111.1f, 14.45f);
            bezier22Path.cubicTo(110.86f, 14.52f, 110.57f, 14.67f, 110.24f, 14.88f);
            bezier22Path.lineTo(109.34f, 17.05f);
            bezier22Path.lineTo(107.87f, 16.73f);
            bezier22Path.lineTo(108f, 13.96f);
            bezier22Path.cubicTo(109.06f, 13.24f, 110.07f, 12.62f, 111.04f, 12.08f);
            bezier22Path.cubicTo(112f, 11.55f, 112.67f, 11.23f, 113.06f, 11.12f);
            bezier22Path.cubicTo(113.59f, 10.96f, 114.33f, 10.88f, 115.3f, 10.88f);
            bezier22Path.cubicTo(116.86f, 10.88f, 118.15f, 11.11f, 119.16f, 11.56f);
            bezier22Path.cubicTo(120.17f, 12.01f, 120.91f, 12.54f, 121.4f, 13.16f);
            bezier22Path.cubicTo(121.88f, 13.78f, 122.21f, 14.44f, 122.38f, 15.14f);
            bezier22Path.cubicTo(122.56f, 15.84f, 122.65f, 16.73f, 122.65f, 17.81f);
            bezier22Path.cubicTo(122.65f, 18.27f, 122.62f, 19.46f, 122.55f, 21.4f);
            bezier22Path.cubicTo(122.5f, 22.69f, 122.48f, 23.75f, 122.48f, 24.56f);
            bezier22Path.cubicTo(122.48f, 27.12f, 122.55f, 28.66f, 122.7f, 29.21f);
            bezier22Path.cubicTo(122.75f, 29.47f, 122.87f, 29.64f, 123.04f, 29.73f);
            bezier22Path.cubicTo(123.27f, 29.84f, 123.99f, 29.94f, 125.21f, 30.03f);
            bezier22Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier22Path, paint);
            
            // Bezier 23
            RectF bezier23Rect = CacheForTitle.bezier23Rect;
            bezier23Rect.set(127.41f, -0.16f, 139.61f, 31.64f);
            Path bezier23Path = CacheForTitle.bezier23Path;
            bezier23Path.reset();
            bezier23Path.moveTo(139.61f, 29.92f);
            bezier23Path.lineTo(139.61f, 31.64f);
            bezier23Path.cubicTo(137.81f, 31.53f, 135.94f, 31.47f, 133.99f, 31.47f);
            bezier23Path.cubicTo(132.04f, 31.47f, 129.85f, 31.53f, 127.41f, 31.64f);
            bezier23Path.lineTo(127.41f, 29.94f);
            bezier23Path.cubicTo(128.77f, 29.9f, 129.59f, 29.84f, 129.88f, 29.77f);
            bezier23Path.cubicTo(130.1f, 29.71f, 130.26f, 29.63f, 130.37f, 29.52f);
            bezier23Path.cubicTo(130.47f, 29.41f, 130.55f, 29.25f, 130.59f, 29.02f);
            bezier23Path.cubicTo(130.69f, 28.59f, 130.76f, 27.23f, 130.81f, 24.95f);
            bezier23Path.cubicTo(130.85f, 22.67f, 130.87f, 20.65f, 130.87f, 18.88f);
            bezier23Path.lineTo(130.87f, 11.78f);
            bezier23Path.cubicTo(130.87f, 9.53f, 130.82f, 7.47f, 130.72f, 5.61f);
            bezier23Path.cubicTo(130.66f, 4.6f, 130.59f, 4.01f, 130.51f, 3.82f);
            bezier23Path.cubicTo(130.45f, 3.72f, 130.37f, 3.64f, 130.27f, 3.59f);
            bezier23Path.cubicTo(130.1f, 3.47f, 129.82f, 3.39f, 129.45f, 3.33f);
            bezier23Path.cubicTo(129.24f, 3.3f, 128.59f, 3.26f, 127.52f, 3.22f);
            bezier23Path.lineTo(127.52f, 1.63f);
            bezier23Path.cubicTo(129.29f, 1.44f, 130.71f, 1.24f, 131.78f, 1.01f);
            bezier23Path.cubicTo(132.84f, 0.79f, 134.26f, 0.4f, 136.06f, -0.16f);
            bezier23Path.lineTo(136.51f, 0.1f);
            bezier23Path.lineTo(136.34f, 4.45f);
            bezier23Path.cubicTo(136.26f, 6.89f, 136.22f, 9.88f, 136.21f, 13.42f);
            bezier23Path.lineTo(136.21f, 18.93f);
            bezier23Path.cubicTo(136.21f, 21.01f, 136.22f, 22.56f, 136.25f, 23.59f);
            bezier23Path.cubicTo(136.31f, 26.16f, 136.35f, 27.71f, 136.38f, 28.25f);
            bezier23Path.cubicTo(136.41f, 28.79f, 136.46f, 29.13f, 136.53f, 29.27f);
            bezier23Path.cubicTo(136.57f, 29.37f, 136.64f, 29.46f, 136.75f, 29.53f);
            bezier23Path.cubicTo(136.87f, 29.63f, 137.1f, 29.71f, 137.41f, 29.77f);
            bezier23Path.cubicTo(137.54f, 29.8f, 138.27f, 29.85f, 139.61f, 29.92f);
            bezier23Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier23Path, paint);
            
            // Bezier 24
            RectF bezier24Rect = CacheForTitle.bezier24Rect;
            bezier24Rect.set(154.41f, 1.03f, 176.52f, 32.39f);
            Path bezier24Path = CacheForTitle.bezier24Path;
            bezier24Path.reset();
            bezier24Path.moveTo(174.09f, 9.42f);
            bezier24Path.lineTo(172.29f, 9.42f);
            bezier24Path.cubicTo(172.26f, 7.75f, 172.19f, 6.58f, 172.07f, 5.89f);
            bezier24Path.cubicTo(171.63f, 5.26f, 170.86f, 4.7f, 169.76f, 4.21f);
            bezier24Path.cubicTo(168.66f, 3.72f, 167.43f, 3.48f, 166.07f, 3.48f);
            bezier24Path.cubicTo(164.12f, 3.48f, 162.61f, 3.97f, 161.54f, 4.95f);
            bezier24Path.cubicTo(160.47f, 5.94f, 159.94f, 7.09f, 159.94f, 8.4f);
            bezier24Path.cubicTo(159.95f, 9.35f, 160.11f, 10.12f, 160.41f, 10.71f);
            bezier24Path.cubicTo(160.71f, 11.3f, 161.14f, 11.76f, 161.7f, 12.11f);
            bezier24Path.cubicTo(162.26f, 12.45f, 163.09f, 12.77f, 164.17f, 13.05f);
            bezier24Path.cubicTo(165.01f, 13.23f, 166.17f, 13.44f, 167.65f, 13.7f);
            bezier24Path.cubicTo(169.13f, 13.96f, 170.1f, 14.14f, 170.54f, 14.24f);
            bezier24Path.cubicTo(171.7f, 14.54f, 172.65f, 14.9f, 173.36f, 15.32f);
            bezier24Path.cubicTo(174.08f, 15.75f, 174.65f, 16.23f, 175.07f, 16.79f);
            bezier24Path.cubicTo(175.5f, 17.34f, 175.84f, 18.03f, 176.12f, 18.87f);
            bezier24Path.cubicTo(176.39f, 19.71f, 176.52f, 20.65f, 176.52f, 21.7f);
            bezier24Path.cubicTo(176.52f, 23.54f, 176.14f, 25.15f, 175.38f, 26.54f);
            bezier24Path.cubicTo(174.81f, 27.59f, 174.01f, 28.55f, 173f, 29.41f);
            bezier24Path.cubicTo(171.98f, 30.28f, 170.93f, 30.93f, 169.86f, 31.36f);
            bezier24Path.cubicTo(168.13f, 32.05f, 166.07f, 32.39f, 163.66f, 32.39f);
            bezier24Path.cubicTo(161.9f, 32.39f, 160.32f, 32.23f, 158.95f, 31.9f);
            bezier24Path.cubicTo(157.57f, 31.57f, 156.06f, 31f, 154.41f, 30.2f);
            bezier24Path.cubicTo(154.85f, 28.56f, 155.08f, 26.08f, 155.1f, 22.73f);
            bezier24Path.lineTo(156.9f, 22.73f);
            bezier24Path.cubicTo(156.88f, 23.77f, 156.95f, 25.05f, 157.14f, 26.59f);
            bezier24Path.cubicTo(157.69f, 27.47f, 158.62f, 28.26f, 159.94f, 28.93f);
            bezier24Path.cubicTo(161.26f, 29.6f, 162.7f, 29.94f, 164.26f, 29.94f);
            bezier24Path.cubicTo(165.62f, 29.94f, 166.84f, 29.7f, 167.91f, 29.22f);
            bezier24Path.cubicTo(168.98f, 28.74f, 169.75f, 28.08f, 170.23f, 27.23f);
            bezier24Path.cubicTo(170.71f, 26.38f, 170.95f, 25.42f, 170.95f, 24.35f);
            bezier24Path.cubicTo(170.95f, 23.44f, 170.78f, 22.67f, 170.45f, 22.02f);
            bezier24Path.cubicTo(170.11f, 21.38f, 169.58f, 20.86f, 168.87f, 20.47f);
            bezier24Path.cubicTo(168.15f, 20.09f, 166.89f, 19.69f, 165.08f, 19.27f);
            bezier24Path.cubicTo(162.48f, 18.72f, 160.78f, 18.33f, 159.96f, 18.09f);
            bezier24Path.cubicTo(158.73f, 17.71f, 157.73f, 17.18f, 156.98f, 16.47f);
            bezier24Path.cubicTo(156.23f, 15.77f, 155.66f, 14.92f, 155.29f, 13.92f);
            bezier24Path.cubicTo(154.92f, 12.93f, 154.73f, 11.86f, 154.73f, 10.71f);
            bezier24Path.cubicTo(154.73f, 9.1f, 155.07f, 7.62f, 155.74f, 6.27f);
            bezier24Path.cubicTo(156.42f, 4.91f, 157.31f, 3.86f, 158.41f, 3.11f);
            bezier24Path.cubicTo(159.51f, 2.37f, 160.76f, 1.83f, 162.15f, 1.51f);
            bezier24Path.cubicTo(163.54f, 1.19f, 164.97f, 1.03f, 166.43f, 1.03f);
            bezier24Path.cubicTo(167.95f, 1.03f, 169.43f, 1.16f, 170.86f, 1.44f);
            bezier24Path.cubicTo(172.28f, 1.71f, 173.52f, 2.1f, 174.57f, 2.62f);
            bezier24Path.lineTo(174.74f, 3.13f);
            bezier24Path.cubicTo(174.54f, 4.07f, 174.39f, 4.98f, 174.3f, 5.88f);
            bezier24Path.cubicTo(174.2f, 6.77f, 174.14f, 7.95f, 174.09f, 9.42f);
            bezier24Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier24Path, paint);
            
            // Bezier 25
            RectF bezier25Rect = CacheForTitle.bezier25Rect;
            bezier25Rect.set(180.55f, 10.88f, 199.85f, 32.2f);
            Path bezier25Path = CacheForTitle.bezier25Path;
            bezier25Path.reset();
            bezier25Path.moveTo(191.95f, 21.25f);
            bezier25Path.cubicTo(190.73f, 21.51f, 189.62f, 21.82f, 188.61f, 22.19f);
            bezier25Path.cubicTo(187.59f, 22.55f, 186.9f, 23f, 186.51f, 23.54f);
            bezier25Path.cubicTo(186.12f, 24.08f, 185.93f, 24.76f, 185.93f, 25.57f);
            bezier25Path.cubicTo(185.93f, 26.49f, 186.16f, 27.2f, 186.63f, 27.7f);
            bezier25Path.cubicTo(187.09f, 28.21f, 187.7f, 28.46f, 188.47f, 28.46f);
            bezier25Path.cubicTo(189.11f, 28.46f, 189.76f, 28.27f, 190.41f, 27.9f);
            bezier25Path.cubicTo(191.06f, 27.52f, 191.58f, 27.05f, 191.95f, 26.48f);
            bezier25Path.lineTo(191.95f, 21.25f);
            bezier25Path.close();
            bezier25Path.moveTo(199.85f, 30.03f);
            bezier25Path.lineTo(199.85f, 31.64f);
            bezier25Path.cubicTo(198.2f, 31.57f, 196.73f, 31.53f, 195.46f, 31.53f);
            bezier25Path.cubicTo(194.25f, 31.53f, 193.08f, 31.57f, 191.95f, 31.64f);
            bezier25Path.lineTo(191.76f, 31.4f);
            bezier25Path.lineTo(191.95f, 28.59f);
            bezier25Path.cubicTo(191.43f, 28.92f, 189.91f, 30.05f, 187.39f, 31.99f);
            bezier25Path.cubicTo(186.74f, 32.13f, 186.13f, 32.2f, 185.54f, 32.2f);
            bezier25Path.cubicTo(183.98f, 32.2f, 182.75f, 31.74f, 181.87f, 30.82f);
            bezier25Path.cubicTo(180.99f, 29.91f, 180.55f, 28.59f, 180.55f, 26.86f);
            bezier25Path.cubicTo(180.55f, 25.7f, 180.75f, 24.75f, 181.14f, 24f);
            bezier25Path.cubicTo(181.53f, 23.26f, 181.96f, 22.71f, 182.41f, 22.36f);
            bezier25Path.cubicTo(182.86f, 22.01f, 183.56f, 21.67f, 184.51f, 21.34f);
            bezier25Path.cubicTo(186.77f, 20.53f, 189.25f, 19.9f, 191.95f, 19.44f);
            bezier25Path.cubicTo(191.98f, 17.74f, 191.63f, 16.44f, 190.9f, 15.55f);
            bezier25Path.cubicTo(190.15f, 14.66f, 189.02f, 14.21f, 187.5f, 14.21f);
            bezier25Path.cubicTo(186.88f, 14.21f, 186.29f, 14.29f, 185.73f, 14.45f);
            bezier25Path.cubicTo(185.49f, 14.52f, 185.2f, 14.67f, 184.87f, 14.88f);
            bezier25Path.lineTo(183.97f, 17.05f);
            bezier25Path.lineTo(182.51f, 16.73f);
            bezier25Path.lineTo(182.64f, 13.96f);
            bezier25Path.cubicTo(183.7f, 13.24f, 184.71f, 12.62f, 185.67f, 12.08f);
            bezier25Path.cubicTo(186.63f, 11.55f, 187.3f, 11.23f, 187.69f, 11.12f);
            bezier25Path.cubicTo(188.22f, 10.96f, 188.97f, 10.88f, 189.93f, 10.88f);
            bezier25Path.cubicTo(191.49f, 10.88f, 192.78f, 11.11f, 193.79f, 11.56f);
            bezier25Path.cubicTo(194.8f, 12.01f, 195.55f, 12.54f, 196.03f, 13.16f);
            bezier25Path.cubicTo(196.51f, 13.78f, 196.84f, 14.44f, 197.02f, 15.14f);
            bezier25Path.cubicTo(197.2f, 15.84f, 197.29f, 16.73f, 197.29f, 17.81f);
            bezier25Path.cubicTo(197.29f, 18.27f, 197.25f, 19.46f, 197.18f, 21.4f);
            bezier25Path.cubicTo(197.14f, 22.69f, 197.11f, 23.75f, 197.11f, 24.56f);
            bezier25Path.cubicTo(197.11f, 27.12f, 197.19f, 28.66f, 197.33f, 29.21f);
            bezier25Path.cubicTo(197.39f, 29.47f, 197.5f, 29.64f, 197.67f, 29.73f);
            bezier25Path.cubicTo(197.9f, 29.84f, 198.63f, 29.94f, 199.85f, 30.03f);
            bezier25Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier25Path, paint);
            
            // Bezier 26
            RectF bezier26Rect = CacheForTitle.bezier26Rect;
            bezier26Rect.set(202.41f, -0.2f, 218.07f, 31.64f);
            Path bezier26Path = CacheForTitle.bezier26Path;
            bezier26Path.reset();
            bezier26Path.moveTo(202.41f, 31.64f);
            bezier26Path.lineTo(202.41f, 30.01f);
            bezier26Path.cubicTo(204.1f, 29.89f, 205.1f, 29.73f, 205.42f, 29.53f);
            bezier26Path.cubicTo(205.66f, 29.37f, 205.81f, 29.09f, 205.85f, 28.67f);
            bezier26Path.cubicTo(205.95f, 27.93f, 206.01f, 25.59f, 206.04f, 21.66f);
            bezier26Path.lineTo(206.04f, 15.2f);
            bezier26Path.lineTo(205.44f, 15.18f);
            bezier26Path.lineTo(202.51f, 15.31f);
            bezier26Path.lineTo(202.51f, 14.26f);
            bezier26Path.cubicTo(204.42f, 13.27f, 205.41f, 12.74f, 205.48f, 12.69f);
            bezier26Path.cubicTo(205.67f, 12.56f, 205.76f, 12.39f, 205.76f, 12.17f);
            bezier26Path.cubicTo(205.76f, 11.5f, 205.8f, 10.66f, 205.86f, 9.66f);
            bezier26Path.cubicTo(205.92f, 8.67f, 206.02f, 7.96f, 206.15f, 7.54f);
            bezier26Path.cubicTo(206.28f, 7.13f, 206.49f, 6.73f, 206.77f, 6.34f);
            bezier26Path.cubicTo(207.25f, 5.71f, 208.29f, 4.69f, 209.92f, 3.29f);
            bezier26Path.lineTo(212.52f, 0.96f);
            bezier26Path.cubicTo(212.93f, 0.6f, 213.42f, 0.32f, 213.96f, 0.11f);
            bezier26Path.cubicTo(214.5f, -0.1f, 215.12f, -0.2f, 215.81f, -0.2f);
            bezier26Path.cubicTo(216.51f, -0.2f, 217.27f, -0.07f, 218.07f, 0.19f);
            bezier26Path.cubicTo(217.84f, 1.74f, 217.74f, 3.17f, 217.77f, 4.49f);
            bezier26Path.lineTo(216.91f, 4.88f);
            bezier26Path.cubicTo(216.48f, 4.48f, 216.08f, 4.2f, 215.7f, 4.05f);
            bezier26Path.cubicTo(215.33f, 3.9f, 214.86f, 3.82f, 214.28f, 3.82f);
            bezier26Path.cubicTo(213.45f, 3.82f, 212.79f, 3.98f, 212.3f, 4.3f);
            bezier26Path.cubicTo(211.96f, 4.52f, 211.73f, 4.83f, 211.62f, 5.22f);
            bezier26Path.cubicTo(211.44f, 5.8f, 211.36f, 7.23f, 211.36f, 9.52f);
            bezier26Path.lineTo(211.36f, 12.52f);
            bezier26Path.lineTo(213.89f, 12.49f);
            bezier26Path.cubicTo(215.13f, 12.46f, 216.2f, 12.41f, 217.1f, 12.34f);
            bezier26Path.lineTo(217.38f, 12.56f);
            bezier26Path.cubicTo(217.31f, 12.8f, 217.25f, 13.05f, 217.21f, 13.31f);
            bezier26Path.lineTo(216.86f, 15.23f);
            bezier26Path.lineTo(214.69f, 15.18f);
            bezier26Path.cubicTo(214.06f, 15.15f, 213.7f, 15.14f, 213.62f, 15.14f);
            bezier26Path.cubicTo(213.36f, 15.14f, 212.6f, 15.16f, 211.36f, 15.2f);
            bezier26Path.lineTo(211.36f, 22.07f);
            bezier26Path.cubicTo(211.36f, 23.6f, 211.37f, 25.06f, 211.41f, 26.46f);
            bezier26Path.cubicTo(211.45f, 27.85f, 211.51f, 28.69f, 211.59f, 28.97f);
            bezier26Path.cubicTo(211.67f, 29.17f, 211.78f, 29.34f, 211.93f, 29.47f);
            bezier26Path.cubicTo(212.08f, 29.6f, 212.33f, 29.69f, 212.67f, 29.75f);
            bezier26Path.cubicTo(212.76f, 29.76f, 213.73f, 29.84f, 215.6f, 29.98f);
            bezier26Path.lineTo(215.6f, 31.64f);
            bezier26Path.lineTo(208.26f, 31.53f);
            bezier26Path.cubicTo(207.35f, 31.53f, 205.4f, 31.57f, 202.41f, 31.64f);
            bezier26Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier26Path, paint);
            
            // Bezier 27
            RectF bezier27Rect = CacheForTitle.bezier27Rect;
            bezier27Rect.set(220.01f, 10.88f, 238.49f, 32.39f);
            Path bezier27Path = CacheForTitle.bezier27Path;
            bezier27Path.reset();
            bezier27Path.moveTo(232.85f, 19.42f);
            bezier27Path.cubicTo(232.91f, 17.14f, 232.6f, 15.54f, 231.92f, 14.62f);
            bezier27Path.cubicTo(231.24f, 13.72f, 230.35f, 13.27f, 229.26f, 13.27f);
            bezier27Path.cubicTo(228.14f, 13.27f, 227.21f, 13.74f, 226.48f, 14.69f);
            bezier27Path.cubicTo(225.73f, 15.65f, 225.39f, 17.23f, 225.45f, 19.42f);
            bezier27Path.cubicTo(226.29f, 19.55f, 227.71f, 19.61f, 229.69f, 19.61f);
            bezier27Path.cubicTo(230.95f, 19.61f, 232f, 19.55f, 232.85f, 19.42f);
            bezier27Path.close();
            bezier27Path.moveTo(237.97f, 28.33f);
            bezier27Path.lineTo(237.02f, 30.44f);
            bezier27Path.cubicTo(235.85f, 31.15f, 234.64f, 31.68f, 233.39f, 32.03f);
            bezier27Path.cubicTo(232.45f, 32.27f, 231.39f, 32.39f, 230.2f, 32.39f);
            bezier27Path.cubicTo(228.78f, 32.39f, 227.53f, 32.23f, 226.45f, 31.9f);
            bezier27Path.cubicTo(225.37f, 31.57f, 224.44f, 31.12f, 223.67f, 30.54f);
            bezier27Path.cubicTo(222.91f, 29.97f, 222.23f, 29.27f, 221.65f, 28.44f);
            bezier27Path.cubicTo(221.07f, 27.6f, 220.65f, 26.64f, 220.39f, 25.55f);
            bezier27Path.cubicTo(220.13f, 24.46f, 220.01f, 23.27f, 220.01f, 21.98f);
            bezier27Path.cubicTo(220.01f, 20.1f, 220.26f, 18.42f, 220.76f, 16.95f);
            bezier27Path.cubicTo(221.1f, 15.91f, 221.5f, 15.17f, 221.96f, 14.71f);
            bezier27Path.cubicTo(222.25f, 14.42f, 223f, 13.88f, 224.2f, 13.09f);
            bezier27Path.cubicTo(225.41f, 12.31f, 226.28f, 11.79f, 226.83f, 11.55f);
            bezier27Path.cubicTo(227.83f, 11.1f, 229.01f, 10.88f, 230.38f, 10.88f);
            bezier27Path.cubicTo(232.3f, 10.88f, 233.88f, 11.28f, 235.11f, 12.08f);
            bezier27Path.cubicTo(236.34f, 12.89f, 237.21f, 13.91f, 237.72f, 15.16f);
            bezier27Path.cubicTo(238.23f, 16.41f, 238.49f, 17.92f, 238.49f, 19.7f);
            bezier27Path.cubicTo(238.49f, 20.1f, 238.47f, 20.49f, 238.44f, 20.86f);
            bezier27Path.cubicTo(238.08f, 20.98f, 237.54f, 21.11f, 236.81f, 21.25f);
            bezier27Path.cubicTo(235.83f, 21.44f, 235.17f, 21.54f, 234.83f, 21.55f);
            bezier27Path.cubicTo(233.75f, 21.64f, 232.33f, 21.69f, 230.57f, 21.7f);
            bezier27Path.cubicTo(228.81f, 21.72f, 227.83f, 21.73f, 227.64f, 21.74f);
            bezier27Path.cubicTo(227.46f, 21.76f, 227.25f, 21.77f, 227.02f, 21.77f);
            bezier27Path.lineTo(225.6f, 21.77f);
            bezier27Path.cubicTo(225.71f, 24.03f, 226.42f, 25.82f, 227.71f, 27.13f);
            bezier27Path.cubicTo(229f, 28.45f, 230.59f, 29.1f, 232.48f, 29.1f);
            bezier27Path.cubicTo(233.3f, 29.1f, 234.05f, 29.01f, 234.74f, 28.83f);
            bezier27Path.cubicTo(235.43f, 28.65f, 236.33f, 28.28f, 237.45f, 27.72f);
            bezier27Path.lineTo(237.97f, 28.33f);
            bezier27Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier27Path, paint);
            
            // Bezier 28
            RectF bezier28Rect = CacheForTitle.bezier28Rect;
            bezier28Rect.set(253.55f, 1.03f, 275.66f, 32.39f);
            Path bezier28Path = CacheForTitle.bezier28Path;
            bezier28Path.reset();
            bezier28Path.moveTo(273.23f, 9.42f);
            bezier28Path.lineTo(271.42f, 9.42f);
            bezier28Path.cubicTo(271.4f, 7.75f, 271.32f, 6.58f, 271.21f, 5.89f);
            bezier28Path.cubicTo(270.76f, 5.26f, 269.99f, 4.7f, 268.9f, 4.21f);
            bezier28Path.cubicTo(267.8f, 3.72f, 266.57f, 3.48f, 265.21f, 3.48f);
            bezier28Path.cubicTo(263.26f, 3.48f, 261.75f, 3.97f, 260.68f, 4.95f);
            bezier28Path.cubicTo(259.61f, 5.94f, 259.08f, 7.09f, 259.08f, 8.4f);
            bezier28Path.cubicTo(259.09f, 9.35f, 259.25f, 10.12f, 259.55f, 10.71f);
            bezier28Path.cubicTo(259.85f, 11.3f, 260.28f, 11.76f, 260.84f, 12.11f);
            bezier28Path.cubicTo(261.4f, 12.45f, 262.22f, 12.77f, 263.31f, 13.05f);
            bezier28Path.cubicTo(264.14f, 13.23f, 265.3f, 13.44f, 266.79f, 13.7f);
            bezier28Path.cubicTo(268.27f, 13.96f, 269.24f, 14.14f, 269.68f, 14.24f);
            bezier28Path.cubicTo(270.84f, 14.54f, 271.78f, 14.9f, 272.5f, 15.32f);
            bezier28Path.cubicTo(273.22f, 15.75f, 273.79f, 16.23f, 274.21f, 16.79f);
            bezier28Path.cubicTo(274.63f, 17.34f, 274.98f, 18.03f, 275.25f, 18.87f);
            bezier28Path.cubicTo(275.53f, 19.71f, 275.66f, 20.65f, 275.66f, 21.7f);
            bezier28Path.cubicTo(275.66f, 23.54f, 275.28f, 25.15f, 274.52f, 26.54f);
            bezier28Path.cubicTo(273.95f, 27.59f, 273.15f, 28.55f, 272.13f, 29.41f);
            bezier28Path.cubicTo(271.12f, 30.28f, 270.07f, 30.93f, 268.99f, 31.36f);
            bezier28Path.cubicTo(267.27f, 32.05f, 265.21f, 32.39f, 262.8f, 32.39f);
            bezier28Path.cubicTo(261.03f, 32.39f, 259.46f, 32.23f, 258.08f, 31.9f);
            bezier28Path.cubicTo(256.71f, 31.57f, 255.2f, 31f, 253.55f, 30.2f);
            bezier28Path.cubicTo(253.99f, 28.56f, 254.22f, 26.08f, 254.23f, 22.73f);
            bezier28Path.lineTo(256.04f, 22.73f);
            bezier28Path.cubicTo(256.01f, 23.77f, 256.09f, 25.05f, 256.28f, 26.59f);
            bezier28Path.cubicTo(256.82f, 27.47f, 257.76f, 28.26f, 259.08f, 28.93f);
            bezier28Path.cubicTo(260.39f, 29.6f, 261.84f, 29.94f, 263.4f, 29.94f);
            bezier28Path.cubicTo(264.76f, 29.94f, 265.98f, 29.7f, 267.05f, 29.22f);
            bezier28Path.cubicTo(268.11f, 28.74f, 268.89f, 28.08f, 269.37f, 27.23f);
            bezier28Path.cubicTo(269.85f, 26.38f, 270.09f, 25.42f, 270.09f, 24.35f);
            bezier28Path.cubicTo(270.09f, 23.44f, 269.92f, 22.67f, 269.58f, 22.02f);
            bezier28Path.cubicTo(269.25f, 21.38f, 268.72f, 20.86f, 268f, 20.47f);
            bezier28Path.cubicTo(267.29f, 20.09f, 266.02f, 19.69f, 264.22f, 19.27f);
            bezier28Path.cubicTo(261.62f, 18.72f, 259.91f, 18.33f, 259.1f, 18.09f);
            bezier28Path.cubicTo(257.86f, 17.71f, 256.87f, 17.18f, 256.12f, 16.47f);
            bezier28Path.cubicTo(255.36f, 15.77f, 254.8f, 14.92f, 254.43f, 13.92f);
            bezier28Path.cubicTo(254.06f, 12.93f, 253.87f, 11.86f, 253.87f, 10.71f);
            bezier28Path.cubicTo(253.87f, 9.1f, 254.21f, 7.62f, 254.88f, 6.27f);
            bezier28Path.cubicTo(255.55f, 4.91f, 256.44f, 3.86f, 257.55f, 3.11f);
            bezier28Path.cubicTo(258.65f, 2.37f, 259.9f, 1.83f, 261.29f, 1.51f);
            bezier28Path.cubicTo(262.68f, 1.19f, 264.11f, 1.03f, 265.57f, 1.03f);
            bezier28Path.cubicTo(267.09f, 1.03f, 268.57f, 1.16f, 269.99f, 1.44f);
            bezier28Path.cubicTo(271.42f, 1.71f, 272.66f, 2.1f, 273.7f, 2.62f);
            bezier28Path.lineTo(273.88f, 3.13f);
            bezier28Path.cubicTo(273.68f, 4.07f, 273.53f, 4.98f, 273.44f, 5.88f);
            bezier28Path.cubicTo(273.34f, 6.77f, 273.27f, 7.95f, 273.23f, 9.42f);
            bezier28Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier28Path, paint);
            
            // Bezier 29
            RectF bezier29Rect = CacheForTitle.bezier29Rect;
            bezier29Rect.set(279.06f, 10.77f, 302.83f, 43f);
            Path bezier29Path = CacheForTitle.bezier29Path;
            bezier29Path.reset();
            bezier29Path.moveTo(287.71f, 27.36f);
            bezier29Path.cubicTo(288.37f, 28.03f, 289.06f, 28.54f, 289.78f, 28.88f);
            bezier29Path.cubicTo(290.49f, 29.21f, 291.24f, 29.38f, 292.01f, 29.38f);
            bezier29Path.cubicTo(293.05f, 29.38f, 293.96f, 29.12f, 294.76f, 28.61f);
            bezier29Path.cubicTo(295.55f, 28.09f, 296.18f, 27.22f, 296.63f, 26f);
            bezier29Path.cubicTo(297.08f, 24.79f, 297.31f, 23.38f, 297.31f, 21.79f);
            bezier29Path.cubicTo(297.31f, 20.77f, 297.19f, 19.8f, 296.96f, 18.89f);
            bezier29Path.cubicTo(296.73f, 17.98f, 296.42f, 17.24f, 296.01f, 16.68f);
            bezier29Path.cubicTo(295.61f, 16.11f, 295.06f, 15.64f, 294.37f, 15.26f);
            bezier29Path.cubicTo(293.67f, 14.88f, 292.92f, 14.69f, 292.1f, 14.69f);
            bezier29Path.cubicTo(291.31f, 14.69f, 290.51f, 14.89f, 289.7f, 15.29f);
            bezier29Path.cubicTo(288.89f, 15.69f, 288.23f, 16.2f, 287.71f, 16.82f);
            bezier29Path.lineTo(287.71f, 27.36f);
            bezier29Path.close();
            bezier29Path.moveTo(287.71f, 31.49f);
            bezier29Path.lineTo(287.71f, 39.45f);
            bezier29Path.cubicTo(287.71f, 40.11f, 287.77f, 40.52f, 287.9f, 40.69f);
            bezier29Path.cubicTo(288.03f, 40.85f, 288.27f, 40.97f, 288.61f, 41.04f);
            bezier29Path.cubicTo(288.76f, 41.07f, 289.72f, 41.16f, 291.52f, 41.3f);
            bezier29Path.lineTo(291.52f, 43f);
            bezier29Path.lineTo(284.7f, 42.85f);
            bezier29Path.lineTo(279.06f, 43f);
            bezier29Path.lineTo(279.06f, 41.3f);
            bezier29Path.cubicTo(280.37f, 41.3f, 281.17f, 41.24f, 281.47f, 41.13f);
            bezier29Path.cubicTo(281.64f, 41.07f, 281.78f, 40.97f, 281.89f, 40.82f);
            bezier29Path.cubicTo(282f, 40.67f, 282.07f, 40.48f, 282.09f, 40.27f);
            bezier29Path.cubicTo(282.17f, 39.69f, 282.23f, 38.46f, 282.29f, 36.57f);
            bezier29Path.lineTo(282.35f, 31.94f);
            bezier29Path.lineTo(282.35f, 21.98f);
            bezier29Path.cubicTo(282.35f, 20.17f, 282.32f, 18.59f, 282.27f, 17.24f);
            bezier29Path.cubicTo(282.21f, 15.88f, 282.11f, 15.08f, 281.97f, 14.84f);
            bezier29Path.cubicTo(281.87f, 14.68f, 281.71f, 14.56f, 281.51f, 14.48f);
            bezier29Path.cubicTo(281.31f, 14.4f, 280.5f, 14.36f, 279.06f, 14.34f);
            bezier29Path.lineTo(279.06f, 12.67f);
            bezier29Path.cubicTo(281.2f, 12.44f, 282.81f, 12.19f, 283.9f, 11.93f);
            bezier29Path.cubicTo(284.99f, 11.67f, 286.12f, 11.29f, 287.28f, 10.77f);
            bezier29Path.lineTo(287.77f, 11.1f);
            bezier29Path.lineTo(287.71f, 14.71f);
            bezier29Path.cubicTo(287.93f, 14.54f, 288.28f, 14.24f, 288.79f, 13.83f);
            bezier29Path.lineTo(290.94f, 12.06f);
            bezier29Path.cubicTo(291.08f, 11.93f, 291.3f, 11.73f, 291.58f, 11.46f);
            bezier29Path.cubicTo(292.14f, 11.23f, 292.61f, 11.08f, 292.99f, 11f);
            bezier29Path.cubicTo(293.37f, 10.92f, 293.9f, 10.88f, 294.57f, 10.88f);
            bezier29Path.cubicTo(296.09f, 10.88f, 297.32f, 11.1f, 298.25f, 11.53f);
            bezier29Path.cubicTo(299.59f, 12.14f, 300.68f, 13.1f, 301.54f, 14.4f);
            bezier29Path.cubicTo(302.4f, 15.7f, 302.83f, 17.28f, 302.83f, 19.14f);
            bezier29Path.cubicTo(302.83f, 20.32f, 302.68f, 21.49f, 302.36f, 22.65f);
            bezier29Path.cubicTo(302.05f, 23.81f, 301.69f, 24.73f, 301.3f, 25.42f);
            bezier29Path.cubicTo(300.9f, 26.11f, 300.48f, 26.69f, 300.04f, 27.14f);
            bezier29Path.cubicTo(299.71f, 27.49f, 299.15f, 27.95f, 298.37f, 28.52f);
            bezier29Path.cubicTo(297.59f, 29.1f, 296.87f, 29.65f, 296.21f, 30.2f);
            bezier29Path.cubicTo(295.55f, 30.75f, 295.08f, 31.11f, 294.79f, 31.3f);
            bezier29Path.cubicTo(294.33f, 31.58f, 293.89f, 31.78f, 293.48f, 31.9f);
            bezier29Path.cubicTo(292.9f, 32.07f, 292.24f, 32.16f, 291.47f, 32.16f);
            bezier29Path.cubicTo(290.87f, 32.16f, 290.26f, 32.1f, 289.63f, 31.99f);
            bezier29Path.cubicTo(288.99f, 31.87f, 288.36f, 31.7f, 287.71f, 31.49f);
            bezier29Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier29Path, paint);
            
            // Bezier 30
            RectF bezier30Rect = CacheForTitle.bezier30Rect;
            bezier30Rect.set(306.6f, 10.88f, 325.9f, 32.2f);
            Path bezier30Path = CacheForTitle.bezier30Path;
            bezier30Path.reset();
            bezier30Path.moveTo(318f, 21.25f);
            bezier30Path.cubicTo(316.78f, 21.51f, 315.67f, 21.82f, 314.66f, 22.19f);
            bezier30Path.cubicTo(313.65f, 22.55f, 312.95f, 23f, 312.56f, 23.54f);
            bezier30Path.cubicTo(312.17f, 24.08f, 311.98f, 24.76f, 311.98f, 25.57f);
            bezier30Path.cubicTo(311.98f, 26.49f, 312.21f, 27.2f, 312.68f, 27.7f);
            bezier30Path.cubicTo(313.14f, 28.21f, 313.76f, 28.46f, 314.52f, 28.46f);
            bezier30Path.cubicTo(315.16f, 28.46f, 315.81f, 28.27f, 316.46f, 27.9f);
            bezier30Path.cubicTo(317.12f, 27.52f, 317.63f, 27.05f, 318f, 26.48f);
            bezier30Path.lineTo(318f, 21.25f);
            bezier30Path.close();
            bezier30Path.moveTo(325.9f, 30.03f);
            bezier30Path.lineTo(325.9f, 31.64f);
            bezier30Path.cubicTo(324.25f, 31.57f, 322.79f, 31.53f, 321.51f, 31.53f);
            bezier30Path.cubicTo(320.31f, 31.53f, 319.14f, 31.57f, 318f, 31.64f);
            bezier30Path.lineTo(317.81f, 31.4f);
            bezier30Path.lineTo(318f, 28.59f);
            bezier30Path.cubicTo(317.49f, 28.92f, 315.97f, 30.05f, 313.44f, 31.99f);
            bezier30Path.cubicTo(312.8f, 32.13f, 312.18f, 32.2f, 311.59f, 32.2f);
            bezier30Path.cubicTo(310.03f, 32.2f, 308.81f, 31.74f, 307.92f, 30.82f);
            bezier30Path.cubicTo(307.04f, 29.91f, 306.6f, 28.59f, 306.6f, 26.86f);
            bezier30Path.cubicTo(306.6f, 25.7f, 306.8f, 24.75f, 307.19f, 24f);
            bezier30Path.cubicTo(307.59f, 23.26f, 308.01f, 22.71f, 308.46f, 22.36f);
            bezier30Path.cubicTo(308.91f, 22.01f, 309.61f, 21.67f, 310.56f, 21.34f);
            bezier30Path.cubicTo(312.83f, 20.53f, 315.31f, 19.9f, 318f, 19.44f);
            bezier30Path.cubicTo(318.03f, 17.74f, 317.68f, 16.44f, 316.95f, 15.55f);
            bezier30Path.cubicTo(316.2f, 14.66f, 315.07f, 14.21f, 313.55f, 14.21f);
            bezier30Path.cubicTo(312.93f, 14.21f, 312.34f, 14.29f, 311.78f, 14.45f);
            bezier30Path.cubicTo(311.54f, 14.52f, 311.25f, 14.67f, 310.92f, 14.88f);
            bezier30Path.lineTo(310.02f, 17.05f);
            bezier30Path.lineTo(308.56f, 16.73f);
            bezier30Path.lineTo(308.69f, 13.96f);
            bezier30Path.cubicTo(309.75f, 13.24f, 310.76f, 12.62f, 311.72f, 12.08f);
            bezier30Path.cubicTo(312.68f, 11.55f, 313.36f, 11.23f, 313.74f, 11.12f);
            bezier30Path.cubicTo(314.27f, 10.96f, 315.02f, 10.88f, 315.98f, 10.88f);
            bezier30Path.cubicTo(317.54f, 10.88f, 318.83f, 11.11f, 319.84f, 11.56f);
            bezier30Path.cubicTo(320.85f, 12.01f, 321.6f, 12.54f, 322.08f, 13.16f);
            bezier30Path.cubicTo(322.56f, 13.78f, 322.89f, 14.44f, 323.07f, 15.14f);
            bezier30Path.cubicTo(323.25f, 15.84f, 323.34f, 16.73f, 323.34f, 17.81f);
            bezier30Path.cubicTo(323.34f, 18.27f, 323.3f, 19.46f, 323.23f, 21.4f);
            bezier30Path.cubicTo(323.19f, 22.69f, 323.17f, 23.75f, 323.17f, 24.56f);
            bezier30Path.cubicTo(323.17f, 27.12f, 323.24f, 28.66f, 323.38f, 29.21f);
            bezier30Path.cubicTo(323.44f, 29.47f, 323.55f, 29.64f, 323.73f, 29.73f);
            bezier30Path.cubicTo(323.95f, 29.84f, 324.68f, 29.94f, 325.9f, 30.03f);
            bezier30Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier30Path, paint);
            
            // Bezier 31
            RectF bezier31Rect = CacheForTitle.bezier31Rect;
            bezier31Rect.set(328.85f, 10.88f, 345.43f, 32.39f);
            Path bezier31Path = CacheForTitle.bezier31Path;
            bezier31Path.reset();
            bezier31Path.moveTo(345.43f, 28.8f);
            bezier31Path.lineTo(344.49f, 30.89f);
            bezier31Path.cubicTo(343.25f, 31.5f, 342.25f, 31.91f, 341.49f, 32.1f);
            bezier31Path.cubicTo(340.72f, 32.3f, 339.8f, 32.39f, 338.72f, 32.39f);
            bezier31Path.cubicTo(336.37f, 32.39f, 334.46f, 31.94f, 333f, 31.02f);
            bezier31Path.cubicTo(331.53f, 30.1f, 330.42f, 28.79f, 329.66f, 27.08f);
            bezier31Path.cubicTo(329.12f, 25.88f, 328.85f, 24.27f, 328.85f, 22.26f);
            bezier31Path.cubicTo(328.85f, 20.75f, 328.99f, 19.52f, 329.28f, 18.56f);
            bezier31Path.cubicTo(329.56f, 17.6f, 329.97f, 16.75f, 330.5f, 16.02f);
            bezier31Path.cubicTo(330.86f, 15.53f, 331.34f, 15.08f, 331.94f, 14.64f);
            bezier31Path.lineTo(335.26f, 12.56f);
            bezier31Path.cubicTo(336.38f, 11.84f, 337.14f, 11.41f, 337.56f, 11.27f);
            bezier31Path.cubicTo(338.25f, 11.01f, 339.14f, 10.88f, 340.25f, 10.88f);
            bezier31Path.cubicTo(341.17f, 10.88f, 342.02f, 10.96f, 342.82f, 11.11f);
            bezier31Path.cubicTo(343.62f, 11.26f, 344.35f, 11.48f, 345.02f, 11.78f);
            bezier31Path.lineTo(345.24f, 12.15f);
            bezier31Path.lineTo(344.7f, 15.66f);
            bezier31Path.cubicTo(344.66f, 15.97f, 344.59f, 16.96f, 344.49f, 18.62f);
            bezier31Path.lineTo(342.81f, 18.62f);
            bezier31Path.cubicTo(342.72f, 17.35f, 342.62f, 16.4f, 342.49f, 15.79f);
            bezier31Path.cubicTo(342.18f, 15.3f, 341.72f, 14.9f, 341.09f, 14.59f);
            bezier31Path.cubicTo(340.46f, 14.28f, 339.68f, 14.13f, 338.76f, 14.13f);
            bezier31Path.cubicTo(337.67f, 14.13f, 336.81f, 14.33f, 336.16f, 14.73f);
            bezier31Path.cubicTo(335.52f, 15.13f, 335.04f, 15.81f, 334.74f, 16.75f);
            bezier31Path.cubicTo(334.44f, 17.7f, 334.29f, 18.85f, 334.29f, 20.2f);
            bezier31Path.cubicTo(334.29f, 22f, 334.6f, 23.62f, 335.21f, 25.05f);
            bezier31Path.cubicTo(335.83f, 26.47f, 336.65f, 27.52f, 337.66f, 28.19f);
            bezier31Path.cubicTo(338.67f, 28.85f, 339.91f, 29.19f, 341.39f, 29.19f);
            bezier31Path.cubicTo(342.06f, 29.19f, 342.7f, 29.11f, 343.3f, 28.96f);
            bezier31Path.cubicTo(343.91f, 28.81f, 344.48f, 28.59f, 345.02f, 28.31f);
            bezier31Path.lineTo(345.43f, 28.8f);
            bezier31Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier31Path, paint);
            
            // Bezier 32
            RectF bezier32Rect = CacheForTitle.bezier32Rect;
            bezier32Rect.set(348.47f, 10.88f, 366.95f, 32.39f);
            Path bezier32Path = CacheForTitle.bezier32Path;
            bezier32Path.reset();
            bezier32Path.moveTo(361.31f, 19.42f);
            bezier32Path.cubicTo(361.37f, 17.14f, 361.06f, 15.54f, 360.39f, 14.62f);
            bezier32Path.cubicTo(359.7f, 13.72f, 358.81f, 13.27f, 357.72f, 13.27f);
            bezier32Path.cubicTo(356.6f, 13.27f, 355.67f, 13.74f, 354.94f, 14.69f);
            bezier32Path.cubicTo(354.2f, 15.65f, 353.85f, 17.23f, 353.91f, 19.42f);
            bezier32Path.cubicTo(354.76f, 19.55f, 356.17f, 19.61f, 358.15f, 19.61f);
            bezier32Path.cubicTo(359.41f, 19.61f, 360.46f, 19.55f, 361.31f, 19.42f);
            bezier32Path.close();
            bezier32Path.moveTo(366.43f, 28.33f);
            bezier32Path.lineTo(365.48f, 30.44f);
            bezier32Path.cubicTo(364.31f, 31.15f, 363.1f, 31.68f, 361.85f, 32.03f);
            bezier32Path.cubicTo(360.92f, 32.27f, 359.86f, 32.39f, 358.67f, 32.39f);
            bezier32Path.cubicTo(357.25f, 32.39f, 355.99f, 32.23f, 354.91f, 31.9f);
            bezier32Path.cubicTo(353.83f, 31.57f, 352.9f, 31.12f, 352.14f, 30.54f);
            bezier32Path.cubicTo(351.37f, 29.97f, 350.69f, 29.27f, 350.11f, 28.44f);
            bezier32Path.cubicTo(349.53f, 27.6f, 349.11f, 26.64f, 348.85f, 25.55f);
            bezier32Path.cubicTo(348.6f, 24.46f, 348.47f, 23.27f, 348.47f, 21.98f);
            bezier32Path.cubicTo(348.47f, 20.1f, 348.72f, 18.42f, 349.22f, 16.95f);
            bezier32Path.cubicTo(349.56f, 15.91f, 349.97f, 15.17f, 350.42f, 14.71f);
            bezier32Path.cubicTo(350.71f, 14.42f, 351.46f, 13.88f, 352.66f, 13.09f);
            bezier32Path.cubicTo(353.87f, 12.31f, 354.74f, 11.79f, 355.29f, 11.55f);
            bezier32Path.cubicTo(356.29f, 11.1f, 357.47f, 10.88f, 358.84f, 10.88f);
            bezier32Path.cubicTo(360.76f, 10.88f, 362.34f, 11.28f, 363.57f, 12.08f);
            bezier32Path.cubicTo(364.8f, 12.89f, 365.67f, 13.91f, 366.18f, 15.16f);
            bezier32Path.cubicTo(366.69f, 16.41f, 366.95f, 17.92f, 366.95f, 19.7f);
            bezier32Path.cubicTo(366.95f, 20.1f, 366.93f, 20.49f, 366.9f, 20.86f);
            bezier32Path.cubicTo(366.55f, 20.98f, 366f, 21.11f, 365.27f, 21.25f);
            bezier32Path.cubicTo(364.29f, 21.44f, 363.63f, 21.54f, 363.29f, 21.55f);
            bezier32Path.cubicTo(362.21f, 21.64f, 360.79f, 21.69f, 359.03f, 21.7f);
            bezier32Path.cubicTo(357.27f, 21.72f, 356.29f, 21.73f, 356.1f, 21.74f);
            bezier32Path.cubicTo(355.92f, 21.76f, 355.71f, 21.77f, 355.48f, 21.77f);
            bezier32Path.lineTo(354.06f, 21.77f);
            bezier32Path.cubicTo(354.18f, 24.03f, 354.88f, 25.82f, 356.17f, 27.13f);
            bezier32Path.cubicTo(357.46f, 28.45f, 359.05f, 29.1f, 360.95f, 29.1f);
            bezier32Path.cubicTo(361.76f, 29.1f, 362.52f, 29.01f, 363.2f, 28.83f);
            bezier32Path.cubicTo(363.89f, 28.65f, 364.8f, 28.28f, 365.92f, 27.72f);
            bezier32Path.lineTo(366.43f, 28.33f);
            bezier32Path.close();
            
            paint.reset();
            paint.setFlags(Paint.ANTI_ALIAS_FLAG);
            paint.setStyle(Paint.Style.FILL);
            paint.setColor(fillColor);
            canvas.drawPath(bezier32Path, paint);
        }
        
        canvas.restore();
    }
    
    
    // Canvas Images
    // LogoTab
    
    private static Bitmap imageOfLogo = null;
    public static Bitmap imageOfLogo() {
        if (imageOfLogo != null)
            return imageOfLogo;
        
        imageOfLogo = Bitmap.createBitmap(325, 313, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfLogo);
        StyleKit.drawLogo(canvas);
        
        return imageOfLogo;
    }
    
    // TitleTab
    
    private static Bitmap imageOfTitle = null;
    public static Bitmap imageOfTitle() {
        if (imageOfTitle != null)
            return imageOfTitle;
        
        imageOfTitle = Bitmap.createBitmap(368, 45, Bitmap.Config.ARGB_8888);
        Canvas canvas = new Canvas(imageOfTitle);
        StyleKit.drawTitle(canvas);
        
        return imageOfTitle;
    }
    
    
    // Resizing Behavior
    public static void resizingBehaviorApply(ResizingBehavior behavior, RectF rect, RectF target, RectF result) {
        if (rect.equals(target) || target == null) {
            result.set(rect);
            return;
        }
        
        if (behavior == ResizingBehavior.Stretch) {
            result.set(target);
            return;
        }
        
        float xRatio = Math.abs(target.width() / rect.width());
        float yRatio = Math.abs(target.height() / rect.height());
        float scale = 0f;
        
        switch (behavior) {
            case AspectFit: {
                scale = Math.min(xRatio, yRatio);
                break;
            }
            case AspectFill: {
                scale = Math.max(xRatio, yRatio);
                break;
            }
            case Center: {
                scale = 1f;
                break;
            }
        }
        
        float newWidth = Math.abs(rect.width() * scale);
        float newHeight = Math.abs(rect.height() * scale);
        result.set(target.centerX() - newWidth / 2,
            target.centerY() - newHeight / 2,
            target.centerX() + newWidth / 2,
            target.centerY() + newHeight / 2);
    }
    
    
}

class PaintCodeGradient {
    private int[] colors;
    private float[] positions;
    
    public PaintCodeGradient(int[] colors, float[] positions) {
        if (positions == null) {
            int steps = colors.length;
            positions = new float[steps];
            for (int i = 0; i < steps; i++)
                positions[i] = (float) i / (steps - 1);
        }
        
        this.colors = colors;
        this.positions = positions;
    }
    
    public LinearGradient linearGradient(float x0, float y0, float x1, float y1) {
        return new LinearGradient(x0, y0, x1, y1, this.colors, this.positions, Shader.TileMode.CLAMP);
    }
    
    public RadialGradient radialGradient(float startX, float startY, float startRadius, float endX, float endY, float endRadius) {
        int steps = this.colors.length;
        float[] positions = new float[steps];
        
        if (startRadius > endRadius) {
            float ratio = endRadius / startRadius;
            int[] colors = new int[steps];
            
            for (int i = 0; i < steps; i++) {
                colors[i] = this.colors[steps - i - 1];
                positions[i] = (1 - this.positions[steps - i - 1]) * (1 - ratio) + ratio;
            }
            
            return new RadialGradient(endX, endY, startRadius, colors, positions, Shader.TileMode.CLAMP);
        } else {
            float ratio = startRadius / endRadius;
            
            for (int i = 0; i < steps; i++) {
                positions[i] = this.positions[i] * (1 - ratio) + ratio;
            }
            
            return new RadialGradient(startX, startY, endRadius, this.colors, positions, Shader.TileMode.CLAMP);
        }
    }
    
    @Override
    public boolean equals(Object obj) {
        if (!(obj instanceof PaintCodeGradient))
            return false;
        PaintCodeGradient other = (PaintCodeGradient) obj;
        return Arrays.equals(this.colors, other.colors) && Arrays.equals(this.positions, other.positions);
    }
}


class PaintCodeLinearGradient {
    private LinearGradient shader;
    private PaintCodeGradient paintCodeGradient;
    private float x0, y0, x1, y1;
    LinearGradient get(PaintCodeGradient paintCodeGradient, float x0, float y0, float x1, float y1) {
        if (this.shader == null || this.x0 != x0 || this.y0 != y0 || this.x1 != x1 || this.y1 != y1 || !this.paintCodeGradient.equals(paintCodeGradient)) {
            this.x0 = x0;
            this.y0 = y0;
            this.x1 = x1;
            this.y1 = y1;
            this.paintCodeGradient = paintCodeGradient;
            this.shader = paintCodeGradient.linearGradient(x0, y0, x1, y1);
        }
        return this.shader;
    }
}
